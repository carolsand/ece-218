[DEBUG]2024-04-10 03:22:20,250: <re.Match object; span=(1088, 1817), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 03:22:20,250: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 03:22:20,250: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 03:22:20,260: None
[DEBUG]2024-04-10 03:22:20,260: None
[DEBUG]2024-04-10 03:22:20,261: None
[DEBUG]2024-04-10 03:22:20,261: None
[DEBUG]2024-04-10 03:22:20,261: None
[DEBUG]2024-04-10 03:22:20,262: None
[DEBUG]2024-04-10 03:22:20,262: None
[DEBUG]2024-04-10 03:22:20,262: None
[DEBUG]2024-04-10 03:22:20,262: None
[DEBUG]2024-04-10 03:22:20,263: None
[DEBUG]2024-04-10 03:22:20,263: None
[DEBUG]2024-04-10 03:22:20,263: None
[DEBUG]2024-04-10 03:22:20,263: None
[DEBUG]2024-04-10 03:22:20,263: None
[DEBUG]2024-04-10 03:22:20,264: None
[DEBUG]2024-04-10 03:22:20,264: None
[DEBUG]2024-04-10 03:22:20,264: None
[DEBUG]2024-04-10 03:22:20,264: None
[DEBUG]2024-04-10 03:22:20,264: None
[DEBUG]2024-04-10 03:22:20,264: None
[DEBUG]2024-04-10 03:22:20,266: None
[DEBUG]2024-04-10 03:22:20,266: None
[DEBUG]2024-04-10 03:22:20,266: None
[DEBUG]2024-04-10 03:22:20,266: None
[DEBUG]2024-04-10 03:22:20,266: None
[DEBUG]2024-04-10 03:22:20,266: None
[DEBUG]2024-04-10 03:22:20,266: None
[DEBUG]2024-04-10 03:22:20,267: None
[DEBUG]2024-04-10 03:22:20,267: None
[DEBUG]2024-04-10 03:22:20,267: None
[DEBUG]2024-04-10 03:22:20,267: None
[DEBUG]2024-04-10 03:22:20,267: None
[DEBUG]2024-04-10 03:22:20,267: None
[DEBUG]2024-04-10 03:22:20,267: None
[DEBUG]2024-04-10 03:22:20,267: None
[DEBUG]2024-04-10 03:22:20,268: None
[DEBUG]2024-04-10 03:22:20,268: None
[DEBUG]2024-04-10 03:22:20,268: None
[DEBUG]2024-04-10 03:22:20,268: None
[DEBUG]2024-04-10 03:22:20,268: None
[DEBUG]2024-04-10 03:22:20,268: None
[DEBUG]2024-04-10 03:22:20,268: None
[DEBUG]2024-04-10 03:22:20,268: None
[DEBUG]2024-04-10 03:22:20,268: None
[DEBUG]2024-04-10 03:22:20,269: None
[DEBUG]2024-04-10 03:22:20,269: None
[DEBUG]2024-04-10 03:22:20,269: None
[DEBUG]2024-04-10 03:22:20,269: None
[DEBUG]2024-04-10 03:22:20,269: None
[DEBUG]2024-04-10 03:22:20,269: None
[DEBUG]2024-04-10 03:22:20,269: None
[DEBUG]2024-04-10 03:22:20,269: None
[DEBUG]2024-04-10 03:22:20,269: None
[DEBUG]2024-04-10 03:22:20,269: None
[DEBUG]2024-04-10 03:22:20,270: None
[DEBUG]2024-04-10 03:22:20,270: None
[DEBUG]2024-04-10 03:22:20,270: None
[DEBUG]2024-04-10 03:22:20,270: None
[DEBUG]2024-04-10 03:22:20,270: None
[DEBUG]2024-04-10 03:22:20,270: None
[DEBUG]2024-04-10 03:22:20,270: None
[DEBUG]2024-04-10 03:22:20,270: None
[DEBUG]2024-04-10 03:22:20,270: None
[DEBUG]2024-04-10 03:22:20,270: None
[DEBUG]2024-04-10 03:22:20,270: None
[DEBUG]2024-04-10 03:22:20,271: None
[DEBUG]2024-04-10 03:22:20,271: None
[DEBUG]2024-04-10 03:22:20,271: None
[DEBUG]2024-04-10 03:22:20,271: None
[DEBUG]2024-04-10 03:22:20,271: None
[DEBUG]2024-04-10 03:22:20,271: None
[DEBUG]2024-04-10 03:22:20,271: None
[DEBUG]2024-04-10 03:22:20,271: None
[DEBUG]2024-04-10 03:22:20,271: None
[DEBUG]2024-04-10 03:22:20,271: None
[DEBUG]2024-04-10 03:22:20,271: None
[DEBUG]2024-04-10 03:22:20,271: None
[DEBUG]2024-04-10 03:22:20,272: None
[DEBUG]2024-04-10 03:22:20,272: None
[DEBUG]2024-04-10 03:22:20,272: None
[DEBUG]2024-04-10 03:22:20,272: None
[DEBUG]2024-04-10 03:22:20,272: None
[DEBUG]2024-04-10 03:22:20,272: None
[DEBUG]2024-04-10 03:22:20,272: None
[DEBUG]2024-04-10 03:22:20,272: None
[DEBUG]2024-04-10 03:22:20,272: None
[DEBUG]2024-04-10 03:22:20,272: None
[DEBUG]2024-04-10 03:22:20,272: None
[DEBUG]2024-04-10 03:22:20,272: None
[DEBUG]2024-04-10 03:22:20,272: None
[DEBUG]2024-04-10 03:22:20,274: None
[DEBUG]2024-04-10 03:22:20,274: None
[DEBUG]2024-04-10 03:22:20,274: None
[DEBUG]2024-04-10 03:22:20,274: None
[DEBUG]2024-04-10 03:22:20,274: None
[DEBUG]2024-04-10 03:22:20,274: None
[DEBUG]2024-04-10 03:22:20,274: None
[DEBUG]2024-04-10 03:22:20,274: None
[DEBUG]2024-04-10 03:22:20,274: None
[DEBUG]2024-04-10 03:22:20,274: None
[DEBUG]2024-04-10 03:22:20,274: None
[DEBUG]2024-04-10 03:22:20,274: None
[DEBUG]2024-04-10 03:22:20,274: None
[DEBUG]2024-04-10 03:22:20,274: None
[DEBUG]2024-04-10 03:22:20,275: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:22:20,275: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:22:20,275: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:22:20,275: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:22:20,275: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:22:20,275: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:22:20,275: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:22:20,275: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:22:20,275: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:22:20,275: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:22:20,275: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:22:20,275: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:22:20,275: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:22:20,275: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:22:20,275: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:22:20,275: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:22:20,275: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:22:20,275: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:22:20,275: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:22:20,275: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:22:20,275: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:22:20,275: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:22:20,275: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:22:20,275: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:22:20,275: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:22:20,275: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:22:20,275: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:22:20,275: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:22:20,275: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:22:20,275: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:22:20,276: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:22:20,276: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:22:20,276: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:22:20,276: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:22:20,276: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:22:20,276: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:22:20,276: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:22:20,276: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:22:20,276: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:22:20,276: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:22:20,276: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:22:20,276: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:22:20,276: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:22:20,276: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:22:20,276: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:22:46,947: <re.Match object; span=(1088, 1817), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 03:22:46,947: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 03:22:46,947: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 03:22:46,949: None
[DEBUG]2024-04-10 03:22:46,949: None
[DEBUG]2024-04-10 03:22:46,949: None
[DEBUG]2024-04-10 03:22:46,949: None
[DEBUG]2024-04-10 03:22:46,949: None
[DEBUG]2024-04-10 03:22:46,950: None
[DEBUG]2024-04-10 03:22:46,950: None
[DEBUG]2024-04-10 03:22:46,950: None
[DEBUG]2024-04-10 03:22:46,950: None
[DEBUG]2024-04-10 03:22:46,951: None
[DEBUG]2024-04-10 03:22:46,951: None
[DEBUG]2024-04-10 03:22:46,951: None
[DEBUG]2024-04-10 03:22:46,951: None
[DEBUG]2024-04-10 03:22:46,951: None
[DEBUG]2024-04-10 03:22:46,952: None
[DEBUG]2024-04-10 03:22:46,952: None
[DEBUG]2024-04-10 03:22:46,952: None
[DEBUG]2024-04-10 03:22:46,952: None
[DEBUG]2024-04-10 03:22:46,952: None
[DEBUG]2024-04-10 03:22:46,952: None
[DEBUG]2024-04-10 03:22:46,952: None
[DEBUG]2024-04-10 03:22:46,952: None
[DEBUG]2024-04-10 03:22:46,952: None
[DEBUG]2024-04-10 03:22:46,952: None
[DEBUG]2024-04-10 03:22:46,952: None
[DEBUG]2024-04-10 03:22:46,952: None
[DEBUG]2024-04-10 03:22:46,952: None
[DEBUG]2024-04-10 03:22:46,953: None
[DEBUG]2024-04-10 03:22:46,953: None
[DEBUG]2024-04-10 03:22:46,953: None
[DEBUG]2024-04-10 03:22:46,953: None
[DEBUG]2024-04-10 03:22:46,953: None
[DEBUG]2024-04-10 03:22:46,953: None
[DEBUG]2024-04-10 03:22:46,953: None
[DEBUG]2024-04-10 03:22:46,953: None
[DEBUG]2024-04-10 03:22:46,954: None
[DEBUG]2024-04-10 03:22:46,954: None
[DEBUG]2024-04-10 03:22:46,954: None
[DEBUG]2024-04-10 03:22:46,954: None
[DEBUG]2024-04-10 03:22:46,954: None
[DEBUG]2024-04-10 03:22:46,954: None
[DEBUG]2024-04-10 03:22:46,954: None
[DEBUG]2024-04-10 03:22:46,954: None
[DEBUG]2024-04-10 03:22:46,954: None
[DEBUG]2024-04-10 03:22:46,955: None
[DEBUG]2024-04-10 03:22:46,955: None
[DEBUG]2024-04-10 03:22:46,955: None
[DEBUG]2024-04-10 03:22:46,955: None
[DEBUG]2024-04-10 03:22:46,955: None
[DEBUG]2024-04-10 03:22:46,955: None
[DEBUG]2024-04-10 03:22:46,955: None
[DEBUG]2024-04-10 03:22:46,955: None
[DEBUG]2024-04-10 03:22:46,955: None
[DEBUG]2024-04-10 03:22:46,955: None
[DEBUG]2024-04-10 03:22:46,956: None
[DEBUG]2024-04-10 03:22:46,956: None
[DEBUG]2024-04-10 03:22:46,956: None
[DEBUG]2024-04-10 03:22:46,956: None
[DEBUG]2024-04-10 03:22:46,956: None
[DEBUG]2024-04-10 03:22:46,956: None
[DEBUG]2024-04-10 03:22:46,956: None
[DEBUG]2024-04-10 03:22:46,956: None
[DEBUG]2024-04-10 03:22:46,956: None
[DEBUG]2024-04-10 03:22:46,956: None
[DEBUG]2024-04-10 03:22:46,956: None
[DEBUG]2024-04-10 03:22:46,957: None
[DEBUG]2024-04-10 03:22:46,957: None
[DEBUG]2024-04-10 03:22:46,957: None
[DEBUG]2024-04-10 03:22:46,957: None
[DEBUG]2024-04-10 03:22:46,957: None
[DEBUG]2024-04-10 03:22:46,957: None
[DEBUG]2024-04-10 03:22:46,957: None
[DEBUG]2024-04-10 03:22:46,957: None
[DEBUG]2024-04-10 03:22:46,957: None
[DEBUG]2024-04-10 03:22:46,957: None
[DEBUG]2024-04-10 03:22:46,957: None
[DEBUG]2024-04-10 03:22:46,957: None
[DEBUG]2024-04-10 03:22:46,958: None
[DEBUG]2024-04-10 03:22:46,958: None
[DEBUG]2024-04-10 03:22:46,958: None
[DEBUG]2024-04-10 03:22:46,958: None
[DEBUG]2024-04-10 03:22:46,958: None
[DEBUG]2024-04-10 03:22:46,958: None
[DEBUG]2024-04-10 03:22:46,958: None
[DEBUG]2024-04-10 03:22:46,958: None
[DEBUG]2024-04-10 03:22:46,958: None
[DEBUG]2024-04-10 03:22:46,958: None
[DEBUG]2024-04-10 03:22:46,958: None
[DEBUG]2024-04-10 03:22:46,958: None
[DEBUG]2024-04-10 03:22:46,958: None
[DEBUG]2024-04-10 03:22:46,958: None
[DEBUG]2024-04-10 03:22:46,958: None
[DEBUG]2024-04-10 03:22:46,958: None
[DEBUG]2024-04-10 03:22:46,958: None
[DEBUG]2024-04-10 03:22:46,958: None
[DEBUG]2024-04-10 03:22:46,958: None
[DEBUG]2024-04-10 03:22:46,958: None
[DEBUG]2024-04-10 03:22:46,958: None
[DEBUG]2024-04-10 03:22:46,958: None
[DEBUG]2024-04-10 03:22:46,958: None
[DEBUG]2024-04-10 03:22:46,958: None
[DEBUG]2024-04-10 03:22:46,958: None
[DEBUG]2024-04-10 03:22:46,958: None
[DEBUG]2024-04-10 03:22:46,958: None
[DEBUG]2024-04-10 03:22:46,959: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:22:46,959: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:22:46,959: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:22:46,959: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:22:46,959: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:22:46,959: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:22:46,959: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:22:46,959: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:22:46,959: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:22:46,959: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:22:46,959: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:22:46,959: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:22:46,959: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:22:46,959: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:22:46,959: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:22:46,960: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:22:46,960: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:22:46,960: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:22:46,960: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:22:46,960: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:22:46,960: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:22:46,960: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:22:46,960: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:22:46,960: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:22:46,960: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:22:46,960: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:22:46,960: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:22:46,960: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:22:46,960: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:22:46,960: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:22:46,960: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:22:46,960: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:22:46,960: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:22:46,960: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:22:46,960: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:22:46,960: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:22:46,960: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:22:46,960: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:22:46,960: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:22:46,960: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:22:46,960: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:22:46,960: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:22:46,960: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:22:46,960: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:22:46,960: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:23:42,017: <re.Match object; span=(1088, 1817), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 03:23:42,017: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 03:23:42,017: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 03:23:42,019: None
[DEBUG]2024-04-10 03:23:42,019: None
[DEBUG]2024-04-10 03:23:42,020: None
[DEBUG]2024-04-10 03:23:42,020: None
[DEBUG]2024-04-10 03:23:42,020: None
[DEBUG]2024-04-10 03:23:42,020: None
[DEBUG]2024-04-10 03:23:42,020: None
[DEBUG]2024-04-10 03:23:42,020: None
[DEBUG]2024-04-10 03:23:42,020: None
[DEBUG]2024-04-10 03:23:42,021: None
[DEBUG]2024-04-10 03:23:42,021: None
[DEBUG]2024-04-10 03:23:42,021: None
[DEBUG]2024-04-10 03:23:42,021: None
[DEBUG]2024-04-10 03:23:42,021: None
[DEBUG]2024-04-10 03:23:42,022: None
[DEBUG]2024-04-10 03:23:42,022: None
[DEBUG]2024-04-10 03:23:42,022: None
[DEBUG]2024-04-10 03:23:42,022: None
[DEBUG]2024-04-10 03:23:42,022: None
[DEBUG]2024-04-10 03:23:42,022: None
[DEBUG]2024-04-10 03:23:42,022: None
[DEBUG]2024-04-10 03:23:42,022: None
[DEBUG]2024-04-10 03:23:42,022: None
[DEBUG]2024-04-10 03:23:42,022: None
[DEBUG]2024-04-10 03:23:42,022: None
[DEBUG]2024-04-10 03:23:42,022: None
[DEBUG]2024-04-10 03:23:42,022: None
[DEBUG]2024-04-10 03:23:42,023: None
[DEBUG]2024-04-10 03:23:42,023: None
[DEBUG]2024-04-10 03:23:42,023: None
[DEBUG]2024-04-10 03:23:42,023: None
[DEBUG]2024-04-10 03:23:42,023: None
[DEBUG]2024-04-10 03:23:42,023: None
[DEBUG]2024-04-10 03:23:42,023: None
[DEBUG]2024-04-10 03:23:42,023: None
[DEBUG]2024-04-10 03:23:42,024: None
[DEBUG]2024-04-10 03:23:42,024: None
[DEBUG]2024-04-10 03:23:42,024: None
[DEBUG]2024-04-10 03:23:42,024: None
[DEBUG]2024-04-10 03:23:42,024: None
[DEBUG]2024-04-10 03:23:42,024: None
[DEBUG]2024-04-10 03:23:42,024: None
[DEBUG]2024-04-10 03:23:42,024: None
[DEBUG]2024-04-10 03:23:42,024: None
[DEBUG]2024-04-10 03:23:42,025: None
[DEBUG]2024-04-10 03:23:42,025: None
[DEBUG]2024-04-10 03:23:42,025: None
[DEBUG]2024-04-10 03:23:42,025: None
[DEBUG]2024-04-10 03:23:42,025: None
[DEBUG]2024-04-10 03:23:42,025: None
[DEBUG]2024-04-10 03:23:42,025: None
[DEBUG]2024-04-10 03:23:42,025: None
[DEBUG]2024-04-10 03:23:42,025: None
[DEBUG]2024-04-10 03:23:42,025: None
[DEBUG]2024-04-10 03:23:42,025: None
[DEBUG]2024-04-10 03:23:42,025: None
[DEBUG]2024-04-10 03:23:42,025: None
[DEBUG]2024-04-10 03:23:42,025: None
[DEBUG]2024-04-10 03:23:42,025: None
[DEBUG]2024-04-10 03:23:42,025: None
[DEBUG]2024-04-10 03:23:42,025: None
[DEBUG]2024-04-10 03:23:42,025: None
[DEBUG]2024-04-10 03:23:42,025: None
[DEBUG]2024-04-10 03:23:42,025: None
[DEBUG]2024-04-10 03:23:42,025: None
[DEBUG]2024-04-10 03:23:42,026: None
[DEBUG]2024-04-10 03:23:42,026: None
[DEBUG]2024-04-10 03:23:42,026: None
[DEBUG]2024-04-10 03:23:42,026: None
[DEBUG]2024-04-10 03:23:42,026: None
[DEBUG]2024-04-10 03:23:42,026: None
[DEBUG]2024-04-10 03:23:42,026: None
[DEBUG]2024-04-10 03:23:42,026: None
[DEBUG]2024-04-10 03:23:42,026: None
[DEBUG]2024-04-10 03:23:42,026: None
[DEBUG]2024-04-10 03:23:42,026: None
[DEBUG]2024-04-10 03:23:42,026: None
[DEBUG]2024-04-10 03:23:42,027: None
[DEBUG]2024-04-10 03:23:42,027: None
[DEBUG]2024-04-10 03:23:42,027: None
[DEBUG]2024-04-10 03:23:42,027: None
[DEBUG]2024-04-10 03:23:42,027: None
[DEBUG]2024-04-10 03:23:42,027: None
[DEBUG]2024-04-10 03:23:42,027: None
[DEBUG]2024-04-10 03:23:42,027: None
[DEBUG]2024-04-10 03:23:42,027: None
[DEBUG]2024-04-10 03:23:42,027: None
[DEBUG]2024-04-10 03:23:42,027: None
[DEBUG]2024-04-10 03:23:42,027: None
[DEBUG]2024-04-10 03:23:42,027: None
[DEBUG]2024-04-10 03:23:42,028: None
[DEBUG]2024-04-10 03:23:42,028: None
[DEBUG]2024-04-10 03:23:42,028: None
[DEBUG]2024-04-10 03:23:42,028: None
[DEBUG]2024-04-10 03:23:42,028: None
[DEBUG]2024-04-10 03:23:42,028: None
[DEBUG]2024-04-10 03:23:42,028: None
[DEBUG]2024-04-10 03:23:42,028: None
[DEBUG]2024-04-10 03:23:42,028: None
[DEBUG]2024-04-10 03:23:42,028: None
[DEBUG]2024-04-10 03:23:42,028: None
[DEBUG]2024-04-10 03:23:42,028: None
[DEBUG]2024-04-10 03:23:42,028: None
[DEBUG]2024-04-10 03:23:42,028: None
[DEBUG]2024-04-10 03:23:42,029: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:23:42,029: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:23:42,029: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:23:42,029: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:23:42,029: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:23:42,029: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:23:42,029: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:23:42,029: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:23:42,029: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:23:42,029: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:23:42,029: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:23:42,029: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:23:42,029: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:23:42,029: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:23:42,029: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:23:42,029: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:23:42,029: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:23:42,029: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:23:42,029: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:23:42,029: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:23:42,029: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:23:42,029: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:23:42,029: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:23:42,029: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:23:42,029: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:23:42,029: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:23:42,029: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:23:42,029: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:23:42,029: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:23:42,029: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:23:42,030: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:23:42,030: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:23:42,030: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:23:42,030: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:23:42,030: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:23:42,030: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:23:42,030: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:23:42,030: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:23:42,030: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:23:42,030: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:23:42,030: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:23:42,030: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:23:42,030: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:23:42,030: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:23:42,030: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:27:01,039: <re.Match object; span=(1081, 1810), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 03:27:01,039: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 03:27:01,039: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 03:27:01,040: None
[DEBUG]2024-04-10 03:27:01,040: None
[DEBUG]2024-04-10 03:27:01,041: None
[DEBUG]2024-04-10 03:27:01,041: None
[DEBUG]2024-04-10 03:27:01,041: None
[DEBUG]2024-04-10 03:27:01,041: None
[DEBUG]2024-04-10 03:27:01,041: None
[DEBUG]2024-04-10 03:27:01,041: None
[DEBUG]2024-04-10 03:27:01,041: None
[DEBUG]2024-04-10 03:27:01,042: None
[DEBUG]2024-04-10 03:27:01,042: None
[DEBUG]2024-04-10 03:27:01,042: None
[DEBUG]2024-04-10 03:27:01,042: None
[DEBUG]2024-04-10 03:27:01,042: None
[DEBUG]2024-04-10 03:27:01,043: None
[DEBUG]2024-04-10 03:27:01,043: None
[DEBUG]2024-04-10 03:27:01,043: None
[DEBUG]2024-04-10 03:27:01,043: None
[DEBUG]2024-04-10 03:27:01,043: None
[DEBUG]2024-04-10 03:27:01,043: None
[DEBUG]2024-04-10 03:27:01,043: None
[DEBUG]2024-04-10 03:27:01,043: None
[DEBUG]2024-04-10 03:27:01,043: None
[DEBUG]2024-04-10 03:27:01,043: None
[DEBUG]2024-04-10 03:27:01,043: None
[DEBUG]2024-04-10 03:27:01,043: None
[DEBUG]2024-04-10 03:27:01,043: None
[DEBUG]2024-04-10 03:27:01,044: None
[DEBUG]2024-04-10 03:27:01,044: None
[DEBUG]2024-04-10 03:27:01,044: None
[DEBUG]2024-04-10 03:27:01,044: None
[DEBUG]2024-04-10 03:27:01,044: None
[DEBUG]2024-04-10 03:27:01,044: None
[DEBUG]2024-04-10 03:27:01,044: None
[DEBUG]2024-04-10 03:27:01,044: None
[DEBUG]2024-04-10 03:27:01,045: None
[DEBUG]2024-04-10 03:27:01,045: None
[DEBUG]2024-04-10 03:27:01,045: None
[DEBUG]2024-04-10 03:27:01,045: None
[DEBUG]2024-04-10 03:27:01,045: None
[DEBUG]2024-04-10 03:27:01,045: None
[DEBUG]2024-04-10 03:27:01,045: None
[DEBUG]2024-04-10 03:27:01,045: None
[DEBUG]2024-04-10 03:27:01,045: None
[DEBUG]2024-04-10 03:27:01,045: None
[DEBUG]2024-04-10 03:27:01,045: None
[DEBUG]2024-04-10 03:27:01,045: None
[DEBUG]2024-04-10 03:27:01,045: None
[DEBUG]2024-04-10 03:27:01,045: None
[DEBUG]2024-04-10 03:27:01,045: None
[DEBUG]2024-04-10 03:27:01,045: None
[DEBUG]2024-04-10 03:27:01,045: None
[DEBUG]2024-04-10 03:27:01,045: None
[DEBUG]2024-04-10 03:27:01,045: None
[DEBUG]2024-04-10 03:27:01,046: None
[DEBUG]2024-04-10 03:27:01,046: None
[DEBUG]2024-04-10 03:27:01,046: None
[DEBUG]2024-04-10 03:27:01,046: None
[DEBUG]2024-04-10 03:27:01,046: None
[DEBUG]2024-04-10 03:27:01,046: None
[DEBUG]2024-04-10 03:27:01,046: None
[DEBUG]2024-04-10 03:27:01,046: None
[DEBUG]2024-04-10 03:27:01,046: None
[DEBUG]2024-04-10 03:27:01,046: None
[DEBUG]2024-04-10 03:27:01,046: None
[DEBUG]2024-04-10 03:27:01,047: None
[DEBUG]2024-04-10 03:27:01,047: None
[DEBUG]2024-04-10 03:27:01,047: None
[DEBUG]2024-04-10 03:27:01,047: None
[DEBUG]2024-04-10 03:27:01,047: None
[DEBUG]2024-04-10 03:27:01,047: None
[DEBUG]2024-04-10 03:27:01,047: None
[DEBUG]2024-04-10 03:27:01,047: None
[DEBUG]2024-04-10 03:27:01,047: None
[DEBUG]2024-04-10 03:27:01,047: None
[DEBUG]2024-04-10 03:27:01,047: None
[DEBUG]2024-04-10 03:27:01,047: None
[DEBUG]2024-04-10 03:27:01,048: None
[DEBUG]2024-04-10 03:27:01,048: None
[DEBUG]2024-04-10 03:27:01,048: None
[DEBUG]2024-04-10 03:27:01,048: None
[DEBUG]2024-04-10 03:27:01,048: None
[DEBUG]2024-04-10 03:27:01,048: None
[DEBUG]2024-04-10 03:27:01,048: None
[DEBUG]2024-04-10 03:27:01,048: None
[DEBUG]2024-04-10 03:27:01,048: None
[DEBUG]2024-04-10 03:27:01,048: None
[DEBUG]2024-04-10 03:27:01,048: None
[DEBUG]2024-04-10 03:27:01,048: None
[DEBUG]2024-04-10 03:27:01,048: None
[DEBUG]2024-04-10 03:27:01,049: None
[DEBUG]2024-04-10 03:27:01,049: None
[DEBUG]2024-04-10 03:27:01,049: None
[DEBUG]2024-04-10 03:27:01,049: None
[DEBUG]2024-04-10 03:27:01,049: None
[DEBUG]2024-04-10 03:27:01,049: None
[DEBUG]2024-04-10 03:27:01,049: None
[DEBUG]2024-04-10 03:27:01,049: None
[DEBUG]2024-04-10 03:27:01,049: None
[DEBUG]2024-04-10 03:27:01,049: None
[DEBUG]2024-04-10 03:27:01,049: None
[DEBUG]2024-04-10 03:27:01,049: None
[DEBUG]2024-04-10 03:27:01,049: None
[DEBUG]2024-04-10 03:27:01,049: None
[DEBUG]2024-04-10 03:27:01,050: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:27:01,050: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:27:01,050: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:27:01,050: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:27:01,050: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:27:01,050: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:27:01,050: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:27:01,050: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:27:01,050: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:27:01,050: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:27:01,050: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:27:01,050: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:27:01,050: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:27:01,050: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:27:01,050: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:27:01,051: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:27:01,051: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:27:01,051: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:27:01,051: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:27:01,051: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:27:01,051: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:27:01,051: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:27:01,051: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:27:01,051: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:27:01,051: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:27:01,051: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:27:01,051: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:27:01,051: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:27:01,051: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:27:01,051: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:27:01,051: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:27:01,051: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:27:01,051: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:27:01,051: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:27:01,051: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:27:01,051: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:27:01,051: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:27:01,051: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:27:01,051: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:27:01,051: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:27:01,051: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:27:01,051: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:27:01,051: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:27:01,051: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:27:01,051: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:28:36,687: <re.Match object; span=(1081, 1810), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 03:28:36,687: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 03:28:36,687: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 03:28:36,689: None
[DEBUG]2024-04-10 03:28:36,689: None
[DEBUG]2024-04-10 03:28:36,689: None
[DEBUG]2024-04-10 03:28:36,689: None
[DEBUG]2024-04-10 03:28:36,689: None
[DEBUG]2024-04-10 03:28:36,690: None
[DEBUG]2024-04-10 03:28:36,690: None
[DEBUG]2024-04-10 03:28:36,690: None
[DEBUG]2024-04-10 03:28:36,690: None
[DEBUG]2024-04-10 03:28:36,691: None
[DEBUG]2024-04-10 03:28:36,691: None
[DEBUG]2024-04-10 03:28:36,691: None
[DEBUG]2024-04-10 03:28:36,691: None
[DEBUG]2024-04-10 03:28:36,691: None
[DEBUG]2024-04-10 03:28:36,691: None
[DEBUG]2024-04-10 03:28:36,691: None
[DEBUG]2024-04-10 03:28:36,691: None
[DEBUG]2024-04-10 03:28:36,691: None
[DEBUG]2024-04-10 03:28:36,691: None
[DEBUG]2024-04-10 03:28:36,691: None
[DEBUG]2024-04-10 03:28:36,692: None
[DEBUG]2024-04-10 03:28:36,692: None
[DEBUG]2024-04-10 03:28:36,692: None
[DEBUG]2024-04-10 03:28:36,692: None
[DEBUG]2024-04-10 03:28:36,692: None
[DEBUG]2024-04-10 03:28:36,692: None
[DEBUG]2024-04-10 03:28:36,692: None
[DEBUG]2024-04-10 03:28:36,693: None
[DEBUG]2024-04-10 03:28:36,693: None
[DEBUG]2024-04-10 03:28:36,693: None
[DEBUG]2024-04-10 03:28:36,693: None
[DEBUG]2024-04-10 03:28:36,693: None
[DEBUG]2024-04-10 03:28:36,693: None
[DEBUG]2024-04-10 03:28:36,693: None
[DEBUG]2024-04-10 03:28:36,693: None
[DEBUG]2024-04-10 03:28:36,693: None
[DEBUG]2024-04-10 03:28:36,693: None
[DEBUG]2024-04-10 03:28:36,693: None
[DEBUG]2024-04-10 03:28:36,693: None
[DEBUG]2024-04-10 03:28:36,693: None
[DEBUG]2024-04-10 03:28:36,693: None
[DEBUG]2024-04-10 03:28:36,693: None
[DEBUG]2024-04-10 03:28:36,693: None
[DEBUG]2024-04-10 03:28:36,693: None
[DEBUG]2024-04-10 03:28:36,694: None
[DEBUG]2024-04-10 03:28:36,694: None
[DEBUG]2024-04-10 03:28:36,694: None
[DEBUG]2024-04-10 03:28:36,694: None
[DEBUG]2024-04-10 03:28:36,694: None
[DEBUG]2024-04-10 03:28:36,694: None
[DEBUG]2024-04-10 03:28:36,694: None
[DEBUG]2024-04-10 03:28:36,694: None
[DEBUG]2024-04-10 03:28:36,694: None
[DEBUG]2024-04-10 03:28:36,694: None
[DEBUG]2024-04-10 03:28:36,695: None
[DEBUG]2024-04-10 03:28:36,695: None
[DEBUG]2024-04-10 03:28:36,695: None
[DEBUG]2024-04-10 03:28:36,695: None
[DEBUG]2024-04-10 03:28:36,695: None
[DEBUG]2024-04-10 03:28:36,695: None
[DEBUG]2024-04-10 03:28:36,695: None
[DEBUG]2024-04-10 03:28:36,695: None
[DEBUG]2024-04-10 03:28:36,695: None
[DEBUG]2024-04-10 03:28:36,695: None
[DEBUG]2024-04-10 03:28:36,695: None
[DEBUG]2024-04-10 03:28:36,696: None
[DEBUG]2024-04-10 03:28:36,696: None
[DEBUG]2024-04-10 03:28:36,696: None
[DEBUG]2024-04-10 03:28:36,696: None
[DEBUG]2024-04-10 03:28:36,696: None
[DEBUG]2024-04-10 03:28:36,696: None
[DEBUG]2024-04-10 03:28:36,696: None
[DEBUG]2024-04-10 03:28:36,696: None
[DEBUG]2024-04-10 03:28:36,696: None
[DEBUG]2024-04-10 03:28:36,696: None
[DEBUG]2024-04-10 03:28:36,696: None
[DEBUG]2024-04-10 03:28:36,696: None
[DEBUG]2024-04-10 03:28:36,697: None
[DEBUG]2024-04-10 03:28:36,697: None
[DEBUG]2024-04-10 03:28:36,697: None
[DEBUG]2024-04-10 03:28:36,697: None
[DEBUG]2024-04-10 03:28:36,697: None
[DEBUG]2024-04-10 03:28:36,697: None
[DEBUG]2024-04-10 03:28:36,697: None
[DEBUG]2024-04-10 03:28:36,697: None
[DEBUG]2024-04-10 03:28:36,697: None
[DEBUG]2024-04-10 03:28:36,697: None
[DEBUG]2024-04-10 03:28:36,697: None
[DEBUG]2024-04-10 03:28:36,697: None
[DEBUG]2024-04-10 03:28:36,697: None
[DEBUG]2024-04-10 03:28:36,697: None
[DEBUG]2024-04-10 03:28:36,697: None
[DEBUG]2024-04-10 03:28:36,697: None
[DEBUG]2024-04-10 03:28:36,697: None
[DEBUG]2024-04-10 03:28:36,697: None
[DEBUG]2024-04-10 03:28:36,697: None
[DEBUG]2024-04-10 03:28:36,697: None
[DEBUG]2024-04-10 03:28:36,697: None
[DEBUG]2024-04-10 03:28:36,697: None
[DEBUG]2024-04-10 03:28:36,697: None
[DEBUG]2024-04-10 03:28:36,697: None
[DEBUG]2024-04-10 03:28:36,697: None
[DEBUG]2024-04-10 03:28:36,697: None
[DEBUG]2024-04-10 03:28:36,697: None
[DEBUG]2024-04-10 03:28:36,698: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:28:36,698: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:28:36,698: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:28:36,698: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:28:36,698: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:28:36,698: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:28:36,698: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:28:36,698: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:28:36,698: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:28:36,698: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:28:36,698: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:28:36,698: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:28:36,698: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:28:36,698: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:28:36,698: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:28:36,699: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:28:36,699: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:28:36,699: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:28:36,699: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:28:36,699: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:28:36,699: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:28:36,699: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:28:36,699: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:28:36,699: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:28:36,699: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:28:36,699: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:28:36,699: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:28:36,699: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:28:36,699: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:28:36,699: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:28:36,699: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:28:36,699: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:28:36,699: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:28:36,699: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:28:36,699: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:28:36,699: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:28:36,699: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:28:36,699: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:28:36,699: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:28:36,699: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:28:36,699: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:28:36,699: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:28:36,699: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:28:36,699: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:28:36,699: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:29:40,157: <re.Match object; span=(1085, 1814), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 03:29:40,157: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 03:29:40,157: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 03:29:40,158: None
[DEBUG]2024-04-10 03:29:40,158: None
[DEBUG]2024-04-10 03:29:40,159: None
[DEBUG]2024-04-10 03:29:40,159: None
[DEBUG]2024-04-10 03:29:40,159: None
[DEBUG]2024-04-10 03:29:40,159: None
[DEBUG]2024-04-10 03:29:40,159: None
[DEBUG]2024-04-10 03:29:40,159: None
[DEBUG]2024-04-10 03:29:40,159: None
[DEBUG]2024-04-10 03:29:40,160: None
[DEBUG]2024-04-10 03:29:40,160: None
[DEBUG]2024-04-10 03:29:40,160: None
[DEBUG]2024-04-10 03:29:40,160: None
[DEBUG]2024-04-10 03:29:40,160: None
[DEBUG]2024-04-10 03:29:40,161: None
[DEBUG]2024-04-10 03:29:40,161: None
[DEBUG]2024-04-10 03:29:40,161: None
[DEBUG]2024-04-10 03:29:40,161: None
[DEBUG]2024-04-10 03:29:40,161: None
[DEBUG]2024-04-10 03:29:40,161: None
[DEBUG]2024-04-10 03:29:40,162: None
[DEBUG]2024-04-10 03:29:40,162: None
[DEBUG]2024-04-10 03:29:40,162: None
[DEBUG]2024-04-10 03:29:40,162: None
[DEBUG]2024-04-10 03:29:40,162: None
[DEBUG]2024-04-10 03:29:40,162: None
[DEBUG]2024-04-10 03:29:40,162: None
[DEBUG]2024-04-10 03:29:40,163: None
[DEBUG]2024-04-10 03:29:40,163: None
[DEBUG]2024-04-10 03:29:40,163: None
[DEBUG]2024-04-10 03:29:40,163: None
[DEBUG]2024-04-10 03:29:40,163: None
[DEBUG]2024-04-10 03:29:40,163: None
[DEBUG]2024-04-10 03:29:40,163: None
[DEBUG]2024-04-10 03:29:40,163: None
[DEBUG]2024-04-10 03:29:40,164: None
[DEBUG]2024-04-10 03:29:40,164: None
[DEBUG]2024-04-10 03:29:40,164: None
[DEBUG]2024-04-10 03:29:40,164: None
[DEBUG]2024-04-10 03:29:40,164: None
[DEBUG]2024-04-10 03:29:40,164: None
[DEBUG]2024-04-10 03:29:40,164: None
[DEBUG]2024-04-10 03:29:40,164: None
[DEBUG]2024-04-10 03:29:40,164: None
[DEBUG]2024-04-10 03:29:40,165: None
[DEBUG]2024-04-10 03:29:40,165: None
[DEBUG]2024-04-10 03:29:40,165: None
[DEBUG]2024-04-10 03:29:40,165: None
[DEBUG]2024-04-10 03:29:40,165: None
[DEBUG]2024-04-10 03:29:40,165: None
[DEBUG]2024-04-10 03:29:40,165: None
[DEBUG]2024-04-10 03:29:40,165: None
[DEBUG]2024-04-10 03:29:40,165: None
[DEBUG]2024-04-10 03:29:40,165: None
[DEBUG]2024-04-10 03:29:40,166: None
[DEBUG]2024-04-10 03:29:40,166: None
[DEBUG]2024-04-10 03:29:40,166: None
[DEBUG]2024-04-10 03:29:40,166: None
[DEBUG]2024-04-10 03:29:40,166: None
[DEBUG]2024-04-10 03:29:40,166: None
[DEBUG]2024-04-10 03:29:40,166: None
[DEBUG]2024-04-10 03:29:40,166: None
[DEBUG]2024-04-10 03:29:40,166: None
[DEBUG]2024-04-10 03:29:40,166: None
[DEBUG]2024-04-10 03:29:40,166: None
[DEBUG]2024-04-10 03:29:40,167: None
[DEBUG]2024-04-10 03:29:40,167: None
[DEBUG]2024-04-10 03:29:40,167: None
[DEBUG]2024-04-10 03:29:40,167: None
[DEBUG]2024-04-10 03:29:40,167: None
[DEBUG]2024-04-10 03:29:40,167: None
[DEBUG]2024-04-10 03:29:40,167: None
[DEBUG]2024-04-10 03:29:40,167: None
[DEBUG]2024-04-10 03:29:40,167: None
[DEBUG]2024-04-10 03:29:40,167: None
[DEBUG]2024-04-10 03:29:40,167: None
[DEBUG]2024-04-10 03:29:40,167: None
[DEBUG]2024-04-10 03:29:40,168: None
[DEBUG]2024-04-10 03:29:40,168: None
[DEBUG]2024-04-10 03:29:40,168: None
[DEBUG]2024-04-10 03:29:40,168: None
[DEBUG]2024-04-10 03:29:40,168: None
[DEBUG]2024-04-10 03:29:40,168: None
[DEBUG]2024-04-10 03:29:40,168: None
[DEBUG]2024-04-10 03:29:40,168: None
[DEBUG]2024-04-10 03:29:40,168: None
[DEBUG]2024-04-10 03:29:40,168: None
[DEBUG]2024-04-10 03:29:40,168: None
[DEBUG]2024-04-10 03:29:40,168: None
[DEBUG]2024-04-10 03:29:40,168: None
[DEBUG]2024-04-10 03:29:40,168: None
[DEBUG]2024-04-10 03:29:40,168: None
[DEBUG]2024-04-10 03:29:40,168: None
[DEBUG]2024-04-10 03:29:40,168: None
[DEBUG]2024-04-10 03:29:40,168: None
[DEBUG]2024-04-10 03:29:40,168: None
[DEBUG]2024-04-10 03:29:40,168: None
[DEBUG]2024-04-10 03:29:40,168: None
[DEBUG]2024-04-10 03:29:40,168: None
[DEBUG]2024-04-10 03:29:40,168: None
[DEBUG]2024-04-10 03:29:40,168: None
[DEBUG]2024-04-10 03:29:40,168: None
[DEBUG]2024-04-10 03:29:40,168: None
[DEBUG]2024-04-10 03:29:40,168: None
[DEBUG]2024-04-10 03:29:40,170: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:29:40,170: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:29:40,170: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:29:40,170: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:29:40,170: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:29:40,170: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:29:40,170: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:29:40,170: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:29:40,170: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:29:40,170: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:29:40,170: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:29:40,170: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:29:40,170: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:29:40,170: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:29:40,170: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:29:40,170: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:29:40,170: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:29:40,170: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:29:40,170: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:29:40,170: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:29:40,170: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:29:40,170: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:29:40,170: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:29:40,170: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:29:40,170: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:29:40,170: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:29:40,170: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:29:40,170: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:29:40,170: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:29:40,170: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:29:40,171: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:29:40,171: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:29:40,171: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:29:40,171: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:29:40,171: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:29:40,171: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:29:40,171: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:29:40,171: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:29:40,171: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:29:40,171: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:29:40,171: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:29:40,171: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:29:40,171: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:29:40,171: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:29:40,171: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:31:40,626: <re.Match object; span=(1081, 1810), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 03:31:40,626: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 03:31:40,626: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 03:31:40,628: None
[DEBUG]2024-04-10 03:31:40,628: None
[DEBUG]2024-04-10 03:31:40,628: None
[DEBUG]2024-04-10 03:31:40,628: None
[DEBUG]2024-04-10 03:31:40,628: None
[DEBUG]2024-04-10 03:31:40,629: None
[DEBUG]2024-04-10 03:31:40,629: None
[DEBUG]2024-04-10 03:31:40,629: None
[DEBUG]2024-04-10 03:31:40,629: None
[DEBUG]2024-04-10 03:31:40,630: None
[DEBUG]2024-04-10 03:31:40,630: None
[DEBUG]2024-04-10 03:31:40,630: None
[DEBUG]2024-04-10 03:31:40,630: None
[DEBUG]2024-04-10 03:31:40,630: None
[DEBUG]2024-04-10 03:31:40,630: None
[DEBUG]2024-04-10 03:31:40,630: None
[DEBUG]2024-04-10 03:31:40,630: None
[DEBUG]2024-04-10 03:31:40,630: None
[DEBUG]2024-04-10 03:31:40,630: None
[DEBUG]2024-04-10 03:31:40,630: None
[DEBUG]2024-04-10 03:31:40,631: None
[DEBUG]2024-04-10 03:31:40,631: None
[DEBUG]2024-04-10 03:31:40,631: None
[DEBUG]2024-04-10 03:31:40,631: None
[DEBUG]2024-04-10 03:31:40,631: None
[DEBUG]2024-04-10 03:31:40,631: None
[DEBUG]2024-04-10 03:31:40,631: None
[DEBUG]2024-04-10 03:31:40,632: None
[DEBUG]2024-04-10 03:31:40,632: None
[DEBUG]2024-04-10 03:31:40,632: None
[DEBUG]2024-04-10 03:31:40,632: None
[DEBUG]2024-04-10 03:31:40,632: None
[DEBUG]2024-04-10 03:31:40,632: None
[DEBUG]2024-04-10 03:31:40,632: None
[DEBUG]2024-04-10 03:31:40,632: None
[DEBUG]2024-04-10 03:31:40,632: None
[DEBUG]2024-04-10 03:31:40,632: None
[DEBUG]2024-04-10 03:31:40,632: None
[DEBUG]2024-04-10 03:31:40,632: None
[DEBUG]2024-04-10 03:31:40,632: None
[DEBUG]2024-04-10 03:31:40,632: None
[DEBUG]2024-04-10 03:31:40,632: None
[DEBUG]2024-04-10 03:31:40,632: None
[DEBUG]2024-04-10 03:31:40,632: None
[DEBUG]2024-04-10 03:31:40,633: None
[DEBUG]2024-04-10 03:31:40,633: None
[DEBUG]2024-04-10 03:31:40,633: None
[DEBUG]2024-04-10 03:31:40,633: None
[DEBUG]2024-04-10 03:31:40,633: None
[DEBUG]2024-04-10 03:31:40,633: None
[DEBUG]2024-04-10 03:31:40,633: None
[DEBUG]2024-04-10 03:31:40,633: None
[DEBUG]2024-04-10 03:31:40,633: None
[DEBUG]2024-04-10 03:31:40,633: None
[DEBUG]2024-04-10 03:31:40,634: None
[DEBUG]2024-04-10 03:31:40,634: None
[DEBUG]2024-04-10 03:31:40,634: None
[DEBUG]2024-04-10 03:31:40,634: None
[DEBUG]2024-04-10 03:31:40,634: None
[DEBUG]2024-04-10 03:31:40,634: None
[DEBUG]2024-04-10 03:31:40,634: None
[DEBUG]2024-04-10 03:31:40,634: None
[DEBUG]2024-04-10 03:31:40,634: None
[DEBUG]2024-04-10 03:31:40,634: None
[DEBUG]2024-04-10 03:31:40,634: None
[DEBUG]2024-04-10 03:31:40,635: None
[DEBUG]2024-04-10 03:31:40,635: None
[DEBUG]2024-04-10 03:31:40,635: None
[DEBUG]2024-04-10 03:31:40,635: None
[DEBUG]2024-04-10 03:31:40,635: None
[DEBUG]2024-04-10 03:31:40,635: None
[DEBUG]2024-04-10 03:31:40,635: None
[DEBUG]2024-04-10 03:31:40,635: None
[DEBUG]2024-04-10 03:31:40,635: None
[DEBUG]2024-04-10 03:31:40,635: None
[DEBUG]2024-04-10 03:31:40,635: None
[DEBUG]2024-04-10 03:31:40,635: None
[DEBUG]2024-04-10 03:31:40,636: None
[DEBUG]2024-04-10 03:31:40,636: None
[DEBUG]2024-04-10 03:31:40,636: None
[DEBUG]2024-04-10 03:31:40,636: None
[DEBUG]2024-04-10 03:31:40,636: None
[DEBUG]2024-04-10 03:31:40,636: None
[DEBUG]2024-04-10 03:31:40,636: None
[DEBUG]2024-04-10 03:31:40,636: None
[DEBUG]2024-04-10 03:31:40,636: None
[DEBUG]2024-04-10 03:31:40,636: None
[DEBUG]2024-04-10 03:31:40,636: None
[DEBUG]2024-04-10 03:31:40,636: None
[DEBUG]2024-04-10 03:31:40,636: None
[DEBUG]2024-04-10 03:31:40,636: None
[DEBUG]2024-04-10 03:31:40,636: None
[DEBUG]2024-04-10 03:31:40,636: None
[DEBUG]2024-04-10 03:31:40,636: None
[DEBUG]2024-04-10 03:31:40,636: None
[DEBUG]2024-04-10 03:31:40,636: None
[DEBUG]2024-04-10 03:31:40,636: None
[DEBUG]2024-04-10 03:31:40,636: None
[DEBUG]2024-04-10 03:31:40,636: None
[DEBUG]2024-04-10 03:31:40,636: None
[DEBUG]2024-04-10 03:31:40,636: None
[DEBUG]2024-04-10 03:31:40,636: None
[DEBUG]2024-04-10 03:31:40,636: None
[DEBUG]2024-04-10 03:31:40,636: None
[DEBUG]2024-04-10 03:31:40,637: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:31:40,637: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:31:40,637: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:31:40,637: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:31:40,637: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:31:40,637: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:31:40,637: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:31:40,637: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:31:40,637: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:31:40,637: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:31:40,637: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:31:40,637: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:31:40,637: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:31:40,637: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:31:40,637: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:31:40,638: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:31:40,638: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:31:40,638: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:31:40,638: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:31:40,638: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:31:40,638: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:31:40,638: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:31:40,638: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:31:40,638: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:31:40,638: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:31:40,638: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:31:40,638: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:31:40,638: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:31:40,638: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:31:40,638: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:31:40,638: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:31:40,638: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:31:40,638: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:31:40,638: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:31:40,638: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:31:40,638: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:31:40,638: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:31:40,638: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:31:40,638: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:31:40,638: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:31:40,638: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:31:40,638: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:31:40,638: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:31:40,638: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:31:40,638: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:35:29,184: <re.Match object; span=(1081, 1810), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 03:35:29,185: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 03:35:29,185: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 03:35:29,186: None
[DEBUG]2024-04-10 03:35:29,186: None
[DEBUG]2024-04-10 03:35:29,187: None
[DEBUG]2024-04-10 03:35:29,187: None
[DEBUG]2024-04-10 03:35:29,187: None
[DEBUG]2024-04-10 03:35:29,188: None
[DEBUG]2024-04-10 03:35:29,188: None
[DEBUG]2024-04-10 03:35:29,188: None
[DEBUG]2024-04-10 03:35:29,188: None
[DEBUG]2024-04-10 03:35:29,188: None
[DEBUG]2024-04-10 03:35:29,188: None
[DEBUG]2024-04-10 03:35:29,188: None
[DEBUG]2024-04-10 03:35:29,188: None
[DEBUG]2024-04-10 03:35:29,188: None
[DEBUG]2024-04-10 03:35:29,189: None
[DEBUG]2024-04-10 03:35:29,189: None
[DEBUG]2024-04-10 03:35:29,189: None
[DEBUG]2024-04-10 03:35:29,189: None
[DEBUG]2024-04-10 03:35:29,189: None
[DEBUG]2024-04-10 03:35:29,189: None
[DEBUG]2024-04-10 03:35:29,190: None
[DEBUG]2024-04-10 03:35:29,190: None
[DEBUG]2024-04-10 03:35:29,190: None
[DEBUG]2024-04-10 03:35:29,190: None
[DEBUG]2024-04-10 03:35:29,190: None
[DEBUG]2024-04-10 03:35:29,190: None
[DEBUG]2024-04-10 03:35:29,190: None
[DEBUG]2024-04-10 03:35:29,190: None
[DEBUG]2024-04-10 03:35:29,190: None
[DEBUG]2024-04-10 03:35:29,190: None
[DEBUG]2024-04-10 03:35:29,190: None
[DEBUG]2024-04-10 03:35:29,190: None
[DEBUG]2024-04-10 03:35:29,190: None
[DEBUG]2024-04-10 03:35:29,190: None
[DEBUG]2024-04-10 03:35:29,190: None
[DEBUG]2024-04-10 03:35:29,191: None
[DEBUG]2024-04-10 03:35:29,191: None
[DEBUG]2024-04-10 03:35:29,191: None
[DEBUG]2024-04-10 03:35:29,191: None
[DEBUG]2024-04-10 03:35:29,191: None
[DEBUG]2024-04-10 03:35:29,191: None
[DEBUG]2024-04-10 03:35:29,191: None
[DEBUG]2024-04-10 03:35:29,191: None
[DEBUG]2024-04-10 03:35:29,191: None
[DEBUG]2024-04-10 03:35:29,192: None
[DEBUG]2024-04-10 03:35:29,192: None
[DEBUG]2024-04-10 03:35:29,192: None
[DEBUG]2024-04-10 03:35:29,192: None
[DEBUG]2024-04-10 03:35:29,192: None
[DEBUG]2024-04-10 03:35:29,192: None
[DEBUG]2024-04-10 03:35:29,192: None
[DEBUG]2024-04-10 03:35:29,192: None
[DEBUG]2024-04-10 03:35:29,192: None
[DEBUG]2024-04-10 03:35:29,192: None
[DEBUG]2024-04-10 03:35:29,193: None
[DEBUG]2024-04-10 03:35:29,193: None
[DEBUG]2024-04-10 03:35:29,193: None
[DEBUG]2024-04-10 03:35:29,193: None
[DEBUG]2024-04-10 03:35:29,193: None
[DEBUG]2024-04-10 03:35:29,193: None
[DEBUG]2024-04-10 03:35:29,193: None
[DEBUG]2024-04-10 03:35:29,193: None
[DEBUG]2024-04-10 03:35:29,193: None
[DEBUG]2024-04-10 03:35:29,193: None
[DEBUG]2024-04-10 03:35:29,193: None
[DEBUG]2024-04-10 03:35:29,194: None
[DEBUG]2024-04-10 03:35:29,194: None
[DEBUG]2024-04-10 03:35:29,194: None
[DEBUG]2024-04-10 03:35:29,194: None
[DEBUG]2024-04-10 03:35:29,194: None
[DEBUG]2024-04-10 03:35:29,194: None
[DEBUG]2024-04-10 03:35:29,194: None
[DEBUG]2024-04-10 03:35:29,194: None
[DEBUG]2024-04-10 03:35:29,194: None
[DEBUG]2024-04-10 03:35:29,194: None
[DEBUG]2024-04-10 03:35:29,194: None
[DEBUG]2024-04-10 03:35:29,194: None
[DEBUG]2024-04-10 03:35:29,195: None
[DEBUG]2024-04-10 03:35:29,195: None
[DEBUG]2024-04-10 03:35:29,195: None
[DEBUG]2024-04-10 03:35:29,195: None
[DEBUG]2024-04-10 03:35:29,195: None
[DEBUG]2024-04-10 03:35:29,195: None
[DEBUG]2024-04-10 03:35:29,195: None
[DEBUG]2024-04-10 03:35:29,195: None
[DEBUG]2024-04-10 03:35:29,195: None
[DEBUG]2024-04-10 03:35:29,195: None
[DEBUG]2024-04-10 03:35:29,195: None
[DEBUG]2024-04-10 03:35:29,195: None
[DEBUG]2024-04-10 03:35:29,195: None
[DEBUG]2024-04-10 03:35:29,195: None
[DEBUG]2024-04-10 03:35:29,195: None
[DEBUG]2024-04-10 03:35:29,195: None
[DEBUG]2024-04-10 03:35:29,195: None
[DEBUG]2024-04-10 03:35:29,195: None
[DEBUG]2024-04-10 03:35:29,195: None
[DEBUG]2024-04-10 03:35:29,195: None
[DEBUG]2024-04-10 03:35:29,195: None
[DEBUG]2024-04-10 03:35:29,195: None
[DEBUG]2024-04-10 03:35:29,195: None
[DEBUG]2024-04-10 03:35:29,195: None
[DEBUG]2024-04-10 03:35:29,195: None
[DEBUG]2024-04-10 03:35:29,195: None
[DEBUG]2024-04-10 03:35:29,195: None
[DEBUG]2024-04-10 03:35:29,196: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:35:29,196: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:35:29,196: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:35:29,196: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:35:29,196: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:35:29,196: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:35:29,196: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:35:29,196: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:35:29,196: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:35:29,196: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:35:29,196: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:35:29,196: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:35:29,196: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:35:29,196: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:35:29,196: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:35:29,197: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:35:29,197: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:35:29,197: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:35:29,197: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:35:29,197: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:35:29,197: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:35:29,197: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:35:29,197: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:35:29,197: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:35:29,197: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:35:29,197: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:35:29,197: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:35:29,197: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:35:29,197: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:35:29,197: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:35:29,197: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:35:29,197: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:35:29,197: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:35:29,197: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:35:29,197: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:35:29,197: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:35:29,197: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:35:29,197: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:35:29,197: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:35:29,197: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:35:29,197: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:35:29,197: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:35:29,197: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:35:29,197: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:35:29,197: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:36:45,646: <re.Match object; span=(1081, 1810), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 03:36:45,647: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 03:36:45,647: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 03:36:45,649: None
[DEBUG]2024-04-10 03:36:45,649: None
[DEBUG]2024-04-10 03:36:45,649: None
[DEBUG]2024-04-10 03:36:45,649: None
[DEBUG]2024-04-10 03:36:45,649: None
[DEBUG]2024-04-10 03:36:45,650: None
[DEBUG]2024-04-10 03:36:45,650: None
[DEBUG]2024-04-10 03:36:45,650: None
[DEBUG]2024-04-10 03:36:45,650: None
[DEBUG]2024-04-10 03:36:45,650: None
[DEBUG]2024-04-10 03:36:45,650: None
[DEBUG]2024-04-10 03:36:45,650: None
[DEBUG]2024-04-10 03:36:45,650: None
[DEBUG]2024-04-10 03:36:45,650: None
[DEBUG]2024-04-10 03:36:45,651: None
[DEBUG]2024-04-10 03:36:45,651: None
[DEBUG]2024-04-10 03:36:45,651: None
[DEBUG]2024-04-10 03:36:45,651: None
[DEBUG]2024-04-10 03:36:45,651: None
[DEBUG]2024-04-10 03:36:45,651: None
[DEBUG]2024-04-10 03:36:45,652: None
[DEBUG]2024-04-10 03:36:45,652: None
[DEBUG]2024-04-10 03:36:45,652: None
[DEBUG]2024-04-10 03:36:45,652: None
[DEBUG]2024-04-10 03:36:45,652: None
[DEBUG]2024-04-10 03:36:45,652: None
[DEBUG]2024-04-10 03:36:45,652: None
[DEBUG]2024-04-10 03:36:45,653: None
[DEBUG]2024-04-10 03:36:45,653: None
[DEBUG]2024-04-10 03:36:45,653: None
[DEBUG]2024-04-10 03:36:45,653: None
[DEBUG]2024-04-10 03:36:45,653: None
[DEBUG]2024-04-10 03:36:45,653: None
[DEBUG]2024-04-10 03:36:45,653: None
[DEBUG]2024-04-10 03:36:45,653: None
[DEBUG]2024-04-10 03:36:45,654: None
[DEBUG]2024-04-10 03:36:45,654: None
[DEBUG]2024-04-10 03:36:45,654: None
[DEBUG]2024-04-10 03:36:45,654: None
[DEBUG]2024-04-10 03:36:45,654: None
[DEBUG]2024-04-10 03:36:45,654: None
[DEBUG]2024-04-10 03:36:45,654: None
[DEBUG]2024-04-10 03:36:45,654: None
[DEBUG]2024-04-10 03:36:45,654: None
[DEBUG]2024-04-10 03:36:45,655: None
[DEBUG]2024-04-10 03:36:45,655: None
[DEBUG]2024-04-10 03:36:45,655: None
[DEBUG]2024-04-10 03:36:45,655: None
[DEBUG]2024-04-10 03:36:45,655: None
[DEBUG]2024-04-10 03:36:45,655: None
[DEBUG]2024-04-10 03:36:45,655: None
[DEBUG]2024-04-10 03:36:45,655: None
[DEBUG]2024-04-10 03:36:45,655: None
[DEBUG]2024-04-10 03:36:45,655: None
[DEBUG]2024-04-10 03:36:45,655: None
[DEBUG]2024-04-10 03:36:45,655: None
[DEBUG]2024-04-10 03:36:45,655: None
[DEBUG]2024-04-10 03:36:45,655: None
[DEBUG]2024-04-10 03:36:45,655: None
[DEBUG]2024-04-10 03:36:45,655: None
[DEBUG]2024-04-10 03:36:45,655: None
[DEBUG]2024-04-10 03:36:45,655: None
[DEBUG]2024-04-10 03:36:45,655: None
[DEBUG]2024-04-10 03:36:45,655: None
[DEBUG]2024-04-10 03:36:45,655: None
[DEBUG]2024-04-10 03:36:45,656: None
[DEBUG]2024-04-10 03:36:45,656: None
[DEBUG]2024-04-10 03:36:45,656: None
[DEBUG]2024-04-10 03:36:45,656: None
[DEBUG]2024-04-10 03:36:45,656: None
[DEBUG]2024-04-10 03:36:45,656: None
[DEBUG]2024-04-10 03:36:45,656: None
[DEBUG]2024-04-10 03:36:45,656: None
[DEBUG]2024-04-10 03:36:45,656: None
[DEBUG]2024-04-10 03:36:45,656: None
[DEBUG]2024-04-10 03:36:45,656: None
[DEBUG]2024-04-10 03:36:45,656: None
[DEBUG]2024-04-10 03:36:45,657: None
[DEBUG]2024-04-10 03:36:45,657: None
[DEBUG]2024-04-10 03:36:45,657: None
[DEBUG]2024-04-10 03:36:45,657: None
[DEBUG]2024-04-10 03:36:45,657: None
[DEBUG]2024-04-10 03:36:45,657: None
[DEBUG]2024-04-10 03:36:45,657: None
[DEBUG]2024-04-10 03:36:45,657: None
[DEBUG]2024-04-10 03:36:45,657: None
[DEBUG]2024-04-10 03:36:45,657: None
[DEBUG]2024-04-10 03:36:45,657: None
[DEBUG]2024-04-10 03:36:45,657: None
[DEBUG]2024-04-10 03:36:45,657: None
[DEBUG]2024-04-10 03:36:45,658: None
[DEBUG]2024-04-10 03:36:45,658: None
[DEBUG]2024-04-10 03:36:45,658: None
[DEBUG]2024-04-10 03:36:45,658: None
[DEBUG]2024-04-10 03:36:45,658: None
[DEBUG]2024-04-10 03:36:45,658: None
[DEBUG]2024-04-10 03:36:45,658: None
[DEBUG]2024-04-10 03:36:45,658: None
[DEBUG]2024-04-10 03:36:45,658: None
[DEBUG]2024-04-10 03:36:45,658: None
[DEBUG]2024-04-10 03:36:45,658: None
[DEBUG]2024-04-10 03:36:45,658: None
[DEBUG]2024-04-10 03:36:45,658: None
[DEBUG]2024-04-10 03:36:45,658: None
[DEBUG]2024-04-10 03:36:45,659: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:36:45,659: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:36:45,659: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:36:45,659: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:36:45,659: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:36:45,659: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:36:45,659: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:36:45,659: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:36:45,659: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:36:45,659: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:36:45,659: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:36:45,659: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:36:45,659: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:36:45,659: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:36:45,659: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:36:45,659: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:36:45,659: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:36:45,659: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:36:45,659: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:36:45,659: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:36:45,659: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:36:45,659: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:36:45,659: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:36:45,659: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:36:45,659: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:36:45,659: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:36:45,659: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:36:45,659: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:36:45,659: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:36:45,659: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:36:45,660: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:36:45,660: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:36:45,660: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:36:45,660: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:36:45,660: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:36:45,660: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:36:45,660: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:36:45,660: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:36:45,660: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:36:45,660: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:36:45,660: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:36:45,660: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:36:45,660: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:36:45,660: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:36:45,660: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:37:17,787: <re.Match object; span=(1081, 1810), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 03:37:17,787: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 03:37:17,787: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 03:37:17,789: None
[DEBUG]2024-04-10 03:37:17,789: None
[DEBUG]2024-04-10 03:37:17,789: None
[DEBUG]2024-04-10 03:37:17,789: None
[DEBUG]2024-04-10 03:37:17,789: None
[DEBUG]2024-04-10 03:37:17,790: None
[DEBUG]2024-04-10 03:37:17,790: None
[DEBUG]2024-04-10 03:37:17,790: None
[DEBUG]2024-04-10 03:37:17,790: None
[DEBUG]2024-04-10 03:37:17,791: None
[DEBUG]2024-04-10 03:37:17,791: None
[DEBUG]2024-04-10 03:37:17,791: None
[DEBUG]2024-04-10 03:37:17,791: None
[DEBUG]2024-04-10 03:37:17,791: None
[DEBUG]2024-04-10 03:37:17,791: None
[DEBUG]2024-04-10 03:37:17,791: None
[DEBUG]2024-04-10 03:37:17,791: None
[DEBUG]2024-04-10 03:37:17,791: None
[DEBUG]2024-04-10 03:37:17,791: None
[DEBUG]2024-04-10 03:37:17,791: None
[DEBUG]2024-04-10 03:37:17,792: None
[DEBUG]2024-04-10 03:37:17,792: None
[DEBUG]2024-04-10 03:37:17,792: None
[DEBUG]2024-04-10 03:37:17,792: None
[DEBUG]2024-04-10 03:37:17,792: None
[DEBUG]2024-04-10 03:37:17,792: None
[DEBUG]2024-04-10 03:37:17,792: None
[DEBUG]2024-04-10 03:37:17,793: None
[DEBUG]2024-04-10 03:37:17,793: None
[DEBUG]2024-04-10 03:37:17,793: None
[DEBUG]2024-04-10 03:37:17,793: None
[DEBUG]2024-04-10 03:37:17,793: None
[DEBUG]2024-04-10 03:37:17,793: None
[DEBUG]2024-04-10 03:37:17,793: None
[DEBUG]2024-04-10 03:37:17,793: None
[DEBUG]2024-04-10 03:37:17,793: None
[DEBUG]2024-04-10 03:37:17,793: None
[DEBUG]2024-04-10 03:37:17,793: None
[DEBUG]2024-04-10 03:37:17,793: None
[DEBUG]2024-04-10 03:37:17,793: None
[DEBUG]2024-04-10 03:37:17,793: None
[DEBUG]2024-04-10 03:37:17,793: None
[DEBUG]2024-04-10 03:37:17,793: None
[DEBUG]2024-04-10 03:37:17,793: None
[DEBUG]2024-04-10 03:37:17,794: None
[DEBUG]2024-04-10 03:37:17,794: None
[DEBUG]2024-04-10 03:37:17,794: None
[DEBUG]2024-04-10 03:37:17,794: None
[DEBUG]2024-04-10 03:37:17,794: None
[DEBUG]2024-04-10 03:37:17,794: None
[DEBUG]2024-04-10 03:37:17,794: None
[DEBUG]2024-04-10 03:37:17,794: None
[DEBUG]2024-04-10 03:37:17,794: None
[DEBUG]2024-04-10 03:37:17,794: None
[DEBUG]2024-04-10 03:37:17,795: None
[DEBUG]2024-04-10 03:37:17,795: None
[DEBUG]2024-04-10 03:37:17,795: None
[DEBUG]2024-04-10 03:37:17,795: None
[DEBUG]2024-04-10 03:37:17,795: None
[DEBUG]2024-04-10 03:37:17,795: None
[DEBUG]2024-04-10 03:37:17,795: None
[DEBUG]2024-04-10 03:37:17,795: None
[DEBUG]2024-04-10 03:37:17,795: None
[DEBUG]2024-04-10 03:37:17,795: None
[DEBUG]2024-04-10 03:37:17,795: None
[DEBUG]2024-04-10 03:37:17,796: None
[DEBUG]2024-04-10 03:37:17,796: None
[DEBUG]2024-04-10 03:37:17,796: None
[DEBUG]2024-04-10 03:37:17,796: None
[DEBUG]2024-04-10 03:37:17,796: None
[DEBUG]2024-04-10 03:37:17,796: None
[DEBUG]2024-04-10 03:37:17,796: None
[DEBUG]2024-04-10 03:37:17,796: None
[DEBUG]2024-04-10 03:37:17,796: None
[DEBUG]2024-04-10 03:37:17,796: None
[DEBUG]2024-04-10 03:37:17,796: None
[DEBUG]2024-04-10 03:37:17,796: None
[DEBUG]2024-04-10 03:37:17,797: None
[DEBUG]2024-04-10 03:37:17,797: None
[DEBUG]2024-04-10 03:37:17,797: None
[DEBUG]2024-04-10 03:37:17,797: None
[DEBUG]2024-04-10 03:37:17,797: None
[DEBUG]2024-04-10 03:37:17,797: None
[DEBUG]2024-04-10 03:37:17,797: None
[DEBUG]2024-04-10 03:37:17,797: None
[DEBUG]2024-04-10 03:37:17,797: None
[DEBUG]2024-04-10 03:37:17,797: None
[DEBUG]2024-04-10 03:37:17,797: None
[DEBUG]2024-04-10 03:37:17,797: None
[DEBUG]2024-04-10 03:37:17,797: None
[DEBUG]2024-04-10 03:37:17,798: None
[DEBUG]2024-04-10 03:37:17,798: None
[DEBUG]2024-04-10 03:37:17,798: None
[DEBUG]2024-04-10 03:37:17,798: None
[DEBUG]2024-04-10 03:37:17,798: None
[DEBUG]2024-04-10 03:37:17,798: None
[DEBUG]2024-04-10 03:37:17,798: None
[DEBUG]2024-04-10 03:37:17,798: None
[DEBUG]2024-04-10 03:37:17,798: None
[DEBUG]2024-04-10 03:37:17,798: None
[DEBUG]2024-04-10 03:37:17,798: None
[DEBUG]2024-04-10 03:37:17,798: None
[DEBUG]2024-04-10 03:37:17,798: None
[DEBUG]2024-04-10 03:37:17,798: None
[DEBUG]2024-04-10 03:37:17,799: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:37:17,799: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:37:17,799: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:37:17,799: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:37:17,799: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:37:17,799: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:37:17,799: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:37:17,799: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:37:17,799: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:37:17,799: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:37:17,799: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:37:17,799: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:37:17,799: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:37:17,799: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:37:17,799: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:37:17,799: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:37:17,799: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:37:17,799: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:37:17,799: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:37:17,799: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:37:17,799: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:37:17,799: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:37:17,799: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:37:17,799: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:37:17,799: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:37:17,799: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:37:17,799: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:37:17,799: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:37:17,799: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:37:17,799: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:37:17,800: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:37:17,800: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:37:17,800: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:37:17,800: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:37:17,800: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:37:17,800: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:37:17,800: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:37:17,800: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:37:17,800: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:37:17,800: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:37:17,800: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:37:17,800: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:37:17,800: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:37:17,800: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:37:17,800: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:44:13,298: <re.Match object; span=(1081, 1810), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 03:44:13,298: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 03:44:13,298: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 03:44:13,300: None
[DEBUG]2024-04-10 03:44:13,300: None
[DEBUG]2024-04-10 03:44:13,301: None
[DEBUG]2024-04-10 03:44:13,301: None
[DEBUG]2024-04-10 03:44:13,301: None
[DEBUG]2024-04-10 03:44:13,302: None
[DEBUG]2024-04-10 03:44:13,302: None
[DEBUG]2024-04-10 03:44:13,302: None
[DEBUG]2024-04-10 03:44:13,302: None
[DEBUG]2024-04-10 03:44:13,302: None
[DEBUG]2024-04-10 03:44:13,302: None
[DEBUG]2024-04-10 03:44:13,302: None
[DEBUG]2024-04-10 03:44:13,302: None
[DEBUG]2024-04-10 03:44:13,302: None
[DEBUG]2024-04-10 03:44:13,303: None
[DEBUG]2024-04-10 03:44:13,303: None
[DEBUG]2024-04-10 03:44:13,303: None
[DEBUG]2024-04-10 03:44:13,303: None
[DEBUG]2024-04-10 03:44:13,303: None
[DEBUG]2024-04-10 03:44:13,303: None
[DEBUG]2024-04-10 03:44:13,304: None
[DEBUG]2024-04-10 03:44:13,304: None
[DEBUG]2024-04-10 03:44:13,304: None
[DEBUG]2024-04-10 03:44:13,304: None
[DEBUG]2024-04-10 03:44:13,304: None
[DEBUG]2024-04-10 03:44:13,304: None
[DEBUG]2024-04-10 03:44:13,304: None
[DEBUG]2024-04-10 03:44:13,305: None
[DEBUG]2024-04-10 03:44:13,305: None
[DEBUG]2024-04-10 03:44:13,305: None
[DEBUG]2024-04-10 03:44:13,305: None
[DEBUG]2024-04-10 03:44:13,305: None
[DEBUG]2024-04-10 03:44:13,305: None
[DEBUG]2024-04-10 03:44:13,305: None
[DEBUG]2024-04-10 03:44:13,305: None
[DEBUG]2024-04-10 03:44:13,305: None
[DEBUG]2024-04-10 03:44:13,305: None
[DEBUG]2024-04-10 03:44:13,305: None
[DEBUG]2024-04-10 03:44:13,305: None
[DEBUG]2024-04-10 03:44:13,305: None
[DEBUG]2024-04-10 03:44:13,305: None
[DEBUG]2024-04-10 03:44:13,305: None
[DEBUG]2024-04-10 03:44:13,305: None
[DEBUG]2024-04-10 03:44:13,305: None
[DEBUG]2024-04-10 03:44:13,306: None
[DEBUG]2024-04-10 03:44:13,306: None
[DEBUG]2024-04-10 03:44:13,306: None
[DEBUG]2024-04-10 03:44:13,306: None
[DEBUG]2024-04-10 03:44:13,306: None
[DEBUG]2024-04-10 03:44:13,306: None
[DEBUG]2024-04-10 03:44:13,306: None
[DEBUG]2024-04-10 03:44:13,306: None
[DEBUG]2024-04-10 03:44:13,306: None
[DEBUG]2024-04-10 03:44:13,306: None
[DEBUG]2024-04-10 03:44:13,307: None
[DEBUG]2024-04-10 03:44:13,307: None
[DEBUG]2024-04-10 03:44:13,307: None
[DEBUG]2024-04-10 03:44:13,307: None
[DEBUG]2024-04-10 03:44:13,307: None
[DEBUG]2024-04-10 03:44:13,307: None
[DEBUG]2024-04-10 03:44:13,307: None
[DEBUG]2024-04-10 03:44:13,307: None
[DEBUG]2024-04-10 03:44:13,307: None
[DEBUG]2024-04-10 03:44:13,307: None
[DEBUG]2024-04-10 03:44:13,307: None
[DEBUG]2024-04-10 03:44:13,308: None
[DEBUG]2024-04-10 03:44:13,308: None
[DEBUG]2024-04-10 03:44:13,308: None
[DEBUG]2024-04-10 03:44:13,308: None
[DEBUG]2024-04-10 03:44:13,308: None
[DEBUG]2024-04-10 03:44:13,308: None
[DEBUG]2024-04-10 03:44:13,308: None
[DEBUG]2024-04-10 03:44:13,308: None
[DEBUG]2024-04-10 03:44:13,308: None
[DEBUG]2024-04-10 03:44:13,308: None
[DEBUG]2024-04-10 03:44:13,308: None
[DEBUG]2024-04-10 03:44:13,308: None
[DEBUG]2024-04-10 03:44:13,309: None
[DEBUG]2024-04-10 03:44:13,309: None
[DEBUG]2024-04-10 03:44:13,309: None
[DEBUG]2024-04-10 03:44:13,309: None
[DEBUG]2024-04-10 03:44:13,309: None
[DEBUG]2024-04-10 03:44:13,309: None
[DEBUG]2024-04-10 03:44:13,309: None
[DEBUG]2024-04-10 03:44:13,309: None
[DEBUG]2024-04-10 03:44:13,309: None
[DEBUG]2024-04-10 03:44:13,309: None
[DEBUG]2024-04-10 03:44:13,309: None
[DEBUG]2024-04-10 03:44:13,309: None
[DEBUG]2024-04-10 03:44:13,309: None
[DEBUG]2024-04-10 03:44:13,310: None
[DEBUG]2024-04-10 03:44:13,310: None
[DEBUG]2024-04-10 03:44:13,310: None
[DEBUG]2024-04-10 03:44:13,310: None
[DEBUG]2024-04-10 03:44:13,310: None
[DEBUG]2024-04-10 03:44:13,310: None
[DEBUG]2024-04-10 03:44:13,310: None
[DEBUG]2024-04-10 03:44:13,310: None
[DEBUG]2024-04-10 03:44:13,310: None
[DEBUG]2024-04-10 03:44:13,310: None
[DEBUG]2024-04-10 03:44:13,310: None
[DEBUG]2024-04-10 03:44:13,310: None
[DEBUG]2024-04-10 03:44:13,310: None
[DEBUG]2024-04-10 03:44:13,310: None
[DEBUG]2024-04-10 03:44:13,311: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:44:13,311: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:44:13,311: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:44:13,311: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:44:13,311: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:44:13,311: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:44:13,311: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:44:13,311: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:44:13,311: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:44:13,311: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:44:13,311: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:44:13,311: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:44:13,311: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:44:13,311: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:44:13,311: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:44:13,312: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:44:13,312: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:44:13,312: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:44:13,312: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:44:13,312: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:44:13,312: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:44:13,312: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:44:13,312: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:44:13,312: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:44:13,312: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:44:13,312: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:44:13,312: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:44:13,312: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:44:13,312: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:44:13,312: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:44:13,312: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:44:13,312: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:44:13,312: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:44:13,312: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:44:13,312: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:44:13,312: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:44:13,312: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:44:13,312: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:44:13,312: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:44:13,312: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:44:13,312: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:44:13,312: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:44:13,312: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:44:13,312: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:44:13,312: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:44:13,313: None
[DEBUG]2024-04-10 03:44:13,313: None
[DEBUG]2024-04-10 03:44:13,313: None
[DEBUG]2024-04-10 03:44:13,313: None
[DEBUG]2024-04-10 03:44:13,313: None
[DEBUG]2024-04-10 03:44:13,313: None
[DEBUG]2024-04-10 03:44:13,313: None
[DEBUG]2024-04-10 03:44:13,313: None
[DEBUG]2024-04-10 03:44:13,313: None
[DEBUG]2024-04-10 03:44:13,313: None
[DEBUG]2024-04-10 03:44:13,313: None
[DEBUG]2024-04-10 03:44:13,313: None
[DEBUG]2024-04-10 03:44:13,313: None
[DEBUG]2024-04-10 03:44:13,313: None
[DEBUG]2024-04-10 03:44:13,313: None
[DEBUG]2024-04-10 03:44:13,313: None
[DEBUG]2024-04-10 03:44:13,314: None
[DEBUG]2024-04-10 03:44:13,314: None
[DEBUG]2024-04-10 03:44:13,314: None
[DEBUG]2024-04-10 03:44:13,314: None
[DEBUG]2024-04-10 03:44:13,314: None
[DEBUG]2024-04-10 03:44:13,314: None
[DEBUG]2024-04-10 03:44:13,314: None
[DEBUG]2024-04-10 03:44:13,314: None
[DEBUG]2024-04-10 03:44:13,314: None
[DEBUG]2024-04-10 03:44:13,314: None
[DEBUG]2024-04-10 03:44:13,314: None
[DEBUG]2024-04-10 03:44:13,314: None
[DEBUG]2024-04-10 03:44:13,314: None
[DEBUG]2024-04-10 03:44:13,314: None
[DEBUG]2024-04-10 03:44:13,314: None
[DEBUG]2024-04-10 03:44:13,314: None
[DEBUG]2024-04-10 03:44:13,314: None
[DEBUG]2024-04-10 03:44:34,366: <re.Match object; span=(1081, 1810), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 03:44:34,366: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 03:44:34,366: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 03:44:34,368: None
[DEBUG]2024-04-10 03:44:34,368: None
[DEBUG]2024-04-10 03:44:34,368: None
[DEBUG]2024-04-10 03:44:34,368: None
[DEBUG]2024-04-10 03:44:34,368: None
[DEBUG]2024-04-10 03:44:34,369: None
[DEBUG]2024-04-10 03:44:34,369: None
[DEBUG]2024-04-10 03:44:34,369: None
[DEBUG]2024-04-10 03:44:34,369: None
[DEBUG]2024-04-10 03:44:34,369: None
[DEBUG]2024-04-10 03:44:34,369: None
[DEBUG]2024-04-10 03:44:34,369: None
[DEBUG]2024-04-10 03:44:34,369: None
[DEBUG]2024-04-10 03:44:34,369: None
[DEBUG]2024-04-10 03:44:34,370: None
[DEBUG]2024-04-10 03:44:34,370: None
[DEBUG]2024-04-10 03:44:34,370: None
[DEBUG]2024-04-10 03:44:34,370: None
[DEBUG]2024-04-10 03:44:34,370: None
[DEBUG]2024-04-10 03:44:34,370: None
[DEBUG]2024-04-10 03:44:34,370: None
[DEBUG]2024-04-10 03:44:34,370: None
[DEBUG]2024-04-10 03:44:34,370: None
[DEBUG]2024-04-10 03:44:34,370: None
[DEBUG]2024-04-10 03:44:34,370: None
[DEBUG]2024-04-10 03:44:34,370: None
[DEBUG]2024-04-10 03:44:34,370: None
[DEBUG]2024-04-10 03:44:34,370: None
[DEBUG]2024-04-10 03:44:34,370: None
[DEBUG]2024-04-10 03:44:34,370: None
[DEBUG]2024-04-10 03:44:34,370: None
[DEBUG]2024-04-10 03:44:34,370: None
[DEBUG]2024-04-10 03:44:34,370: None
[DEBUG]2024-04-10 03:44:34,370: None
[DEBUG]2024-04-10 03:44:34,370: None
[DEBUG]2024-04-10 03:44:34,371: None
[DEBUG]2024-04-10 03:44:34,371: None
[DEBUG]2024-04-10 03:44:34,371: None
[DEBUG]2024-04-10 03:44:34,371: None
[DEBUG]2024-04-10 03:44:34,371: None
[DEBUG]2024-04-10 03:44:34,371: None
[DEBUG]2024-04-10 03:44:34,371: None
[DEBUG]2024-04-10 03:44:34,371: None
[DEBUG]2024-04-10 03:44:34,371: None
[DEBUG]2024-04-10 03:44:34,372: None
[DEBUG]2024-04-10 03:44:34,372: None
[DEBUG]2024-04-10 03:44:34,372: None
[DEBUG]2024-04-10 03:44:34,372: None
[DEBUG]2024-04-10 03:44:34,372: None
[DEBUG]2024-04-10 03:44:34,372: None
[DEBUG]2024-04-10 03:44:34,372: None
[DEBUG]2024-04-10 03:44:34,372: None
[DEBUG]2024-04-10 03:44:34,372: None
[DEBUG]2024-04-10 03:44:34,372: None
[DEBUG]2024-04-10 03:44:34,373: None
[DEBUG]2024-04-10 03:44:34,373: None
[DEBUG]2024-04-10 03:44:34,373: None
[DEBUG]2024-04-10 03:44:34,373: None
[DEBUG]2024-04-10 03:44:34,373: None
[DEBUG]2024-04-10 03:44:34,373: None
[DEBUG]2024-04-10 03:44:34,373: None
[DEBUG]2024-04-10 03:44:34,373: None
[DEBUG]2024-04-10 03:44:34,373: None
[DEBUG]2024-04-10 03:44:34,373: None
[DEBUG]2024-04-10 03:44:34,373: None
[DEBUG]2024-04-10 03:44:34,374: None
[DEBUG]2024-04-10 03:44:34,374: None
[DEBUG]2024-04-10 03:44:34,374: None
[DEBUG]2024-04-10 03:44:34,374: None
[DEBUG]2024-04-10 03:44:34,374: None
[DEBUG]2024-04-10 03:44:34,374: None
[DEBUG]2024-04-10 03:44:34,374: None
[DEBUG]2024-04-10 03:44:34,374: None
[DEBUG]2024-04-10 03:44:34,374: None
[DEBUG]2024-04-10 03:44:34,374: None
[DEBUG]2024-04-10 03:44:34,374: None
[DEBUG]2024-04-10 03:44:34,374: None
[DEBUG]2024-04-10 03:44:34,375: None
[DEBUG]2024-04-10 03:44:34,375: None
[DEBUG]2024-04-10 03:44:34,375: None
[DEBUG]2024-04-10 03:44:34,375: None
[DEBUG]2024-04-10 03:44:34,375: None
[DEBUG]2024-04-10 03:44:34,375: None
[DEBUG]2024-04-10 03:44:34,375: None
[DEBUG]2024-04-10 03:44:34,375: None
[DEBUG]2024-04-10 03:44:34,375: None
[DEBUG]2024-04-10 03:44:34,375: None
[DEBUG]2024-04-10 03:44:34,375: None
[DEBUG]2024-04-10 03:44:34,375: None
[DEBUG]2024-04-10 03:44:34,375: None
[DEBUG]2024-04-10 03:44:34,375: None
[DEBUG]2024-04-10 03:44:34,375: None
[DEBUG]2024-04-10 03:44:34,375: None
[DEBUG]2024-04-10 03:44:34,375: None
[DEBUG]2024-04-10 03:44:34,375: None
[DEBUG]2024-04-10 03:44:34,375: None
[DEBUG]2024-04-10 03:44:34,375: None
[DEBUG]2024-04-10 03:44:34,375: None
[DEBUG]2024-04-10 03:44:34,375: None
[DEBUG]2024-04-10 03:44:34,375: None
[DEBUG]2024-04-10 03:44:34,375: None
[DEBUG]2024-04-10 03:44:34,375: None
[DEBUG]2024-04-10 03:44:34,375: None
[DEBUG]2024-04-10 03:44:34,375: None
[DEBUG]2024-04-10 03:44:34,376: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:44:34,376: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:44:34,376: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:44:34,376: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:44:34,376: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:44:34,376: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:44:34,376: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:44:34,376: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:44:34,376: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:44:34,376: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:44:34,376: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:44:34,376: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:44:34,376: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:44:34,376: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:44:34,376: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:44:34,377: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:44:34,377: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:44:34,377: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:44:34,377: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:44:34,377: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:44:34,377: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:44:34,377: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:44:34,377: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:44:34,377: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:44:34,377: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:44:34,377: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:44:34,377: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:44:34,377: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:44:34,377: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:44:34,377: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:44:34,377: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:44:34,377: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:44:34,377: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:44:34,377: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:44:34,377: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:44:34,377: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:44:34,377: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:44:34,377: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:44:34,377: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:44:34,377: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:44:34,377: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:44:34,377: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:44:34,377: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:44:34,377: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:44:34,377: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:44:34,378: None
[DEBUG]2024-04-10 03:44:34,378: None
[DEBUG]2024-04-10 03:44:34,378: None
[DEBUG]2024-04-10 03:44:34,378: None
[DEBUG]2024-04-10 03:44:34,378: None
[DEBUG]2024-04-10 03:44:34,378: None
[DEBUG]2024-04-10 03:44:34,378: None
[DEBUG]2024-04-10 03:44:34,378: None
[DEBUG]2024-04-10 03:44:34,378: None
[DEBUG]2024-04-10 03:44:34,378: None
[DEBUG]2024-04-10 03:44:34,378: None
[DEBUG]2024-04-10 03:44:34,378: None
[DEBUG]2024-04-10 03:44:34,378: None
[DEBUG]2024-04-10 03:44:34,378: None
[DEBUG]2024-04-10 03:44:34,378: None
[DEBUG]2024-04-10 03:44:34,378: None
[DEBUG]2024-04-10 03:44:34,379: None
[DEBUG]2024-04-10 03:44:34,379: None
[DEBUG]2024-04-10 03:44:34,379: None
[DEBUG]2024-04-10 03:44:34,379: None
[DEBUG]2024-04-10 03:44:34,379: None
[DEBUG]2024-04-10 03:44:34,379: None
[DEBUG]2024-04-10 03:44:34,379: None
[DEBUG]2024-04-10 03:44:34,379: None
[DEBUG]2024-04-10 03:44:34,379: None
[DEBUG]2024-04-10 03:44:34,379: None
[DEBUG]2024-04-10 03:44:34,379: None
[DEBUG]2024-04-10 03:44:34,379: None
[DEBUG]2024-04-10 03:44:34,379: None
[DEBUG]2024-04-10 03:44:34,379: None
[DEBUG]2024-04-10 03:44:34,379: None
[DEBUG]2024-04-10 03:44:34,379: None
[DEBUG]2024-04-10 03:44:34,379: None
[DEBUG]2024-04-10 03:45:07,858: <re.Match object; span=(1081, 1862), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 03:45:07,859: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 03:45:07,859: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 03:45:07,861: None
[DEBUG]2024-04-10 03:45:07,861: None
[DEBUG]2024-04-10 03:45:07,862: None
[DEBUG]2024-04-10 03:45:07,862: None
[DEBUG]2024-04-10 03:45:07,862: None
[DEBUG]2024-04-10 03:45:07,863: None
[DEBUG]2024-04-10 03:45:07,863: None
[DEBUG]2024-04-10 03:45:07,863: None
[DEBUG]2024-04-10 03:45:07,863: None
[DEBUG]2024-04-10 03:45:07,863: None
[DEBUG]2024-04-10 03:45:07,863: None
[DEBUG]2024-04-10 03:45:07,863: None
[DEBUG]2024-04-10 03:45:07,863: None
[DEBUG]2024-04-10 03:45:07,863: None
[DEBUG]2024-04-10 03:45:07,864: None
[DEBUG]2024-04-10 03:45:07,864: None
[DEBUG]2024-04-10 03:45:07,864: None
[DEBUG]2024-04-10 03:45:07,864: None
[DEBUG]2024-04-10 03:45:07,864: None
[DEBUG]2024-04-10 03:45:07,864: None
[DEBUG]2024-04-10 03:45:07,865: None
[DEBUG]2024-04-10 03:45:07,865: None
[DEBUG]2024-04-10 03:45:07,865: None
[DEBUG]2024-04-10 03:45:07,865: None
[DEBUG]2024-04-10 03:45:07,865: None
[DEBUG]2024-04-10 03:45:07,865: None
[DEBUG]2024-04-10 03:45:07,865: None
[DEBUG]2024-04-10 03:45:07,865: None
[DEBUG]2024-04-10 03:45:07,865: None
[DEBUG]2024-04-10 03:45:07,865: None
[DEBUG]2024-04-10 03:45:07,865: None
[DEBUG]2024-04-10 03:45:07,865: None
[DEBUG]2024-04-10 03:45:07,865: None
[DEBUG]2024-04-10 03:45:07,865: None
[DEBUG]2024-04-10 03:45:07,865: None
[DEBUG]2024-04-10 03:45:07,867: None
[DEBUG]2024-04-10 03:45:07,867: None
[DEBUG]2024-04-10 03:45:07,867: None
[DEBUG]2024-04-10 03:45:07,867: None
[DEBUG]2024-04-10 03:45:07,867: None
[DEBUG]2024-04-10 03:45:07,867: None
[DEBUG]2024-04-10 03:45:07,867: None
[DEBUG]2024-04-10 03:45:07,867: None
[DEBUG]2024-04-10 03:45:07,867: None
[DEBUG]2024-04-10 03:45:07,868: None
[DEBUG]2024-04-10 03:45:07,868: None
[DEBUG]2024-04-10 03:45:07,868: None
[DEBUG]2024-04-10 03:45:07,868: None
[DEBUG]2024-04-10 03:45:07,868: None
[DEBUG]2024-04-10 03:45:07,868: None
[DEBUG]2024-04-10 03:45:07,868: None
[DEBUG]2024-04-10 03:45:07,868: None
[DEBUG]2024-04-10 03:45:07,868: None
[DEBUG]2024-04-10 03:45:07,868: None
[DEBUG]2024-04-10 03:45:07,869: None
[DEBUG]2024-04-10 03:45:07,869: None
[DEBUG]2024-04-10 03:45:07,869: None
[DEBUG]2024-04-10 03:45:07,869: None
[DEBUG]2024-04-10 03:45:07,869: None
[DEBUG]2024-04-10 03:45:07,869: None
[DEBUG]2024-04-10 03:45:07,869: None
[DEBUG]2024-04-10 03:45:07,869: None
[DEBUG]2024-04-10 03:45:07,869: None
[DEBUG]2024-04-10 03:45:07,869: None
[DEBUG]2024-04-10 03:45:07,869: None
[DEBUG]2024-04-10 03:45:07,870: None
[DEBUG]2024-04-10 03:45:07,870: None
[DEBUG]2024-04-10 03:45:07,870: None
[DEBUG]2024-04-10 03:45:07,870: None
[DEBUG]2024-04-10 03:45:07,870: None
[DEBUG]2024-04-10 03:45:07,870: None
[DEBUG]2024-04-10 03:45:07,870: None
[DEBUG]2024-04-10 03:45:07,870: None
[DEBUG]2024-04-10 03:45:07,870: None
[DEBUG]2024-04-10 03:45:07,870: None
[DEBUG]2024-04-10 03:45:07,870: None
[DEBUG]2024-04-10 03:45:07,870: None
[DEBUG]2024-04-10 03:45:07,870: None
[DEBUG]2024-04-10 03:45:07,870: None
[DEBUG]2024-04-10 03:45:07,870: None
[DEBUG]2024-04-10 03:45:07,870: None
[DEBUG]2024-04-10 03:45:07,870: None
[DEBUG]2024-04-10 03:45:07,870: None
[DEBUG]2024-04-10 03:45:07,870: None
[DEBUG]2024-04-10 03:45:07,870: None
[DEBUG]2024-04-10 03:45:07,870: None
[DEBUG]2024-04-10 03:45:07,870: None
[DEBUG]2024-04-10 03:45:07,870: None
[DEBUG]2024-04-10 03:45:07,870: None
[DEBUG]2024-04-10 03:45:07,870: None
[DEBUG]2024-04-10 03:45:07,871: None
[DEBUG]2024-04-10 03:45:07,871: None
[DEBUG]2024-04-10 03:45:07,871: None
[DEBUG]2024-04-10 03:45:07,871: None
[DEBUG]2024-04-10 03:45:07,871: None
[DEBUG]2024-04-10 03:45:07,871: None
[DEBUG]2024-04-10 03:45:07,871: None
[DEBUG]2024-04-10 03:45:07,871: None
[DEBUG]2024-04-10 03:45:07,871: None
[DEBUG]2024-04-10 03:45:07,871: None
[DEBUG]2024-04-10 03:45:07,871: None
[DEBUG]2024-04-10 03:45:07,871: None
[DEBUG]2024-04-10 03:45:07,871: None
[DEBUG]2024-04-10 03:45:07,871: None
[DEBUG]2024-04-10 03:45:07,872: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:45:07,872: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:45:07,872: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:45:07,872: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:45:07,872: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:45:07,872: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:45:07,872: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:45:07,872: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:45:07,872: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:45:07,872: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:45:07,872: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:45:07,872: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:45:07,872: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:45:07,872: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:45:07,872: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:45:07,873: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:45:07,873: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:45:07,873: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:45:07,873: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:45:07,873: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:45:07,873: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:45:07,873: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:45:07,873: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:45:07,873: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:45:07,873: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:45:07,873: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:45:07,873: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:45:07,873: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:45:07,873: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:45:07,873: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:45:07,873: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:45:07,873: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:45:07,873: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:45:07,873: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:45:07,873: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:45:07,873: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:45:07,873: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:45:07,873: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:45:07,873: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:45:07,873: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:45:07,873: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:45:07,873: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:45:07,873: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:45:07,873: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:45:07,873: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:45:07,874: None
[DEBUG]2024-04-10 03:45:07,874: None
[DEBUG]2024-04-10 03:45:07,874: None
[DEBUG]2024-04-10 03:45:07,874: None
[DEBUG]2024-04-10 03:45:07,874: None
[DEBUG]2024-04-10 03:45:07,874: None
[DEBUG]2024-04-10 03:45:07,874: None
[DEBUG]2024-04-10 03:45:07,874: None
[DEBUG]2024-04-10 03:45:07,874: None
[DEBUG]2024-04-10 03:45:07,874: None
[DEBUG]2024-04-10 03:45:07,874: None
[DEBUG]2024-04-10 03:45:07,874: None
[DEBUG]2024-04-10 03:45:07,874: None
[DEBUG]2024-04-10 03:45:07,874: None
[DEBUG]2024-04-10 03:45:07,874: None
[DEBUG]2024-04-10 03:45:07,874: None
[DEBUG]2024-04-10 03:45:07,875: None
[DEBUG]2024-04-10 03:45:07,875: None
[DEBUG]2024-04-10 03:45:07,875: None
[DEBUG]2024-04-10 03:45:07,875: None
[DEBUG]2024-04-10 03:45:07,875: None
[DEBUG]2024-04-10 03:45:07,875: None
[DEBUG]2024-04-10 03:45:07,875: None
[DEBUG]2024-04-10 03:45:07,875: None
[DEBUG]2024-04-10 03:45:07,875: None
[DEBUG]2024-04-10 03:45:07,875: None
[DEBUG]2024-04-10 03:45:07,875: None
[DEBUG]2024-04-10 03:45:07,875: None
[DEBUG]2024-04-10 03:45:07,875: None
[DEBUG]2024-04-10 03:45:07,875: None
[DEBUG]2024-04-10 03:45:07,875: None
[DEBUG]2024-04-10 03:45:07,875: None
[DEBUG]2024-04-10 03:45:07,875: None
[DEBUG]2024-04-10 03:46:29,077: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 03:46:29,077: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 03:46:29,077: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 03:46:29,079: None
[DEBUG]2024-04-10 03:46:29,079: None
[DEBUG]2024-04-10 03:46:29,080: None
[DEBUG]2024-04-10 03:46:29,080: None
[DEBUG]2024-04-10 03:46:29,080: None
[DEBUG]2024-04-10 03:46:29,080: None
[DEBUG]2024-04-10 03:46:29,080: None
[DEBUG]2024-04-10 03:46:29,080: None
[DEBUG]2024-04-10 03:46:29,080: None
[DEBUG]2024-04-10 03:46:29,081: None
[DEBUG]2024-04-10 03:46:29,081: None
[DEBUG]2024-04-10 03:46:29,081: None
[DEBUG]2024-04-10 03:46:29,081: None
[DEBUG]2024-04-10 03:46:29,081: None
[DEBUG]2024-04-10 03:46:29,082: None
[DEBUG]2024-04-10 03:46:29,082: None
[DEBUG]2024-04-10 03:46:29,082: None
[DEBUG]2024-04-10 03:46:29,082: None
[DEBUG]2024-04-10 03:46:29,082: None
[DEBUG]2024-04-10 03:46:29,082: None
[DEBUG]2024-04-10 03:46:29,082: None
[DEBUG]2024-04-10 03:46:29,082: None
[DEBUG]2024-04-10 03:46:29,082: None
[DEBUG]2024-04-10 03:46:29,082: None
[DEBUG]2024-04-10 03:46:29,082: None
[DEBUG]2024-04-10 03:46:29,082: None
[DEBUG]2024-04-10 03:46:29,082: None
[DEBUG]2024-04-10 03:46:29,083: None
[DEBUG]2024-04-10 03:46:29,083: None
[DEBUG]2024-04-10 03:46:29,083: None
[DEBUG]2024-04-10 03:46:29,083: None
[DEBUG]2024-04-10 03:46:29,083: None
[DEBUG]2024-04-10 03:46:29,083: None
[DEBUG]2024-04-10 03:46:29,083: None
[DEBUG]2024-04-10 03:46:29,083: None
[DEBUG]2024-04-10 03:46:29,084: None
[DEBUG]2024-04-10 03:46:29,084: None
[DEBUG]2024-04-10 03:46:29,084: None
[DEBUG]2024-04-10 03:46:29,084: None
[DEBUG]2024-04-10 03:46:29,084: None
[DEBUG]2024-04-10 03:46:29,084: None
[DEBUG]2024-04-10 03:46:29,084: None
[DEBUG]2024-04-10 03:46:29,084: None
[DEBUG]2024-04-10 03:46:29,084: None
[DEBUG]2024-04-10 03:46:29,085: None
[DEBUG]2024-04-10 03:46:29,085: None
[DEBUG]2024-04-10 03:46:29,085: None
[DEBUG]2024-04-10 03:46:29,085: None
[DEBUG]2024-04-10 03:46:29,085: None
[DEBUG]2024-04-10 03:46:29,085: None
[DEBUG]2024-04-10 03:46:29,085: None
[DEBUG]2024-04-10 03:46:29,085: None
[DEBUG]2024-04-10 03:46:29,085: None
[DEBUG]2024-04-10 03:46:29,085: None
[DEBUG]2024-04-10 03:46:29,085: None
[DEBUG]2024-04-10 03:46:29,085: None
[DEBUG]2024-04-10 03:46:29,085: None
[DEBUG]2024-04-10 03:46:29,085: None
[DEBUG]2024-04-10 03:46:29,085: None
[DEBUG]2024-04-10 03:46:29,085: None
[DEBUG]2024-04-10 03:46:29,085: None
[DEBUG]2024-04-10 03:46:29,085: None
[DEBUG]2024-04-10 03:46:29,085: None
[DEBUG]2024-04-10 03:46:29,085: None
[DEBUG]2024-04-10 03:46:29,085: None
[DEBUG]2024-04-10 03:46:29,086: None
[DEBUG]2024-04-10 03:46:29,086: None
[DEBUG]2024-04-10 03:46:29,086: None
[DEBUG]2024-04-10 03:46:29,086: None
[DEBUG]2024-04-10 03:46:29,086: None
[DEBUG]2024-04-10 03:46:29,086: None
[DEBUG]2024-04-10 03:46:29,086: None
[DEBUG]2024-04-10 03:46:29,086: None
[DEBUG]2024-04-10 03:46:29,086: None
[DEBUG]2024-04-10 03:46:29,086: None
[DEBUG]2024-04-10 03:46:29,086: None
[DEBUG]2024-04-10 03:46:29,086: None
[DEBUG]2024-04-10 03:46:29,087: None
[DEBUG]2024-04-10 03:46:29,087: None
[DEBUG]2024-04-10 03:46:29,087: None
[DEBUG]2024-04-10 03:46:29,087: None
[DEBUG]2024-04-10 03:46:29,087: None
[DEBUG]2024-04-10 03:46:29,087: None
[DEBUG]2024-04-10 03:46:29,087: None
[DEBUG]2024-04-10 03:46:29,087: None
[DEBUG]2024-04-10 03:46:29,087: None
[DEBUG]2024-04-10 03:46:29,087: None
[DEBUG]2024-04-10 03:46:29,087: None
[DEBUG]2024-04-10 03:46:29,087: None
[DEBUG]2024-04-10 03:46:29,087: None
[DEBUG]2024-04-10 03:46:29,088: None
[DEBUG]2024-04-10 03:46:29,088: None
[DEBUG]2024-04-10 03:46:29,088: None
[DEBUG]2024-04-10 03:46:29,088: None
[DEBUG]2024-04-10 03:46:29,088: None
[DEBUG]2024-04-10 03:46:29,088: None
[DEBUG]2024-04-10 03:46:29,088: None
[DEBUG]2024-04-10 03:46:29,088: None
[DEBUG]2024-04-10 03:46:29,088: None
[DEBUG]2024-04-10 03:46:29,088: None
[DEBUG]2024-04-10 03:46:29,088: None
[DEBUG]2024-04-10 03:46:29,088: None
[DEBUG]2024-04-10 03:46:29,088: None
[DEBUG]2024-04-10 03:46:29,088: None
[DEBUG]2024-04-10 03:46:29,089: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:46:29,089: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:46:29,089: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:46:29,089: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:46:29,089: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:46:29,089: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:46:29,089: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:46:29,089: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:46:29,089: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:46:29,089: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:46:29,089: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:46:29,089: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:46:29,089: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:46:29,089: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:46:29,089: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:46:29,090: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:46:29,090: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:46:29,090: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:46:29,090: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:46:29,090: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:46:29,090: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:46:29,090: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:46:29,090: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:46:29,090: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:46:29,090: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:46:29,090: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:46:29,090: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:46:29,090: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:46:29,090: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:46:29,090: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:46:29,090: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:46:29,090: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:46:29,090: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:46:29,090: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:46:29,090: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:46:29,090: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:46:29,090: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:46:29,090: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:46:29,090: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:46:29,090: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:46:29,090: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:46:29,090: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:46:29,090: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:46:29,090: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:46:29,090: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:46:29,091: None
[DEBUG]2024-04-10 03:46:29,091: None
[DEBUG]2024-04-10 03:46:29,091: None
[DEBUG]2024-04-10 03:46:29,091: None
[DEBUG]2024-04-10 03:46:29,091: None
[DEBUG]2024-04-10 03:46:29,091: None
[DEBUG]2024-04-10 03:46:29,091: None
[DEBUG]2024-04-10 03:46:29,091: None
[DEBUG]2024-04-10 03:46:29,091: None
[DEBUG]2024-04-10 03:46:29,091: None
[DEBUG]2024-04-10 03:46:29,091: None
[DEBUG]2024-04-10 03:46:29,091: None
[DEBUG]2024-04-10 03:46:29,091: None
[DEBUG]2024-04-10 03:46:29,091: None
[DEBUG]2024-04-10 03:46:29,091: None
[DEBUG]2024-04-10 03:46:29,091: None
[DEBUG]2024-04-10 03:46:29,092: None
[DEBUG]2024-04-10 03:46:29,092: None
[DEBUG]2024-04-10 03:46:29,092: None
[DEBUG]2024-04-10 03:46:29,092: None
[DEBUG]2024-04-10 03:46:29,092: None
[DEBUG]2024-04-10 03:46:29,092: None
[DEBUG]2024-04-10 03:46:29,092: None
[DEBUG]2024-04-10 03:46:29,092: None
[DEBUG]2024-04-10 03:46:29,092: None
[DEBUG]2024-04-10 03:46:29,092: None
[DEBUG]2024-04-10 03:46:29,092: None
[DEBUG]2024-04-10 03:46:29,092: None
[DEBUG]2024-04-10 03:46:29,092: None
[DEBUG]2024-04-10 03:46:29,092: None
[DEBUG]2024-04-10 03:46:29,092: None
[DEBUG]2024-04-10 03:46:29,092: None
[DEBUG]2024-04-10 03:46:29,092: None
[DEBUG]2024-04-10 03:47:00,740: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 03:47:00,740: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 03:47:00,740: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 03:47:00,742: None
[DEBUG]2024-04-10 03:47:00,742: None
[DEBUG]2024-04-10 03:47:00,742: None
[DEBUG]2024-04-10 03:47:00,742: None
[DEBUG]2024-04-10 03:47:00,742: None
[DEBUG]2024-04-10 03:47:00,743: None
[DEBUG]2024-04-10 03:47:00,743: None
[DEBUG]2024-04-10 03:47:00,743: None
[DEBUG]2024-04-10 03:47:00,743: None
[DEBUG]2024-04-10 03:47:00,743: None
[DEBUG]2024-04-10 03:47:00,743: None
[DEBUG]2024-04-10 03:47:00,743: None
[DEBUG]2024-04-10 03:47:00,743: None
[DEBUG]2024-04-10 03:47:00,743: None
[DEBUG]2024-04-10 03:47:00,744: None
[DEBUG]2024-04-10 03:47:00,744: None
[DEBUG]2024-04-10 03:47:00,744: None
[DEBUG]2024-04-10 03:47:00,744: None
[DEBUG]2024-04-10 03:47:00,744: None
[DEBUG]2024-04-10 03:47:00,744: None
[DEBUG]2024-04-10 03:47:00,745: None
[DEBUG]2024-04-10 03:47:00,745: None
[DEBUG]2024-04-10 03:47:00,745: None
[DEBUG]2024-04-10 03:47:00,745: None
[DEBUG]2024-04-10 03:47:00,745: None
[DEBUG]2024-04-10 03:47:00,745: None
[DEBUG]2024-04-10 03:47:00,745: None
[DEBUG]2024-04-10 03:47:00,745: None
[DEBUG]2024-04-10 03:47:00,745: None
[DEBUG]2024-04-10 03:47:00,745: None
[DEBUG]2024-04-10 03:47:00,745: None
[DEBUG]2024-04-10 03:47:00,745: None
[DEBUG]2024-04-10 03:47:00,745: None
[DEBUG]2024-04-10 03:47:00,745: None
[DEBUG]2024-04-10 03:47:00,745: None
[DEBUG]2024-04-10 03:47:00,746: None
[DEBUG]2024-04-10 03:47:00,746: None
[DEBUG]2024-04-10 03:47:00,746: None
[DEBUG]2024-04-10 03:47:00,746: None
[DEBUG]2024-04-10 03:47:00,746: None
[DEBUG]2024-04-10 03:47:00,746: None
[DEBUG]2024-04-10 03:47:00,746: None
[DEBUG]2024-04-10 03:47:00,746: None
[DEBUG]2024-04-10 03:47:00,746: None
[DEBUG]2024-04-10 03:47:00,747: None
[DEBUG]2024-04-10 03:47:00,747: None
[DEBUG]2024-04-10 03:47:00,747: None
[DEBUG]2024-04-10 03:47:00,747: None
[DEBUG]2024-04-10 03:47:00,747: None
[DEBUG]2024-04-10 03:47:00,747: None
[DEBUG]2024-04-10 03:47:00,747: None
[DEBUG]2024-04-10 03:47:00,747: None
[DEBUG]2024-04-10 03:47:00,747: None
[DEBUG]2024-04-10 03:47:00,747: None
[DEBUG]2024-04-10 03:47:00,748: None
[DEBUG]2024-04-10 03:47:00,748: None
[DEBUG]2024-04-10 03:47:00,748: None
[DEBUG]2024-04-10 03:47:00,748: None
[DEBUG]2024-04-10 03:47:00,748: None
[DEBUG]2024-04-10 03:47:00,748: None
[DEBUG]2024-04-10 03:47:00,748: None
[DEBUG]2024-04-10 03:47:00,748: None
[DEBUG]2024-04-10 03:47:00,748: None
[DEBUG]2024-04-10 03:47:00,748: None
[DEBUG]2024-04-10 03:47:00,748: None
[DEBUG]2024-04-10 03:47:00,749: None
[DEBUG]2024-04-10 03:47:00,749: None
[DEBUG]2024-04-10 03:47:00,749: None
[DEBUG]2024-04-10 03:47:00,749: None
[DEBUG]2024-04-10 03:47:00,749: None
[DEBUG]2024-04-10 03:47:00,749: None
[DEBUG]2024-04-10 03:47:00,749: None
[DEBUG]2024-04-10 03:47:00,749: None
[DEBUG]2024-04-10 03:47:00,749: None
[DEBUG]2024-04-10 03:47:00,749: None
[DEBUG]2024-04-10 03:47:00,749: None
[DEBUG]2024-04-10 03:47:00,749: None
[DEBUG]2024-04-10 03:47:00,749: None
[DEBUG]2024-04-10 03:47:00,749: None
[DEBUG]2024-04-10 03:47:00,749: None
[DEBUG]2024-04-10 03:47:00,749: None
[DEBUG]2024-04-10 03:47:00,749: None
[DEBUG]2024-04-10 03:47:00,749: None
[DEBUG]2024-04-10 03:47:00,749: None
[DEBUG]2024-04-10 03:47:00,749: None
[DEBUG]2024-04-10 03:47:00,749: None
[DEBUG]2024-04-10 03:47:00,749: None
[DEBUG]2024-04-10 03:47:00,749: None
[DEBUG]2024-04-10 03:47:00,749: None
[DEBUG]2024-04-10 03:47:00,749: None
[DEBUG]2024-04-10 03:47:00,750: None
[DEBUG]2024-04-10 03:47:00,750: None
[DEBUG]2024-04-10 03:47:00,750: None
[DEBUG]2024-04-10 03:47:00,750: None
[DEBUG]2024-04-10 03:47:00,750: None
[DEBUG]2024-04-10 03:47:00,750: None
[DEBUG]2024-04-10 03:47:00,750: None
[DEBUG]2024-04-10 03:47:00,750: None
[DEBUG]2024-04-10 03:47:00,750: None
[DEBUG]2024-04-10 03:47:00,750: None
[DEBUG]2024-04-10 03:47:00,750: None
[DEBUG]2024-04-10 03:47:00,750: None
[DEBUG]2024-04-10 03:47:00,750: None
[DEBUG]2024-04-10 03:47:00,750: None
[DEBUG]2024-04-10 03:47:00,751: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:47:00,751: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:47:00,751: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:47:00,751: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:47:00,751: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:47:00,751: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:47:00,751: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:47:00,751: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:47:00,751: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:47:00,751: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:47:00,751: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:47:00,751: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:47:00,751: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:47:00,751: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:47:00,751: <re.Match object; span=(2561, 2629), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 03:47:00,752: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:47:00,752: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:47:00,752: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:47:00,752: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:47:00,752: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:47:00,752: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:47:00,752: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:47:00,752: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:47:00,752: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:47:00,752: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:47:00,752: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:47:00,752: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:47:00,752: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:47:00,752: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:47:00,752: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 03:47:00,752: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:47:00,752: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:47:00,752: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:47:00,752: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:47:00,752: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:47:00,752: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:47:00,752: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:47:00,752: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:47:00,752: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:47:00,752: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:47:00,752: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:47:00,752: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:47:00,752: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:47:00,752: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:47:00,752: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 03:47:00,754: None
[DEBUG]2024-04-10 03:47:00,754: None
[DEBUG]2024-04-10 03:47:00,754: None
[DEBUG]2024-04-10 03:47:00,754: None
[DEBUG]2024-04-10 03:47:00,754: None
[DEBUG]2024-04-10 03:47:00,754: None
[DEBUG]2024-04-10 03:47:00,754: None
[DEBUG]2024-04-10 03:47:00,754: None
[DEBUG]2024-04-10 03:47:00,754: None
[DEBUG]2024-04-10 03:47:00,754: None
[DEBUG]2024-04-10 03:47:00,754: None
[DEBUG]2024-04-10 03:47:00,754: None
[DEBUG]2024-04-10 03:47:00,754: None
[DEBUG]2024-04-10 03:47:00,754: None
[DEBUG]2024-04-10 03:47:00,754: None
[DEBUG]2024-04-10 03:47:00,754: None
[DEBUG]2024-04-10 03:47:00,755: None
[DEBUG]2024-04-10 03:47:00,755: None
[DEBUG]2024-04-10 03:47:00,755: None
[DEBUG]2024-04-10 03:47:00,755: None
[DEBUG]2024-04-10 03:47:00,755: None
[DEBUG]2024-04-10 03:47:00,755: None
[DEBUG]2024-04-10 03:47:00,755: None
[DEBUG]2024-04-10 03:47:00,755: None
[DEBUG]2024-04-10 03:47:00,755: None
[DEBUG]2024-04-10 03:47:00,755: None
[DEBUG]2024-04-10 03:47:00,755: None
[DEBUG]2024-04-10 03:47:00,755: None
[DEBUG]2024-04-10 03:47:00,755: None
[DEBUG]2024-04-10 03:47:00,755: None
[DEBUG]2024-04-10 03:47:00,755: None
[DEBUG]2024-04-10 03:47:00,755: None
[DEBUG]2024-04-10 03:47:00,755: None
[DEBUG]2024-04-10 04:00:44,380: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 04:00:44,380: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 04:00:44,380: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 04:00:44,382: None
[DEBUG]2024-04-10 04:00:44,382: None
[DEBUG]2024-04-10 04:00:44,383: None
[DEBUG]2024-04-10 04:00:44,383: None
[DEBUG]2024-04-10 04:00:44,383: None
[DEBUG]2024-04-10 04:00:44,383: None
[DEBUG]2024-04-10 04:00:44,383: None
[DEBUG]2024-04-10 04:00:44,383: None
[DEBUG]2024-04-10 04:00:44,383: None
[DEBUG]2024-04-10 04:00:44,384: None
[DEBUG]2024-04-10 04:00:44,384: None
[DEBUG]2024-04-10 04:00:44,384: None
[DEBUG]2024-04-10 04:00:44,384: None
[DEBUG]2024-04-10 04:00:44,384: None
[DEBUG]2024-04-10 04:00:44,385: None
[DEBUG]2024-04-10 04:00:44,385: None
[DEBUG]2024-04-10 04:00:44,385: None
[DEBUG]2024-04-10 04:00:44,385: None
[DEBUG]2024-04-10 04:00:44,385: None
[DEBUG]2024-04-10 04:00:44,385: None
[DEBUG]2024-04-10 04:00:44,385: None
[DEBUG]2024-04-10 04:00:44,385: None
[DEBUG]2024-04-10 04:00:44,385: None
[DEBUG]2024-04-10 04:00:44,385: None
[DEBUG]2024-04-10 04:00:44,385: None
[DEBUG]2024-04-10 04:00:44,385: None
[DEBUG]2024-04-10 04:00:44,385: None
[DEBUG]2024-04-10 04:00:44,386: None
[DEBUG]2024-04-10 04:00:44,386: None
[DEBUG]2024-04-10 04:00:44,386: None
[DEBUG]2024-04-10 04:00:44,386: None
[DEBUG]2024-04-10 04:00:44,386: None
[DEBUG]2024-04-10 04:00:44,386: None
[DEBUG]2024-04-10 04:00:44,386: None
[DEBUG]2024-04-10 04:00:44,386: None
[DEBUG]2024-04-10 04:00:44,387: None
[DEBUG]2024-04-10 04:00:44,387: None
[DEBUG]2024-04-10 04:00:44,387: None
[DEBUG]2024-04-10 04:00:44,387: None
[DEBUG]2024-04-10 04:00:44,387: None
[DEBUG]2024-04-10 04:00:44,387: None
[DEBUG]2024-04-10 04:00:44,387: None
[DEBUG]2024-04-10 04:00:44,387: None
[DEBUG]2024-04-10 04:00:44,387: None
[DEBUG]2024-04-10 04:00:44,388: None
[DEBUG]2024-04-10 04:00:44,388: None
[DEBUG]2024-04-10 04:00:44,388: None
[DEBUG]2024-04-10 04:00:44,388: None
[DEBUG]2024-04-10 04:00:44,388: None
[DEBUG]2024-04-10 04:00:44,388: None
[DEBUG]2024-04-10 04:00:44,388: None
[DEBUG]2024-04-10 04:00:44,388: None
[DEBUG]2024-04-10 04:00:44,388: None
[DEBUG]2024-04-10 04:00:44,388: None
[DEBUG]2024-04-10 04:00:44,389: None
[DEBUG]2024-04-10 04:00:44,389: None
[DEBUG]2024-04-10 04:00:44,389: None
[DEBUG]2024-04-10 04:00:44,389: None
[DEBUG]2024-04-10 04:00:44,389: None
[DEBUG]2024-04-10 04:00:44,389: None
[DEBUG]2024-04-10 04:00:44,389: None
[DEBUG]2024-04-10 04:00:44,389: None
[DEBUG]2024-04-10 04:00:44,389: None
[DEBUG]2024-04-10 04:00:44,389: None
[DEBUG]2024-04-10 04:00:44,389: None
[DEBUG]2024-04-10 04:00:44,390: None
[DEBUG]2024-04-10 04:00:44,390: None
[DEBUG]2024-04-10 04:00:44,390: None
[DEBUG]2024-04-10 04:00:44,390: None
[DEBUG]2024-04-10 04:00:44,390: None
[DEBUG]2024-04-10 04:00:44,390: None
[DEBUG]2024-04-10 04:00:44,390: None
[DEBUG]2024-04-10 04:00:44,390: None
[DEBUG]2024-04-10 04:00:44,390: None
[DEBUG]2024-04-10 04:00:44,390: None
[DEBUG]2024-04-10 04:00:44,390: None
[DEBUG]2024-04-10 04:00:44,390: None
[DEBUG]2024-04-10 04:00:44,391: None
[DEBUG]2024-04-10 04:00:44,391: None
[DEBUG]2024-04-10 04:00:44,391: None
[DEBUG]2024-04-10 04:00:44,391: None
[DEBUG]2024-04-10 04:00:44,391: None
[DEBUG]2024-04-10 04:00:44,391: None
[DEBUG]2024-04-10 04:00:44,391: None
[DEBUG]2024-04-10 04:00:44,391: None
[DEBUG]2024-04-10 04:00:44,391: None
[DEBUG]2024-04-10 04:00:44,391: None
[DEBUG]2024-04-10 04:00:44,391: None
[DEBUG]2024-04-10 04:00:44,391: None
[DEBUG]2024-04-10 04:00:44,391: None
[DEBUG]2024-04-10 04:00:44,391: None
[DEBUG]2024-04-10 04:00:44,391: None
[DEBUG]2024-04-10 04:00:44,391: None
[DEBUG]2024-04-10 04:00:44,391: None
[DEBUG]2024-04-10 04:00:44,391: None
[DEBUG]2024-04-10 04:00:44,391: None
[DEBUG]2024-04-10 04:00:44,391: None
[DEBUG]2024-04-10 04:00:44,391: None
[DEBUG]2024-04-10 04:00:44,391: None
[DEBUG]2024-04-10 04:00:44,391: None
[DEBUG]2024-04-10 04:00:44,391: None
[DEBUG]2024-04-10 04:00:44,391: None
[DEBUG]2024-04-10 04:00:44,391: None
[DEBUG]2024-04-10 04:00:44,391: None
[DEBUG]2024-04-10 04:00:44,392: <re.Match object; span=(2944, 3088), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:00:44,392: <re.Match object; span=(2944, 3088), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:00:44,392: <re.Match object; span=(2944, 3088), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:00:44,392: <re.Match object; span=(2944, 3088), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:00:44,392: <re.Match object; span=(2944, 3088), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:00:44,392: <re.Match object; span=(2944, 3088), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:00:44,392: <re.Match object; span=(2944, 3088), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:00:44,392: <re.Match object; span=(2944, 3088), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:00:44,392: <re.Match object; span=(2944, 3088), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:00:44,392: <re.Match object; span=(2944, 3088), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:00:44,392: <re.Match object; span=(2944, 3088), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:00:44,392: <re.Match object; span=(2944, 3088), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:00:44,392: <re.Match object; span=(2944, 3088), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:00:44,392: <re.Match object; span=(2944, 3088), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:00:44,392: <re.Match object; span=(2944, 3088), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:00:44,393: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:00:44,393: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:00:44,393: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:00:44,393: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:00:44,393: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:00:44,393: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:00:44,393: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:00:44,393: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:00:44,393: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:00:44,393: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:00:44,393: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:00:44,393: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:00:44,393: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:00:44,393: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:00:44,393: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:00:44,393: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:00:44,393: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:00:44,393: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:00:44,393: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:00:44,393: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:00:44,393: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:00:44,393: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:00:44,393: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:00:44,393: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:00:44,393: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:00:44,393: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:00:44,393: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:00:44,393: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:00:44,393: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:00:44,393: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:00:44,395: None
[DEBUG]2024-04-10 04:00:44,395: None
[DEBUG]2024-04-10 04:00:44,395: None
[DEBUG]2024-04-10 04:00:44,395: None
[DEBUG]2024-04-10 04:00:44,395: None
[DEBUG]2024-04-10 04:00:44,395: None
[DEBUG]2024-04-10 04:00:44,395: None
[DEBUG]2024-04-10 04:00:44,395: None
[DEBUG]2024-04-10 04:00:44,395: None
[DEBUG]2024-04-10 04:00:44,395: None
[DEBUG]2024-04-10 04:00:44,395: None
[DEBUG]2024-04-10 04:00:44,395: None
[DEBUG]2024-04-10 04:00:44,395: None
[DEBUG]2024-04-10 04:00:44,395: None
[DEBUG]2024-04-10 04:00:44,395: None
[DEBUG]2024-04-10 04:00:44,395: None
[DEBUG]2024-04-10 04:00:44,396: None
[DEBUG]2024-04-10 04:00:44,396: None
[DEBUG]2024-04-10 04:00:44,396: None
[DEBUG]2024-04-10 04:00:44,396: None
[DEBUG]2024-04-10 04:00:44,396: None
[DEBUG]2024-04-10 04:00:44,396: None
[DEBUG]2024-04-10 04:00:44,396: None
[DEBUG]2024-04-10 04:00:44,396: None
[DEBUG]2024-04-10 04:00:44,396: None
[DEBUG]2024-04-10 04:00:44,396: None
[DEBUG]2024-04-10 04:00:44,396: None
[DEBUG]2024-04-10 04:00:44,396: None
[DEBUG]2024-04-10 04:00:44,396: None
[DEBUG]2024-04-10 04:00:44,396: None
[DEBUG]2024-04-10 04:00:44,396: None
[DEBUG]2024-04-10 04:00:44,396: None
[DEBUG]2024-04-10 04:00:44,396: None
[DEBUG]2024-04-10 04:01:56,699: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 04:01:56,699: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 04:01:56,699: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 04:01:56,701: None
[DEBUG]2024-04-10 04:01:56,701: None
[DEBUG]2024-04-10 04:01:56,702: None
[DEBUG]2024-04-10 04:01:56,702: None
[DEBUG]2024-04-10 04:01:56,702: None
[DEBUG]2024-04-10 04:01:56,702: None
[DEBUG]2024-04-10 04:01:56,702: None
[DEBUG]2024-04-10 04:01:56,702: None
[DEBUG]2024-04-10 04:01:56,702: None
[DEBUG]2024-04-10 04:01:56,703: None
[DEBUG]2024-04-10 04:01:56,703: None
[DEBUG]2024-04-10 04:01:56,703: None
[DEBUG]2024-04-10 04:01:56,703: None
[DEBUG]2024-04-10 04:01:56,703: None
[DEBUG]2024-04-10 04:01:56,704: None
[DEBUG]2024-04-10 04:01:56,704: None
[DEBUG]2024-04-10 04:01:56,704: None
[DEBUG]2024-04-10 04:01:56,704: None
[DEBUG]2024-04-10 04:01:56,704: None
[DEBUG]2024-04-10 04:01:56,704: None
[DEBUG]2024-04-10 04:01:56,705: None
[DEBUG]2024-04-10 04:01:56,705: None
[DEBUG]2024-04-10 04:01:56,705: None
[DEBUG]2024-04-10 04:01:56,705: None
[DEBUG]2024-04-10 04:01:56,705: None
[DEBUG]2024-04-10 04:01:56,705: None
[DEBUG]2024-04-10 04:01:56,705: None
[DEBUG]2024-04-10 04:01:56,706: None
[DEBUG]2024-04-10 04:01:56,706: None
[DEBUG]2024-04-10 04:01:56,706: None
[DEBUG]2024-04-10 04:01:56,706: None
[DEBUG]2024-04-10 04:01:56,706: None
[DEBUG]2024-04-10 04:01:56,706: None
[DEBUG]2024-04-10 04:01:56,706: None
[DEBUG]2024-04-10 04:01:56,706: None
[DEBUG]2024-04-10 04:01:56,706: None
[DEBUG]2024-04-10 04:01:56,706: None
[DEBUG]2024-04-10 04:01:56,706: None
[DEBUG]2024-04-10 04:01:56,706: None
[DEBUG]2024-04-10 04:01:56,706: None
[DEBUG]2024-04-10 04:01:56,706: None
[DEBUG]2024-04-10 04:01:56,706: None
[DEBUG]2024-04-10 04:01:56,706: None
[DEBUG]2024-04-10 04:01:56,706: None
[DEBUG]2024-04-10 04:01:56,707: None
[DEBUG]2024-04-10 04:01:56,707: None
[DEBUG]2024-04-10 04:01:56,707: None
[DEBUG]2024-04-10 04:01:56,707: None
[DEBUG]2024-04-10 04:01:56,707: None
[DEBUG]2024-04-10 04:01:56,707: None
[DEBUG]2024-04-10 04:01:56,707: None
[DEBUG]2024-04-10 04:01:56,707: None
[DEBUG]2024-04-10 04:01:56,707: None
[DEBUG]2024-04-10 04:01:56,707: None
[DEBUG]2024-04-10 04:01:56,708: None
[DEBUG]2024-04-10 04:01:56,708: None
[DEBUG]2024-04-10 04:01:56,708: None
[DEBUG]2024-04-10 04:01:56,708: None
[DEBUG]2024-04-10 04:01:56,708: None
[DEBUG]2024-04-10 04:01:56,708: None
[DEBUG]2024-04-10 04:01:56,708: None
[DEBUG]2024-04-10 04:01:56,708: None
[DEBUG]2024-04-10 04:01:56,708: None
[DEBUG]2024-04-10 04:01:56,708: None
[DEBUG]2024-04-10 04:01:56,708: None
[DEBUG]2024-04-10 04:01:56,709: None
[DEBUG]2024-04-10 04:01:56,709: None
[DEBUG]2024-04-10 04:01:56,709: None
[DEBUG]2024-04-10 04:01:56,709: None
[DEBUG]2024-04-10 04:01:56,709: None
[DEBUG]2024-04-10 04:01:56,709: None
[DEBUG]2024-04-10 04:01:56,709: None
[DEBUG]2024-04-10 04:01:56,709: None
[DEBUG]2024-04-10 04:01:56,709: None
[DEBUG]2024-04-10 04:01:56,709: None
[DEBUG]2024-04-10 04:01:56,709: None
[DEBUG]2024-04-10 04:01:56,709: None
[DEBUG]2024-04-10 04:01:56,710: None
[DEBUG]2024-04-10 04:01:56,710: None
[DEBUG]2024-04-10 04:01:56,710: None
[DEBUG]2024-04-10 04:01:56,710: None
[DEBUG]2024-04-10 04:01:56,710: None
[DEBUG]2024-04-10 04:01:56,710: None
[DEBUG]2024-04-10 04:01:56,710: None
[DEBUG]2024-04-10 04:01:56,710: None
[DEBUG]2024-04-10 04:01:56,710: None
[DEBUG]2024-04-10 04:01:56,710: None
[DEBUG]2024-04-10 04:01:56,710: None
[DEBUG]2024-04-10 04:01:56,710: None
[DEBUG]2024-04-10 04:01:56,710: None
[DEBUG]2024-04-10 04:01:56,711: None
[DEBUG]2024-04-10 04:01:56,711: None
[DEBUG]2024-04-10 04:01:56,711: None
[DEBUG]2024-04-10 04:01:56,711: None
[DEBUG]2024-04-10 04:01:56,711: None
[DEBUG]2024-04-10 04:01:56,711: None
[DEBUG]2024-04-10 04:01:56,711: None
[DEBUG]2024-04-10 04:01:56,711: None
[DEBUG]2024-04-10 04:01:56,711: None
[DEBUG]2024-04-10 04:01:56,711: None
[DEBUG]2024-04-10 04:01:56,711: None
[DEBUG]2024-04-10 04:01:56,711: None
[DEBUG]2024-04-10 04:01:56,711: None
[DEBUG]2024-04-10 04:01:56,711: None
[DEBUG]2024-04-10 04:01:56,712: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:01:56,712: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:01:56,712: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:01:56,712: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:01:56,712: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:01:56,712: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:01:56,712: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:01:56,712: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:01:56,712: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:01:56,712: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:01:56,712: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:01:56,712: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:01:56,712: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:01:56,712: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:01:56,712: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:01:56,712: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:01:56,712: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:01:56,712: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:01:56,712: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:01:56,712: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:01:56,712: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:01:56,712: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:01:56,712: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:01:56,712: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:01:56,712: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:01:56,712: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:01:56,712: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:01:56,712: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:01:56,712: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:01:56,712: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:01:56,712: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:01:56,712: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:01:56,712: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:01:56,712: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:01:56,712: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:01:56,712: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:01:56,712: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:01:56,712: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:01:56,712: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:01:56,712: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:01:56,712: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:01:56,712: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:01:56,712: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:01:56,712: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:01:56,712: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:01:56,714: None
[DEBUG]2024-04-10 04:01:56,714: None
[DEBUG]2024-04-10 04:01:56,714: None
[DEBUG]2024-04-10 04:01:56,714: None
[DEBUG]2024-04-10 04:01:56,714: None
[DEBUG]2024-04-10 04:01:56,714: None
[DEBUG]2024-04-10 04:01:56,714: None
[DEBUG]2024-04-10 04:01:56,714: None
[DEBUG]2024-04-10 04:01:56,714: None
[DEBUG]2024-04-10 04:01:56,714: None
[DEBUG]2024-04-10 04:01:56,714: None
[DEBUG]2024-04-10 04:01:56,714: None
[DEBUG]2024-04-10 04:01:56,714: None
[DEBUG]2024-04-10 04:01:56,714: None
[DEBUG]2024-04-10 04:01:56,714: None
[DEBUG]2024-04-10 04:01:56,714: None
[DEBUG]2024-04-10 04:01:56,715: None
[DEBUG]2024-04-10 04:01:56,715: None
[DEBUG]2024-04-10 04:01:56,715: None
[DEBUG]2024-04-10 04:01:56,715: None
[DEBUG]2024-04-10 04:01:56,715: None
[DEBUG]2024-04-10 04:01:56,715: None
[DEBUG]2024-04-10 04:01:56,715: None
[DEBUG]2024-04-10 04:01:56,715: None
[DEBUG]2024-04-10 04:01:56,715: None
[DEBUG]2024-04-10 04:01:56,715: None
[DEBUG]2024-04-10 04:01:56,715: None
[DEBUG]2024-04-10 04:01:56,715: None
[DEBUG]2024-04-10 04:01:56,715: None
[DEBUG]2024-04-10 04:01:56,715: None
[DEBUG]2024-04-10 04:01:56,715: None
[DEBUG]2024-04-10 04:01:56,715: None
[DEBUG]2024-04-10 04:01:56,715: None
[DEBUG]2024-04-10 04:02:16,601: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 04:02:16,601: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 04:02:16,601: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 04:02:16,603: None
[DEBUG]2024-04-10 04:02:16,603: None
[DEBUG]2024-04-10 04:02:16,603: None
[DEBUG]2024-04-10 04:02:16,603: None
[DEBUG]2024-04-10 04:02:16,603: None
[DEBUG]2024-04-10 04:02:16,604: None
[DEBUG]2024-04-10 04:02:16,604: None
[DEBUG]2024-04-10 04:02:16,604: None
[DEBUG]2024-04-10 04:02:16,604: None
[DEBUG]2024-04-10 04:02:16,605: None
[DEBUG]2024-04-10 04:02:16,605: None
[DEBUG]2024-04-10 04:02:16,605: None
[DEBUG]2024-04-10 04:02:16,605: None
[DEBUG]2024-04-10 04:02:16,605: None
[DEBUG]2024-04-10 04:02:16,605: None
[DEBUG]2024-04-10 04:02:16,605: None
[DEBUG]2024-04-10 04:02:16,605: None
[DEBUG]2024-04-10 04:02:16,605: None
[DEBUG]2024-04-10 04:02:16,605: None
[DEBUG]2024-04-10 04:02:16,605: None
[DEBUG]2024-04-10 04:02:16,606: None
[DEBUG]2024-04-10 04:02:16,606: None
[DEBUG]2024-04-10 04:02:16,606: None
[DEBUG]2024-04-10 04:02:16,606: None
[DEBUG]2024-04-10 04:02:16,606: None
[DEBUG]2024-04-10 04:02:16,606: None
[DEBUG]2024-04-10 04:02:16,606: None
[DEBUG]2024-04-10 04:02:16,607: None
[DEBUG]2024-04-10 04:02:16,607: None
[DEBUG]2024-04-10 04:02:16,607: None
[DEBUG]2024-04-10 04:02:16,607: None
[DEBUG]2024-04-10 04:02:16,607: None
[DEBUG]2024-04-10 04:02:16,607: None
[DEBUG]2024-04-10 04:02:16,607: None
[DEBUG]2024-04-10 04:02:16,607: None
[DEBUG]2024-04-10 04:02:16,607: None
[DEBUG]2024-04-10 04:02:16,607: None
[DEBUG]2024-04-10 04:02:16,607: None
[DEBUG]2024-04-10 04:02:16,607: None
[DEBUG]2024-04-10 04:02:16,607: None
[DEBUG]2024-04-10 04:02:16,607: None
[DEBUG]2024-04-10 04:02:16,607: None
[DEBUG]2024-04-10 04:02:16,607: None
[DEBUG]2024-04-10 04:02:16,607: None
[DEBUG]2024-04-10 04:02:16,608: None
[DEBUG]2024-04-10 04:02:16,608: None
[DEBUG]2024-04-10 04:02:16,608: None
[DEBUG]2024-04-10 04:02:16,608: None
[DEBUG]2024-04-10 04:02:16,608: None
[DEBUG]2024-04-10 04:02:16,608: None
[DEBUG]2024-04-10 04:02:16,608: None
[DEBUG]2024-04-10 04:02:16,608: None
[DEBUG]2024-04-10 04:02:16,608: None
[DEBUG]2024-04-10 04:02:16,608: None
[DEBUG]2024-04-10 04:02:16,609: None
[DEBUG]2024-04-10 04:02:16,609: None
[DEBUG]2024-04-10 04:02:16,609: None
[DEBUG]2024-04-10 04:02:16,609: None
[DEBUG]2024-04-10 04:02:16,609: None
[DEBUG]2024-04-10 04:02:16,609: None
[DEBUG]2024-04-10 04:02:16,609: None
[DEBUG]2024-04-10 04:02:16,609: None
[DEBUG]2024-04-10 04:02:16,609: None
[DEBUG]2024-04-10 04:02:16,609: None
[DEBUG]2024-04-10 04:02:16,609: None
[DEBUG]2024-04-10 04:02:16,610: None
[DEBUG]2024-04-10 04:02:16,610: None
[DEBUG]2024-04-10 04:02:16,610: None
[DEBUG]2024-04-10 04:02:16,610: None
[DEBUG]2024-04-10 04:02:16,610: None
[DEBUG]2024-04-10 04:02:16,610: None
[DEBUG]2024-04-10 04:02:16,610: None
[DEBUG]2024-04-10 04:02:16,610: None
[DEBUG]2024-04-10 04:02:16,610: None
[DEBUG]2024-04-10 04:02:16,610: None
[DEBUG]2024-04-10 04:02:16,610: None
[DEBUG]2024-04-10 04:02:16,610: None
[DEBUG]2024-04-10 04:02:16,611: None
[DEBUG]2024-04-10 04:02:16,611: None
[DEBUG]2024-04-10 04:02:16,611: None
[DEBUG]2024-04-10 04:02:16,611: None
[DEBUG]2024-04-10 04:02:16,611: None
[DEBUG]2024-04-10 04:02:16,611: None
[DEBUG]2024-04-10 04:02:16,611: None
[DEBUG]2024-04-10 04:02:16,611: None
[DEBUG]2024-04-10 04:02:16,611: None
[DEBUG]2024-04-10 04:02:16,611: None
[DEBUG]2024-04-10 04:02:16,611: None
[DEBUG]2024-04-10 04:02:16,611: None
[DEBUG]2024-04-10 04:02:16,611: None
[DEBUG]2024-04-10 04:02:16,611: None
[DEBUG]2024-04-10 04:02:16,611: None
[DEBUG]2024-04-10 04:02:16,611: None
[DEBUG]2024-04-10 04:02:16,611: None
[DEBUG]2024-04-10 04:02:16,611: None
[DEBUG]2024-04-10 04:02:16,611: None
[DEBUG]2024-04-10 04:02:16,611: None
[DEBUG]2024-04-10 04:02:16,611: None
[DEBUG]2024-04-10 04:02:16,611: None
[DEBUG]2024-04-10 04:02:16,611: None
[DEBUG]2024-04-10 04:02:16,611: None
[DEBUG]2024-04-10 04:02:16,611: None
[DEBUG]2024-04-10 04:02:16,611: None
[DEBUG]2024-04-10 04:02:16,611: None
[DEBUG]2024-04-10 04:02:16,612: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:02:16,612: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:02:16,612: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:02:16,612: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:02:16,612: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:02:16,612: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:02:16,612: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:02:16,612: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:02:16,612: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:02:16,612: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:02:16,612: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:02:16,612: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:02:16,612: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:02:16,612: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:02:16,612: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:02:16,613: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:02:16,613: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:02:16,613: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:02:16,613: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:02:16,613: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:02:16,613: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:02:16,613: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:02:16,613: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:02:16,613: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:02:16,613: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:02:16,613: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:02:16,613: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:02:16,613: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:02:16,613: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:02:16,613: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:02:16,613: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:02:16,613: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:02:16,613: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:02:16,613: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:02:16,613: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:02:16,613: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:02:16,613: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:02:16,613: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:02:16,613: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:02:16,613: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:02:16,613: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:02:16,613: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:02:16,613: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:02:16,613: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:02:16,613: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:02:16,614: None
[DEBUG]2024-04-10 04:02:16,614: None
[DEBUG]2024-04-10 04:02:16,614: None
[DEBUG]2024-04-10 04:02:16,614: None
[DEBUG]2024-04-10 04:02:16,614: None
[DEBUG]2024-04-10 04:02:16,614: None
[DEBUG]2024-04-10 04:02:16,614: None
[DEBUG]2024-04-10 04:02:16,614: None
[DEBUG]2024-04-10 04:02:16,614: None
[DEBUG]2024-04-10 04:02:16,614: None
[DEBUG]2024-04-10 04:02:16,614: None
[DEBUG]2024-04-10 04:02:16,614: None
[DEBUG]2024-04-10 04:02:16,614: None
[DEBUG]2024-04-10 04:02:16,614: None
[DEBUG]2024-04-10 04:02:16,614: None
[DEBUG]2024-04-10 04:02:16,614: None
[DEBUG]2024-04-10 04:02:16,615: None
[DEBUG]2024-04-10 04:02:16,615: None
[DEBUG]2024-04-10 04:02:16,615: None
[DEBUG]2024-04-10 04:02:16,615: None
[DEBUG]2024-04-10 04:02:16,615: None
[DEBUG]2024-04-10 04:02:16,615: None
[DEBUG]2024-04-10 04:02:16,615: None
[DEBUG]2024-04-10 04:02:16,615: None
[DEBUG]2024-04-10 04:02:16,615: None
[DEBUG]2024-04-10 04:02:16,615: None
[DEBUG]2024-04-10 04:02:16,615: None
[DEBUG]2024-04-10 04:02:16,615: None
[DEBUG]2024-04-10 04:02:16,615: None
[DEBUG]2024-04-10 04:02:16,615: None
[DEBUG]2024-04-10 04:02:16,615: None
[DEBUG]2024-04-10 04:02:16,615: None
[DEBUG]2024-04-10 04:02:16,615: None
[DEBUG]2024-04-10 04:02:39,382: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 04:02:39,382: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 04:02:39,382: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 04:02:39,384: None
[DEBUG]2024-04-10 04:02:39,384: None
[DEBUG]2024-04-10 04:02:39,385: None
[DEBUG]2024-04-10 04:02:39,385: None
[DEBUG]2024-04-10 04:02:39,385: None
[DEBUG]2024-04-10 04:02:39,385: None
[DEBUG]2024-04-10 04:02:39,385: None
[DEBUG]2024-04-10 04:02:39,385: None
[DEBUG]2024-04-10 04:02:39,385: None
[DEBUG]2024-04-10 04:02:39,386: None
[DEBUG]2024-04-10 04:02:39,386: None
[DEBUG]2024-04-10 04:02:39,386: None
[DEBUG]2024-04-10 04:02:39,386: None
[DEBUG]2024-04-10 04:02:39,386: None
[DEBUG]2024-04-10 04:02:39,387: None
[DEBUG]2024-04-10 04:02:39,387: None
[DEBUG]2024-04-10 04:02:39,387: None
[DEBUG]2024-04-10 04:02:39,387: None
[DEBUG]2024-04-10 04:02:39,387: None
[DEBUG]2024-04-10 04:02:39,387: None
[DEBUG]2024-04-10 04:02:39,387: None
[DEBUG]2024-04-10 04:02:39,387: None
[DEBUG]2024-04-10 04:02:39,387: None
[DEBUG]2024-04-10 04:02:39,387: None
[DEBUG]2024-04-10 04:02:39,387: None
[DEBUG]2024-04-10 04:02:39,387: None
[DEBUG]2024-04-10 04:02:39,387: None
[DEBUG]2024-04-10 04:02:39,388: None
[DEBUG]2024-04-10 04:02:39,388: None
[DEBUG]2024-04-10 04:02:39,388: None
[DEBUG]2024-04-10 04:02:39,388: None
[DEBUG]2024-04-10 04:02:39,388: None
[DEBUG]2024-04-10 04:02:39,388: None
[DEBUG]2024-04-10 04:02:39,388: None
[DEBUG]2024-04-10 04:02:39,388: None
[DEBUG]2024-04-10 04:02:39,389: None
[DEBUG]2024-04-10 04:02:39,389: None
[DEBUG]2024-04-10 04:02:39,389: None
[DEBUG]2024-04-10 04:02:39,389: None
[DEBUG]2024-04-10 04:02:39,389: None
[DEBUG]2024-04-10 04:02:39,389: None
[DEBUG]2024-04-10 04:02:39,389: None
[DEBUG]2024-04-10 04:02:39,389: None
[DEBUG]2024-04-10 04:02:39,389: None
[DEBUG]2024-04-10 04:02:39,390: None
[DEBUG]2024-04-10 04:02:39,390: None
[DEBUG]2024-04-10 04:02:39,390: None
[DEBUG]2024-04-10 04:02:39,390: None
[DEBUG]2024-04-10 04:02:39,390: None
[DEBUG]2024-04-10 04:02:39,390: None
[DEBUG]2024-04-10 04:02:39,390: None
[DEBUG]2024-04-10 04:02:39,390: None
[DEBUG]2024-04-10 04:02:39,390: None
[DEBUG]2024-04-10 04:02:39,390: None
[DEBUG]2024-04-10 04:02:39,391: None
[DEBUG]2024-04-10 04:02:39,391: None
[DEBUG]2024-04-10 04:02:39,391: None
[DEBUG]2024-04-10 04:02:39,391: None
[DEBUG]2024-04-10 04:02:39,391: None
[DEBUG]2024-04-10 04:02:39,391: None
[DEBUG]2024-04-10 04:02:39,391: None
[DEBUG]2024-04-10 04:02:39,391: None
[DEBUG]2024-04-10 04:02:39,391: None
[DEBUG]2024-04-10 04:02:39,391: None
[DEBUG]2024-04-10 04:02:39,391: None
[DEBUG]2024-04-10 04:02:39,391: None
[DEBUG]2024-04-10 04:02:39,391: None
[DEBUG]2024-04-10 04:02:39,391: None
[DEBUG]2024-04-10 04:02:39,391: None
[DEBUG]2024-04-10 04:02:39,391: None
[DEBUG]2024-04-10 04:02:39,391: None
[DEBUG]2024-04-10 04:02:39,391: None
[DEBUG]2024-04-10 04:02:39,391: None
[DEBUG]2024-04-10 04:02:39,391: None
[DEBUG]2024-04-10 04:02:39,391: None
[DEBUG]2024-04-10 04:02:39,391: None
[DEBUG]2024-04-10 04:02:39,391: None
[DEBUG]2024-04-10 04:02:39,392: None
[DEBUG]2024-04-10 04:02:39,392: None
[DEBUG]2024-04-10 04:02:39,392: None
[DEBUG]2024-04-10 04:02:39,392: None
[DEBUG]2024-04-10 04:02:39,392: None
[DEBUG]2024-04-10 04:02:39,392: None
[DEBUG]2024-04-10 04:02:39,392: None
[DEBUG]2024-04-10 04:02:39,392: None
[DEBUG]2024-04-10 04:02:39,392: None
[DEBUG]2024-04-10 04:02:39,392: None
[DEBUG]2024-04-10 04:02:39,392: None
[DEBUG]2024-04-10 04:02:39,392: None
[DEBUG]2024-04-10 04:02:39,392: None
[DEBUG]2024-04-10 04:02:39,393: None
[DEBUG]2024-04-10 04:02:39,393: None
[DEBUG]2024-04-10 04:02:39,393: None
[DEBUG]2024-04-10 04:02:39,393: None
[DEBUG]2024-04-10 04:02:39,393: None
[DEBUG]2024-04-10 04:02:39,393: None
[DEBUG]2024-04-10 04:02:39,393: None
[DEBUG]2024-04-10 04:02:39,393: None
[DEBUG]2024-04-10 04:02:39,393: None
[DEBUG]2024-04-10 04:02:39,393: None
[DEBUG]2024-04-10 04:02:39,393: None
[DEBUG]2024-04-10 04:02:39,393: None
[DEBUG]2024-04-10 04:02:39,393: None
[DEBUG]2024-04-10 04:02:39,393: None
[DEBUG]2024-04-10 04:02:39,394: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:02:39,394: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:02:39,394: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:02:39,394: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:02:39,394: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:02:39,394: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:02:39,394: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:02:39,394: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:02:39,394: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:02:39,394: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:02:39,394: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:02:39,394: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:02:39,394: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:02:39,394: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:02:39,394: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:02:39,395: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:02:39,395: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:02:39,395: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:02:39,395: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:02:39,395: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:02:39,395: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:02:39,395: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:02:39,395: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:02:39,395: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:02:39,395: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:02:39,395: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:02:39,395: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:02:39,395: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:02:39,395: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:02:39,395: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:02:39,395: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:02:39,395: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:02:39,395: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:02:39,395: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:02:39,395: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:02:39,395: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:02:39,395: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:02:39,395: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:02:39,395: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:02:39,395: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:02:39,395: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:02:39,395: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:02:39,395: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:02:39,395: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:02:39,395: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:02:39,396: None
[DEBUG]2024-04-10 04:02:39,396: None
[DEBUG]2024-04-10 04:02:39,396: None
[DEBUG]2024-04-10 04:02:39,396: None
[DEBUG]2024-04-10 04:02:39,396: None
[DEBUG]2024-04-10 04:02:39,396: None
[DEBUG]2024-04-10 04:02:39,396: None
[DEBUG]2024-04-10 04:02:39,396: None
[DEBUG]2024-04-10 04:02:39,396: None
[DEBUG]2024-04-10 04:02:39,396: None
[DEBUG]2024-04-10 04:02:39,396: None
[DEBUG]2024-04-10 04:02:39,396: None
[DEBUG]2024-04-10 04:02:39,396: None
[DEBUG]2024-04-10 04:02:39,396: None
[DEBUG]2024-04-10 04:02:39,396: None
[DEBUG]2024-04-10 04:02:39,396: None
[DEBUG]2024-04-10 04:02:39,397: None
[DEBUG]2024-04-10 04:02:39,397: None
[DEBUG]2024-04-10 04:02:39,397: None
[DEBUG]2024-04-10 04:02:39,397: None
[DEBUG]2024-04-10 04:02:39,397: None
[DEBUG]2024-04-10 04:02:39,397: None
[DEBUG]2024-04-10 04:02:39,397: None
[DEBUG]2024-04-10 04:02:39,397: None
[DEBUG]2024-04-10 04:02:39,397: None
[DEBUG]2024-04-10 04:02:39,397: None
[DEBUG]2024-04-10 04:02:39,397: None
[DEBUG]2024-04-10 04:02:39,397: None
[DEBUG]2024-04-10 04:02:39,397: None
[DEBUG]2024-04-10 04:02:39,397: None
[DEBUG]2024-04-10 04:02:39,397: None
[DEBUG]2024-04-10 04:02:39,397: None
[DEBUG]2024-04-10 04:02:39,397: None
[DEBUG]2024-04-10 04:04:55,487: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 04:04:55,487: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 04:04:55,487: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 04:04:55,489: None
[DEBUG]2024-04-10 04:04:55,489: None
[DEBUG]2024-04-10 04:04:55,489: None
[DEBUG]2024-04-10 04:04:55,489: None
[DEBUG]2024-04-10 04:04:55,489: None
[DEBUG]2024-04-10 04:04:55,490: None
[DEBUG]2024-04-10 04:04:55,490: None
[DEBUG]2024-04-10 04:04:55,490: None
[DEBUG]2024-04-10 04:04:55,490: None
[DEBUG]2024-04-10 04:04:55,491: None
[DEBUG]2024-04-10 04:04:55,491: None
[DEBUG]2024-04-10 04:04:55,491: None
[DEBUG]2024-04-10 04:04:55,491: None
[DEBUG]2024-04-10 04:04:55,491: None
[DEBUG]2024-04-10 04:04:55,491: None
[DEBUG]2024-04-10 04:04:55,491: None
[DEBUG]2024-04-10 04:04:55,491: None
[DEBUG]2024-04-10 04:04:55,491: None
[DEBUG]2024-04-10 04:04:55,491: None
[DEBUG]2024-04-10 04:04:55,491: None
[DEBUG]2024-04-10 04:04:55,492: None
[DEBUG]2024-04-10 04:04:55,492: None
[DEBUG]2024-04-10 04:04:55,492: None
[DEBUG]2024-04-10 04:04:55,492: None
[DEBUG]2024-04-10 04:04:55,492: None
[DEBUG]2024-04-10 04:04:55,492: None
[DEBUG]2024-04-10 04:04:55,492: None
[DEBUG]2024-04-10 04:04:55,493: None
[DEBUG]2024-04-10 04:04:55,493: None
[DEBUG]2024-04-10 04:04:55,493: None
[DEBUG]2024-04-10 04:04:55,493: None
[DEBUG]2024-04-10 04:04:55,493: None
[DEBUG]2024-04-10 04:04:55,493: None
[DEBUG]2024-04-10 04:04:55,493: None
[DEBUG]2024-04-10 04:04:55,493: None
[DEBUG]2024-04-10 04:04:55,494: None
[DEBUG]2024-04-10 04:04:55,494: None
[DEBUG]2024-04-10 04:04:55,494: None
[DEBUG]2024-04-10 04:04:55,494: None
[DEBUG]2024-04-10 04:04:55,494: None
[DEBUG]2024-04-10 04:04:55,494: None
[DEBUG]2024-04-10 04:04:55,494: None
[DEBUG]2024-04-10 04:04:55,494: None
[DEBUG]2024-04-10 04:04:55,494: None
[DEBUG]2024-04-10 04:04:55,495: None
[DEBUG]2024-04-10 04:04:55,495: None
[DEBUG]2024-04-10 04:04:55,495: None
[DEBUG]2024-04-10 04:04:55,495: None
[DEBUG]2024-04-10 04:04:55,495: None
[DEBUG]2024-04-10 04:04:55,495: None
[DEBUG]2024-04-10 04:04:55,495: None
[DEBUG]2024-04-10 04:04:55,495: None
[DEBUG]2024-04-10 04:04:55,495: None
[DEBUG]2024-04-10 04:04:55,495: None
[DEBUG]2024-04-10 04:04:55,496: None
[DEBUG]2024-04-10 04:04:55,496: None
[DEBUG]2024-04-10 04:04:55,496: None
[DEBUG]2024-04-10 04:04:55,496: None
[DEBUG]2024-04-10 04:04:55,496: None
[DEBUG]2024-04-10 04:04:55,496: None
[DEBUG]2024-04-10 04:04:55,496: None
[DEBUG]2024-04-10 04:04:55,496: None
[DEBUG]2024-04-10 04:04:55,496: None
[DEBUG]2024-04-10 04:04:55,496: None
[DEBUG]2024-04-10 04:04:55,496: None
[DEBUG]2024-04-10 04:04:55,496: None
[DEBUG]2024-04-10 04:04:55,496: None
[DEBUG]2024-04-10 04:04:55,496: None
[DEBUG]2024-04-10 04:04:55,496: None
[DEBUG]2024-04-10 04:04:55,496: None
[DEBUG]2024-04-10 04:04:55,496: None
[DEBUG]2024-04-10 04:04:55,496: None
[DEBUG]2024-04-10 04:04:55,496: None
[DEBUG]2024-04-10 04:04:55,496: None
[DEBUG]2024-04-10 04:04:55,496: None
[DEBUG]2024-04-10 04:04:55,496: None
[DEBUG]2024-04-10 04:04:55,496: None
[DEBUG]2024-04-10 04:04:55,497: None
[DEBUG]2024-04-10 04:04:55,497: None
[DEBUG]2024-04-10 04:04:55,497: None
[DEBUG]2024-04-10 04:04:55,497: None
[DEBUG]2024-04-10 04:04:55,497: None
[DEBUG]2024-04-10 04:04:55,497: None
[DEBUG]2024-04-10 04:04:55,497: None
[DEBUG]2024-04-10 04:04:55,497: None
[DEBUG]2024-04-10 04:04:55,497: None
[DEBUG]2024-04-10 04:04:55,497: None
[DEBUG]2024-04-10 04:04:55,497: None
[DEBUG]2024-04-10 04:04:55,497: None
[DEBUG]2024-04-10 04:04:55,497: None
[DEBUG]2024-04-10 04:04:55,498: None
[DEBUG]2024-04-10 04:04:55,498: None
[DEBUG]2024-04-10 04:04:55,498: None
[DEBUG]2024-04-10 04:04:55,498: None
[DEBUG]2024-04-10 04:04:55,498: None
[DEBUG]2024-04-10 04:04:55,498: None
[DEBUG]2024-04-10 04:04:55,498: None
[DEBUG]2024-04-10 04:04:55,498: None
[DEBUG]2024-04-10 04:04:55,498: None
[DEBUG]2024-04-10 04:04:55,498: None
[DEBUG]2024-04-10 04:04:55,498: None
[DEBUG]2024-04-10 04:04:55,498: None
[DEBUG]2024-04-10 04:04:55,498: None
[DEBUG]2024-04-10 04:04:55,498: None
[DEBUG]2024-04-10 04:04:55,499: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:04:55,499: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:04:55,499: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:04:55,499: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:04:55,499: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:04:55,499: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:04:55,499: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:04:55,499: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:04:55,499: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:04:55,499: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:04:55,499: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:04:55,499: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:04:55,499: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:04:55,499: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:04:55,499: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:04:55,500: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:04:55,500: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:04:55,500: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:04:55,500: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:04:55,500: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:04:55,500: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:04:55,500: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:04:55,500: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:04:55,500: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:04:55,500: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:04:55,500: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:04:55,500: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:04:55,500: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:04:55,500: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:04:55,500: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:04:55,500: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:04:55,500: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:04:55,500: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:04:55,500: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:04:55,500: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:04:55,500: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:04:55,500: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:04:55,500: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:04:55,500: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:04:55,500: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:04:55,500: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:04:55,500: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:04:55,500: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:04:55,500: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:04:55,500: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:04:55,502: None
[DEBUG]2024-04-10 04:04:55,502: None
[DEBUG]2024-04-10 04:04:55,502: None
[DEBUG]2024-04-10 04:04:55,502: None
[DEBUG]2024-04-10 04:04:55,502: None
[DEBUG]2024-04-10 04:04:55,502: None
[DEBUG]2024-04-10 04:04:55,502: None
[DEBUG]2024-04-10 04:04:55,502: None
[DEBUG]2024-04-10 04:04:55,502: None
[DEBUG]2024-04-10 04:04:55,502: None
[DEBUG]2024-04-10 04:04:55,502: None
[DEBUG]2024-04-10 04:04:55,502: None
[DEBUG]2024-04-10 04:04:55,502: None
[DEBUG]2024-04-10 04:04:55,502: None
[DEBUG]2024-04-10 04:04:55,502: None
[DEBUG]2024-04-10 04:04:55,502: None
[DEBUG]2024-04-10 04:04:55,503: None
[DEBUG]2024-04-10 04:04:55,503: None
[DEBUG]2024-04-10 04:04:55,503: None
[DEBUG]2024-04-10 04:04:55,503: None
[DEBUG]2024-04-10 04:04:55,503: None
[DEBUG]2024-04-10 04:04:55,503: None
[DEBUG]2024-04-10 04:04:55,503: None
[DEBUG]2024-04-10 04:04:55,503: None
[DEBUG]2024-04-10 04:04:55,503: None
[DEBUG]2024-04-10 04:04:55,503: None
[DEBUG]2024-04-10 04:04:55,503: None
[DEBUG]2024-04-10 04:04:55,503: None
[DEBUG]2024-04-10 04:04:55,503: None
[DEBUG]2024-04-10 04:04:55,503: None
[DEBUG]2024-04-10 04:04:55,503: None
[DEBUG]2024-04-10 04:04:55,503: None
[DEBUG]2024-04-10 04:04:55,503: None
[DEBUG]2024-04-10 04:05:10,330: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 04:05:10,330: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 04:05:10,330: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 04:05:10,332: None
[DEBUG]2024-04-10 04:05:10,332: None
[DEBUG]2024-04-10 04:05:10,333: None
[DEBUG]2024-04-10 04:05:10,333: None
[DEBUG]2024-04-10 04:05:10,333: None
[DEBUG]2024-04-10 04:05:10,333: None
[DEBUG]2024-04-10 04:05:10,333: None
[DEBUG]2024-04-10 04:05:10,333: None
[DEBUG]2024-04-10 04:05:10,333: None
[DEBUG]2024-04-10 04:05:10,334: None
[DEBUG]2024-04-10 04:05:10,334: None
[DEBUG]2024-04-10 04:05:10,334: None
[DEBUG]2024-04-10 04:05:10,334: None
[DEBUG]2024-04-10 04:05:10,334: None
[DEBUG]2024-04-10 04:05:10,335: None
[DEBUG]2024-04-10 04:05:10,335: None
[DEBUG]2024-04-10 04:05:10,335: None
[DEBUG]2024-04-10 04:05:10,335: None
[DEBUG]2024-04-10 04:05:10,335: None
[DEBUG]2024-04-10 04:05:10,335: None
[DEBUG]2024-04-10 04:05:10,335: None
[DEBUG]2024-04-10 04:05:10,335: None
[DEBUG]2024-04-10 04:05:10,335: None
[DEBUG]2024-04-10 04:05:10,335: None
[DEBUG]2024-04-10 04:05:10,335: None
[DEBUG]2024-04-10 04:05:10,335: None
[DEBUG]2024-04-10 04:05:10,335: None
[DEBUG]2024-04-10 04:05:10,336: None
[DEBUG]2024-04-10 04:05:10,336: None
[DEBUG]2024-04-10 04:05:10,336: None
[DEBUG]2024-04-10 04:05:10,336: None
[DEBUG]2024-04-10 04:05:10,336: None
[DEBUG]2024-04-10 04:05:10,336: None
[DEBUG]2024-04-10 04:05:10,336: None
[DEBUG]2024-04-10 04:05:10,336: None
[DEBUG]2024-04-10 04:05:10,337: None
[DEBUG]2024-04-10 04:05:10,337: None
[DEBUG]2024-04-10 04:05:10,337: None
[DEBUG]2024-04-10 04:05:10,337: None
[DEBUG]2024-04-10 04:05:10,337: None
[DEBUG]2024-04-10 04:05:10,337: None
[DEBUG]2024-04-10 04:05:10,337: None
[DEBUG]2024-04-10 04:05:10,337: None
[DEBUG]2024-04-10 04:05:10,337: None
[DEBUG]2024-04-10 04:05:10,338: None
[DEBUG]2024-04-10 04:05:10,338: None
[DEBUG]2024-04-10 04:05:10,338: None
[DEBUG]2024-04-10 04:05:10,338: None
[DEBUG]2024-04-10 04:05:10,338: None
[DEBUG]2024-04-10 04:05:10,338: None
[DEBUG]2024-04-10 04:05:10,338: None
[DEBUG]2024-04-10 04:05:10,338: None
[DEBUG]2024-04-10 04:05:10,338: None
[DEBUG]2024-04-10 04:05:10,338: None
[DEBUG]2024-04-10 04:05:10,339: None
[DEBUG]2024-04-10 04:05:10,339: None
[DEBUG]2024-04-10 04:05:10,339: None
[DEBUG]2024-04-10 04:05:10,339: None
[DEBUG]2024-04-10 04:05:10,339: None
[DEBUG]2024-04-10 04:05:10,339: None
[DEBUG]2024-04-10 04:05:10,339: None
[DEBUG]2024-04-10 04:05:10,339: None
[DEBUG]2024-04-10 04:05:10,339: None
[DEBUG]2024-04-10 04:05:10,339: None
[DEBUG]2024-04-10 04:05:10,339: None
[DEBUG]2024-04-10 04:05:10,340: None
[DEBUG]2024-04-10 04:05:10,340: None
[DEBUG]2024-04-10 04:05:10,340: None
[DEBUG]2024-04-10 04:05:10,340: None
[DEBUG]2024-04-10 04:05:10,340: None
[DEBUG]2024-04-10 04:05:10,340: None
[DEBUG]2024-04-10 04:05:10,340: None
[DEBUG]2024-04-10 04:05:10,340: None
[DEBUG]2024-04-10 04:05:10,340: None
[DEBUG]2024-04-10 04:05:10,340: None
[DEBUG]2024-04-10 04:05:10,340: None
[DEBUG]2024-04-10 04:05:10,340: None
[DEBUG]2024-04-10 04:05:10,341: None
[DEBUG]2024-04-10 04:05:10,341: None
[DEBUG]2024-04-10 04:05:10,341: None
[DEBUG]2024-04-10 04:05:10,341: None
[DEBUG]2024-04-10 04:05:10,341: None
[DEBUG]2024-04-10 04:05:10,341: None
[DEBUG]2024-04-10 04:05:10,341: None
[DEBUG]2024-04-10 04:05:10,341: None
[DEBUG]2024-04-10 04:05:10,341: None
[DEBUG]2024-04-10 04:05:10,341: None
[DEBUG]2024-04-10 04:05:10,341: None
[DEBUG]2024-04-10 04:05:10,341: None
[DEBUG]2024-04-10 04:05:10,341: None
[DEBUG]2024-04-10 04:05:10,342: None
[DEBUG]2024-04-10 04:05:10,342: None
[DEBUG]2024-04-10 04:05:10,342: None
[DEBUG]2024-04-10 04:05:10,342: None
[DEBUG]2024-04-10 04:05:10,342: None
[DEBUG]2024-04-10 04:05:10,342: None
[DEBUG]2024-04-10 04:05:10,342: None
[DEBUG]2024-04-10 04:05:10,342: None
[DEBUG]2024-04-10 04:05:10,342: None
[DEBUG]2024-04-10 04:05:10,342: None
[DEBUG]2024-04-10 04:05:10,342: None
[DEBUG]2024-04-10 04:05:10,342: None
[DEBUG]2024-04-10 04:05:10,342: None
[DEBUG]2024-04-10 04:05:10,342: None
[DEBUG]2024-04-10 04:05:10,343: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:05:10,343: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:05:10,343: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:05:10,343: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:05:10,343: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:05:10,343: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:05:10,343: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:05:10,343: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:05:10,343: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:05:10,343: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:05:10,343: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:05:10,343: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:05:10,343: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:05:10,343: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:05:10,343: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:05:10,344: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:05:10,344: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:05:10,344: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:05:10,344: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:05:10,344: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:05:10,344: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:05:10,344: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:05:10,344: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:05:10,344: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:05:10,344: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:05:10,344: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:05:10,344: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:05:10,344: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:05:10,344: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:05:10,344: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:05:10,344: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:05:10,344: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:05:10,344: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:05:10,344: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:05:10,344: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:05:10,344: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:05:10,344: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:05:10,344: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:05:10,344: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:05:10,344: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:05:10,344: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:05:10,344: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:05:10,344: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:05:10,344: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:05:10,344: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:05:10,346: None
[DEBUG]2024-04-10 04:05:10,346: None
[DEBUG]2024-04-10 04:05:10,346: None
[DEBUG]2024-04-10 04:05:10,346: None
[DEBUG]2024-04-10 04:05:10,346: None
[DEBUG]2024-04-10 04:05:10,346: None
[DEBUG]2024-04-10 04:05:10,346: None
[DEBUG]2024-04-10 04:05:10,346: None
[DEBUG]2024-04-10 04:05:10,346: None
[DEBUG]2024-04-10 04:05:10,346: None
[DEBUG]2024-04-10 04:05:10,346: None
[DEBUG]2024-04-10 04:05:10,346: None
[DEBUG]2024-04-10 04:05:10,346: None
[DEBUG]2024-04-10 04:05:10,346: None
[DEBUG]2024-04-10 04:05:10,346: None
[DEBUG]2024-04-10 04:05:10,346: None
[DEBUG]2024-04-10 04:05:10,347: None
[DEBUG]2024-04-10 04:05:10,347: None
[DEBUG]2024-04-10 04:05:10,347: None
[DEBUG]2024-04-10 04:05:10,347: None
[DEBUG]2024-04-10 04:05:10,347: None
[DEBUG]2024-04-10 04:05:10,347: None
[DEBUG]2024-04-10 04:05:10,347: None
[DEBUG]2024-04-10 04:05:10,347: None
[DEBUG]2024-04-10 04:05:10,347: None
[DEBUG]2024-04-10 04:05:10,347: None
[DEBUG]2024-04-10 04:05:10,347: None
[DEBUG]2024-04-10 04:05:10,347: None
[DEBUG]2024-04-10 04:05:10,347: None
[DEBUG]2024-04-10 04:05:10,347: None
[DEBUG]2024-04-10 04:05:10,347: None
[DEBUG]2024-04-10 04:05:10,347: None
[DEBUG]2024-04-10 04:05:10,347: None
[DEBUG]2024-04-10 04:05:58,893: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 04:05:58,893: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 04:05:58,893: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 04:05:58,896: None
[DEBUG]2024-04-10 04:05:58,896: None
[DEBUG]2024-04-10 04:05:58,896: None
[DEBUG]2024-04-10 04:05:58,896: None
[DEBUG]2024-04-10 04:05:58,896: None
[DEBUG]2024-04-10 04:05:58,897: None
[DEBUG]2024-04-10 04:05:58,897: None
[DEBUG]2024-04-10 04:05:58,897: None
[DEBUG]2024-04-10 04:05:58,897: None
[DEBUG]2024-04-10 04:05:58,898: None
[DEBUG]2024-04-10 04:05:58,898: None
[DEBUG]2024-04-10 04:05:58,898: None
[DEBUG]2024-04-10 04:05:58,898: None
[DEBUG]2024-04-10 04:05:58,898: None
[DEBUG]2024-04-10 04:05:58,898: None
[DEBUG]2024-04-10 04:05:58,898: None
[DEBUG]2024-04-10 04:05:58,898: None
[DEBUG]2024-04-10 04:05:58,898: None
[DEBUG]2024-04-10 04:05:58,898: None
[DEBUG]2024-04-10 04:05:58,898: None
[DEBUG]2024-04-10 04:05:58,899: None
[DEBUG]2024-04-10 04:05:58,899: None
[DEBUG]2024-04-10 04:05:58,899: None
[DEBUG]2024-04-10 04:05:58,899: None
[DEBUG]2024-04-10 04:05:58,899: None
[DEBUG]2024-04-10 04:05:58,899: None
[DEBUG]2024-04-10 04:05:58,899: None
[DEBUG]2024-04-10 04:05:58,900: None
[DEBUG]2024-04-10 04:05:58,900: None
[DEBUG]2024-04-10 04:05:58,900: None
[DEBUG]2024-04-10 04:05:58,900: None
[DEBUG]2024-04-10 04:05:58,900: None
[DEBUG]2024-04-10 04:05:58,900: None
[DEBUG]2024-04-10 04:05:58,900: None
[DEBUG]2024-04-10 04:05:58,900: None
[DEBUG]2024-04-10 04:05:58,900: None
[DEBUG]2024-04-10 04:05:58,900: None
[DEBUG]2024-04-10 04:05:58,900: None
[DEBUG]2024-04-10 04:05:58,900: None
[DEBUG]2024-04-10 04:05:58,900: None
[DEBUG]2024-04-10 04:05:58,900: None
[DEBUG]2024-04-10 04:05:58,900: None
[DEBUG]2024-04-10 04:05:58,900: None
[DEBUG]2024-04-10 04:05:58,900: None
[DEBUG]2024-04-10 04:05:58,902: None
[DEBUG]2024-04-10 04:05:58,902: None
[DEBUG]2024-04-10 04:05:58,902: None
[DEBUG]2024-04-10 04:05:58,902: None
[DEBUG]2024-04-10 04:05:58,902: None
[DEBUG]2024-04-10 04:05:58,902: None
[DEBUG]2024-04-10 04:05:58,902: None
[DEBUG]2024-04-10 04:05:58,902: None
[DEBUG]2024-04-10 04:05:58,902: None
[DEBUG]2024-04-10 04:05:58,902: None
[DEBUG]2024-04-10 04:05:58,903: None
[DEBUG]2024-04-10 04:05:58,903: None
[DEBUG]2024-04-10 04:05:58,903: None
[DEBUG]2024-04-10 04:05:58,903: None
[DEBUG]2024-04-10 04:05:58,903: None
[DEBUG]2024-04-10 04:05:58,903: None
[DEBUG]2024-04-10 04:05:58,903: None
[DEBUG]2024-04-10 04:05:58,903: None
[DEBUG]2024-04-10 04:05:58,903: None
[DEBUG]2024-04-10 04:05:58,903: None
[DEBUG]2024-04-10 04:05:58,903: None
[DEBUG]2024-04-10 04:05:58,904: None
[DEBUG]2024-04-10 04:05:58,904: None
[DEBUG]2024-04-10 04:05:58,904: None
[DEBUG]2024-04-10 04:05:58,904: None
[DEBUG]2024-04-10 04:05:58,904: None
[DEBUG]2024-04-10 04:05:58,904: None
[DEBUG]2024-04-10 04:05:58,904: None
[DEBUG]2024-04-10 04:05:58,904: None
[DEBUG]2024-04-10 04:05:58,904: None
[DEBUG]2024-04-10 04:05:58,904: None
[DEBUG]2024-04-10 04:05:58,904: None
[DEBUG]2024-04-10 04:05:58,904: None
[DEBUG]2024-04-10 04:05:58,905: None
[DEBUG]2024-04-10 04:05:58,905: None
[DEBUG]2024-04-10 04:05:58,905: None
[DEBUG]2024-04-10 04:05:58,905: None
[DEBUG]2024-04-10 04:05:58,905: None
[DEBUG]2024-04-10 04:05:58,905: None
[DEBUG]2024-04-10 04:05:58,905: None
[DEBUG]2024-04-10 04:05:58,905: None
[DEBUG]2024-04-10 04:05:58,905: None
[DEBUG]2024-04-10 04:05:58,905: None
[DEBUG]2024-04-10 04:05:58,905: None
[DEBUG]2024-04-10 04:05:58,905: None
[DEBUG]2024-04-10 04:05:58,905: None
[DEBUG]2024-04-10 04:05:58,906: None
[DEBUG]2024-04-10 04:05:58,906: None
[DEBUG]2024-04-10 04:05:58,906: None
[DEBUG]2024-04-10 04:05:58,906: None
[DEBUG]2024-04-10 04:05:58,906: None
[DEBUG]2024-04-10 04:05:58,906: None
[DEBUG]2024-04-10 04:05:58,906: None
[DEBUG]2024-04-10 04:05:58,906: None
[DEBUG]2024-04-10 04:05:58,906: None
[DEBUG]2024-04-10 04:05:58,906: None
[DEBUG]2024-04-10 04:05:58,906: None
[DEBUG]2024-04-10 04:05:58,906: None
[DEBUG]2024-04-10 04:05:58,906: None
[DEBUG]2024-04-10 04:05:58,906: None
[DEBUG]2024-04-10 04:05:58,907: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:05:58,907: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:05:58,907: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:05:58,907: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:05:58,907: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:05:58,907: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:05:58,907: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:05:58,907: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:05:58,907: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:05:58,907: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:05:58,907: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:05:58,907: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:05:58,907: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:05:58,907: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:05:58,907: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:05:58,908: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:05:58,908: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:05:58,908: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:05:58,908: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:05:58,908: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:05:58,908: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:05:58,908: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:05:58,908: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:05:58,908: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:05:58,908: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:05:58,908: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:05:58,908: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:05:58,908: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:05:58,908: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:05:58,908: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:05:58,908: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:05:58,908: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:05:58,908: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:05:58,908: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:05:58,908: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:05:58,908: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:05:58,908: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:05:58,908: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:05:58,908: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:05:58,908: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:05:58,908: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:05:58,908: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:05:58,908: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:05:58,908: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:05:58,908: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:05:58,909: None
[DEBUG]2024-04-10 04:05:58,909: None
[DEBUG]2024-04-10 04:05:58,909: None
[DEBUG]2024-04-10 04:05:58,909: None
[DEBUG]2024-04-10 04:05:58,909: None
[DEBUG]2024-04-10 04:05:58,909: None
[DEBUG]2024-04-10 04:05:58,909: None
[DEBUG]2024-04-10 04:05:58,909: None
[DEBUG]2024-04-10 04:05:58,909: None
[DEBUG]2024-04-10 04:05:58,909: None
[DEBUG]2024-04-10 04:05:58,909: None
[DEBUG]2024-04-10 04:05:58,909: None
[DEBUG]2024-04-10 04:05:58,909: None
[DEBUG]2024-04-10 04:05:58,909: None
[DEBUG]2024-04-10 04:05:58,909: None
[DEBUG]2024-04-10 04:05:58,909: None
[DEBUG]2024-04-10 04:05:58,910: None
[DEBUG]2024-04-10 04:05:58,910: None
[DEBUG]2024-04-10 04:05:58,910: None
[DEBUG]2024-04-10 04:05:58,910: None
[DEBUG]2024-04-10 04:05:58,910: None
[DEBUG]2024-04-10 04:05:58,910: None
[DEBUG]2024-04-10 04:05:58,910: None
[DEBUG]2024-04-10 04:05:58,910: None
[DEBUG]2024-04-10 04:05:58,910: None
[DEBUG]2024-04-10 04:05:58,910: None
[DEBUG]2024-04-10 04:05:58,910: None
[DEBUG]2024-04-10 04:05:58,910: None
[DEBUG]2024-04-10 04:05:58,910: None
[DEBUG]2024-04-10 04:05:58,910: None
[DEBUG]2024-04-10 04:05:58,910: None
[DEBUG]2024-04-10 04:05:58,910: None
[DEBUG]2024-04-10 04:05:58,910: None
[DEBUG]2024-04-10 04:06:26,734: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 04:06:26,734: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 04:06:26,734: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 04:06:26,736: None
[DEBUG]2024-04-10 04:06:26,736: None
[DEBUG]2024-04-10 04:06:26,737: None
[DEBUG]2024-04-10 04:06:26,737: None
[DEBUG]2024-04-10 04:06:26,737: None
[DEBUG]2024-04-10 04:06:26,737: None
[DEBUG]2024-04-10 04:06:26,737: None
[DEBUG]2024-04-10 04:06:26,737: None
[DEBUG]2024-04-10 04:06:26,737: None
[DEBUG]2024-04-10 04:06:26,738: None
[DEBUG]2024-04-10 04:06:26,738: None
[DEBUG]2024-04-10 04:06:26,738: None
[DEBUG]2024-04-10 04:06:26,738: None
[DEBUG]2024-04-10 04:06:26,738: None
[DEBUG]2024-04-10 04:06:26,739: None
[DEBUG]2024-04-10 04:06:26,739: None
[DEBUG]2024-04-10 04:06:26,739: None
[DEBUG]2024-04-10 04:06:26,739: None
[DEBUG]2024-04-10 04:06:26,739: None
[DEBUG]2024-04-10 04:06:26,739: None
[DEBUG]2024-04-10 04:06:26,740: None
[DEBUG]2024-04-10 04:06:26,740: None
[DEBUG]2024-04-10 04:06:26,740: None
[DEBUG]2024-04-10 04:06:26,740: None
[DEBUG]2024-04-10 04:06:26,740: None
[DEBUG]2024-04-10 04:06:26,740: None
[DEBUG]2024-04-10 04:06:26,740: None
[DEBUG]2024-04-10 04:06:26,740: None
[DEBUG]2024-04-10 04:06:26,740: None
[DEBUG]2024-04-10 04:06:26,740: None
[DEBUG]2024-04-10 04:06:26,740: None
[DEBUG]2024-04-10 04:06:26,740: None
[DEBUG]2024-04-10 04:06:26,740: None
[DEBUG]2024-04-10 04:06:26,740: None
[DEBUG]2024-04-10 04:06:26,740: None
[DEBUG]2024-04-10 04:06:26,741: None
[DEBUG]2024-04-10 04:06:26,741: None
[DEBUG]2024-04-10 04:06:26,741: None
[DEBUG]2024-04-10 04:06:26,741: None
[DEBUG]2024-04-10 04:06:26,741: None
[DEBUG]2024-04-10 04:06:26,741: None
[DEBUG]2024-04-10 04:06:26,741: None
[DEBUG]2024-04-10 04:06:26,741: None
[DEBUG]2024-04-10 04:06:26,741: None
[DEBUG]2024-04-10 04:06:26,742: None
[DEBUG]2024-04-10 04:06:26,742: None
[DEBUG]2024-04-10 04:06:26,742: None
[DEBUG]2024-04-10 04:06:26,742: None
[DEBUG]2024-04-10 04:06:26,742: None
[DEBUG]2024-04-10 04:06:26,742: None
[DEBUG]2024-04-10 04:06:26,742: None
[DEBUG]2024-04-10 04:06:26,742: None
[DEBUG]2024-04-10 04:06:26,742: None
[DEBUG]2024-04-10 04:06:26,742: None
[DEBUG]2024-04-10 04:06:26,743: None
[DEBUG]2024-04-10 04:06:26,743: None
[DEBUG]2024-04-10 04:06:26,743: None
[DEBUG]2024-04-10 04:06:26,743: None
[DEBUG]2024-04-10 04:06:26,743: None
[DEBUG]2024-04-10 04:06:26,743: None
[DEBUG]2024-04-10 04:06:26,743: None
[DEBUG]2024-04-10 04:06:26,743: None
[DEBUG]2024-04-10 04:06:26,743: None
[DEBUG]2024-04-10 04:06:26,743: None
[DEBUG]2024-04-10 04:06:26,743: None
[DEBUG]2024-04-10 04:06:26,744: None
[DEBUG]2024-04-10 04:06:26,744: None
[DEBUG]2024-04-10 04:06:26,744: None
[DEBUG]2024-04-10 04:06:26,744: None
[DEBUG]2024-04-10 04:06:26,744: None
[DEBUG]2024-04-10 04:06:26,744: None
[DEBUG]2024-04-10 04:06:26,744: None
[DEBUG]2024-04-10 04:06:26,744: None
[DEBUG]2024-04-10 04:06:26,744: None
[DEBUG]2024-04-10 04:06:26,744: None
[DEBUG]2024-04-10 04:06:26,744: None
[DEBUG]2024-04-10 04:06:26,744: None
[DEBUG]2024-04-10 04:06:26,745: None
[DEBUG]2024-04-10 04:06:26,745: None
[DEBUG]2024-04-10 04:06:26,745: None
[DEBUG]2024-04-10 04:06:26,745: None
[DEBUG]2024-04-10 04:06:26,745: None
[DEBUG]2024-04-10 04:06:26,745: None
[DEBUG]2024-04-10 04:06:26,745: None
[DEBUG]2024-04-10 04:06:26,745: None
[DEBUG]2024-04-10 04:06:26,745: None
[DEBUG]2024-04-10 04:06:26,745: None
[DEBUG]2024-04-10 04:06:26,745: None
[DEBUG]2024-04-10 04:06:26,745: None
[DEBUG]2024-04-10 04:06:26,745: None
[DEBUG]2024-04-10 04:06:26,746: None
[DEBUG]2024-04-10 04:06:26,746: None
[DEBUG]2024-04-10 04:06:26,746: None
[DEBUG]2024-04-10 04:06:26,746: None
[DEBUG]2024-04-10 04:06:26,746: None
[DEBUG]2024-04-10 04:06:26,746: None
[DEBUG]2024-04-10 04:06:26,746: None
[DEBUG]2024-04-10 04:06:26,746: None
[DEBUG]2024-04-10 04:06:26,746: None
[DEBUG]2024-04-10 04:06:26,746: None
[DEBUG]2024-04-10 04:06:26,746: None
[DEBUG]2024-04-10 04:06:26,746: None
[DEBUG]2024-04-10 04:06:26,746: None
[DEBUG]2024-04-10 04:06:26,746: None
[DEBUG]2024-04-10 04:06:26,747: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:06:26,747: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:06:26,747: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:06:26,747: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:06:26,747: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:06:26,747: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:06:26,747: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:06:26,747: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:06:26,747: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:06:26,747: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:06:26,747: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:06:26,747: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:06:26,747: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:06:26,747: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:06:26,747: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:06:26,748: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:06:26,748: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:06:26,748: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:06:26,748: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:06:26,748: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:06:26,748: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:06:26,748: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:06:26,748: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:06:26,748: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:06:26,748: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:06:26,748: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:06:26,748: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:06:26,748: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:06:26,748: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:06:26,748: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:06:26,748: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:06:26,748: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:06:26,748: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:06:26,748: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:06:26,748: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:06:26,748: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:06:26,748: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:06:26,748: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:06:26,748: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:06:26,748: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:06:26,748: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:06:26,748: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:06:26,748: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:06:26,748: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:06:26,748: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:06:26,749: None
[DEBUG]2024-04-10 04:06:26,749: None
[DEBUG]2024-04-10 04:06:26,749: None
[DEBUG]2024-04-10 04:06:26,749: None
[DEBUG]2024-04-10 04:06:26,749: None
[DEBUG]2024-04-10 04:06:26,749: None
[DEBUG]2024-04-10 04:06:26,749: None
[DEBUG]2024-04-10 04:06:26,749: None
[DEBUG]2024-04-10 04:06:26,749: None
[DEBUG]2024-04-10 04:06:26,749: None
[DEBUG]2024-04-10 04:06:26,749: None
[DEBUG]2024-04-10 04:06:26,749: None
[DEBUG]2024-04-10 04:06:26,749: None
[DEBUG]2024-04-10 04:06:26,749: None
[DEBUG]2024-04-10 04:06:26,749: None
[DEBUG]2024-04-10 04:06:26,749: None
[DEBUG]2024-04-10 04:06:26,750: None
[DEBUG]2024-04-10 04:06:26,750: None
[DEBUG]2024-04-10 04:06:26,750: None
[DEBUG]2024-04-10 04:06:26,750: None
[DEBUG]2024-04-10 04:06:26,750: None
[DEBUG]2024-04-10 04:06:26,750: None
[DEBUG]2024-04-10 04:06:26,750: None
[DEBUG]2024-04-10 04:06:26,750: None
[DEBUG]2024-04-10 04:06:26,750: None
[DEBUG]2024-04-10 04:06:26,750: None
[DEBUG]2024-04-10 04:06:26,750: None
[DEBUG]2024-04-10 04:06:26,750: None
[DEBUG]2024-04-10 04:06:26,750: None
[DEBUG]2024-04-10 04:06:26,750: None
[DEBUG]2024-04-10 04:06:26,750: None
[DEBUG]2024-04-10 04:06:26,750: None
[DEBUG]2024-04-10 04:06:26,750: None
[DEBUG]2024-04-10 04:09:04,136: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 04:09:04,136: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 04:09:04,136: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 04:09:04,138: None
[DEBUG]2024-04-10 04:09:04,138: None
[DEBUG]2024-04-10 04:09:04,139: None
[DEBUG]2024-04-10 04:09:04,139: None
[DEBUG]2024-04-10 04:09:04,139: None
[DEBUG]2024-04-10 04:09:04,139: None
[DEBUG]2024-04-10 04:09:04,139: None
[DEBUG]2024-04-10 04:09:04,139: None
[DEBUG]2024-04-10 04:09:04,139: None
[DEBUG]2024-04-10 04:09:04,140: None
[DEBUG]2024-04-10 04:09:04,140: None
[DEBUG]2024-04-10 04:09:04,140: None
[DEBUG]2024-04-10 04:09:04,140: None
[DEBUG]2024-04-10 04:09:04,140: None
[DEBUG]2024-04-10 04:09:04,141: None
[DEBUG]2024-04-10 04:09:04,141: None
[DEBUG]2024-04-10 04:09:04,141: None
[DEBUG]2024-04-10 04:09:04,141: None
[DEBUG]2024-04-10 04:09:04,141: None
[DEBUG]2024-04-10 04:09:04,141: None
[DEBUG]2024-04-10 04:09:04,142: None
[DEBUG]2024-04-10 04:09:04,142: None
[DEBUG]2024-04-10 04:09:04,142: None
[DEBUG]2024-04-10 04:09:04,142: None
[DEBUG]2024-04-10 04:09:04,142: None
[DEBUG]2024-04-10 04:09:04,142: None
[DEBUG]2024-04-10 04:09:04,142: None
[DEBUG]2024-04-10 04:09:04,142: None
[DEBUG]2024-04-10 04:09:04,142: None
[DEBUG]2024-04-10 04:09:04,142: None
[DEBUG]2024-04-10 04:09:04,142: None
[DEBUG]2024-04-10 04:09:04,142: None
[DEBUG]2024-04-10 04:09:04,142: None
[DEBUG]2024-04-10 04:09:04,142: None
[DEBUG]2024-04-10 04:09:04,142: None
[DEBUG]2024-04-10 04:09:04,143: None
[DEBUG]2024-04-10 04:09:04,143: None
[DEBUG]2024-04-10 04:09:04,143: None
[DEBUG]2024-04-10 04:09:04,143: None
[DEBUG]2024-04-10 04:09:04,143: None
[DEBUG]2024-04-10 04:09:04,143: None
[DEBUG]2024-04-10 04:09:04,143: None
[DEBUG]2024-04-10 04:09:04,143: None
[DEBUG]2024-04-10 04:09:04,143: None
[DEBUG]2024-04-10 04:09:04,144: None
[DEBUG]2024-04-10 04:09:04,144: None
[DEBUG]2024-04-10 04:09:04,144: None
[DEBUG]2024-04-10 04:09:04,144: None
[DEBUG]2024-04-10 04:09:04,144: None
[DEBUG]2024-04-10 04:09:04,144: None
[DEBUG]2024-04-10 04:09:04,144: None
[DEBUG]2024-04-10 04:09:04,144: None
[DEBUG]2024-04-10 04:09:04,144: None
[DEBUG]2024-04-10 04:09:04,144: None
[DEBUG]2024-04-10 04:09:04,145: None
[DEBUG]2024-04-10 04:09:04,145: None
[DEBUG]2024-04-10 04:09:04,145: None
[DEBUG]2024-04-10 04:09:04,145: None
[DEBUG]2024-04-10 04:09:04,145: None
[DEBUG]2024-04-10 04:09:04,145: None
[DEBUG]2024-04-10 04:09:04,145: None
[DEBUG]2024-04-10 04:09:04,145: None
[DEBUG]2024-04-10 04:09:04,145: None
[DEBUG]2024-04-10 04:09:04,145: None
[DEBUG]2024-04-10 04:09:04,145: None
[DEBUG]2024-04-10 04:09:04,146: None
[DEBUG]2024-04-10 04:09:04,146: None
[DEBUG]2024-04-10 04:09:04,146: None
[DEBUG]2024-04-10 04:09:04,146: None
[DEBUG]2024-04-10 04:09:04,146: None
[DEBUG]2024-04-10 04:09:04,146: None
[DEBUG]2024-04-10 04:09:04,146: None
[DEBUG]2024-04-10 04:09:04,146: None
[DEBUG]2024-04-10 04:09:04,146: None
[DEBUG]2024-04-10 04:09:04,146: None
[DEBUG]2024-04-10 04:09:04,146: None
[DEBUG]2024-04-10 04:09:04,146: None
[DEBUG]2024-04-10 04:09:04,147: None
[DEBUG]2024-04-10 04:09:04,147: None
[DEBUG]2024-04-10 04:09:04,147: None
[DEBUG]2024-04-10 04:09:04,147: None
[DEBUG]2024-04-10 04:09:04,147: None
[DEBUG]2024-04-10 04:09:04,147: None
[DEBUG]2024-04-10 04:09:04,147: None
[DEBUG]2024-04-10 04:09:04,147: None
[DEBUG]2024-04-10 04:09:04,147: None
[DEBUG]2024-04-10 04:09:04,147: None
[DEBUG]2024-04-10 04:09:04,147: None
[DEBUG]2024-04-10 04:09:04,147: None
[DEBUG]2024-04-10 04:09:04,147: None
[DEBUG]2024-04-10 04:09:04,148: None
[DEBUG]2024-04-10 04:09:04,148: None
[DEBUG]2024-04-10 04:09:04,148: None
[DEBUG]2024-04-10 04:09:04,148: None
[DEBUG]2024-04-10 04:09:04,148: None
[DEBUG]2024-04-10 04:09:04,148: None
[DEBUG]2024-04-10 04:09:04,148: None
[DEBUG]2024-04-10 04:09:04,148: None
[DEBUG]2024-04-10 04:09:04,148: None
[DEBUG]2024-04-10 04:09:04,148: None
[DEBUG]2024-04-10 04:09:04,148: None
[DEBUG]2024-04-10 04:09:04,148: None
[DEBUG]2024-04-10 04:09:04,148: None
[DEBUG]2024-04-10 04:09:04,148: None
[DEBUG]2024-04-10 04:09:04,148: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:09:04,148: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:09:04,148: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:09:04,148: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:09:04,148: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:09:04,148: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:09:04,148: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:09:04,148: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:09:04,148: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:09:04,148: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:09:04,148: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:09:04,148: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:09:04,148: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:09:04,148: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:09:04,148: <re.Match object; span=(2943, 3063), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:09:04,149: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:09:04,149: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:09:04,149: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:09:04,149: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:09:04,149: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:09:04,149: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:09:04,149: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:09:04,149: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:09:04,149: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:09:04,149: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:09:04,149: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:09:04,149: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:09:04,149: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:09:04,149: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:09:04,149: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:09:04,149: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:09:04,149: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:09:04,149: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:09:04,149: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:09:04,149: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:09:04,149: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:09:04,149: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:09:04,149: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:09:04,149: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:09:04,149: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:09:04,149: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:09:04,149: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:09:04,149: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:09:04,149: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:09:04,149: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:09:04,151: None
[DEBUG]2024-04-10 04:09:04,151: None
[DEBUG]2024-04-10 04:09:04,151: None
[DEBUG]2024-04-10 04:09:04,151: None
[DEBUG]2024-04-10 04:09:04,151: None
[DEBUG]2024-04-10 04:09:04,151: None
[DEBUG]2024-04-10 04:09:04,151: None
[DEBUG]2024-04-10 04:09:04,151: None
[DEBUG]2024-04-10 04:09:04,151: None
[DEBUG]2024-04-10 04:09:04,151: None
[DEBUG]2024-04-10 04:09:04,151: None
[DEBUG]2024-04-10 04:09:04,151: None
[DEBUG]2024-04-10 04:09:04,151: None
[DEBUG]2024-04-10 04:09:04,151: None
[DEBUG]2024-04-10 04:09:04,151: None
[DEBUG]2024-04-10 04:09:04,151: None
[DEBUG]2024-04-10 04:09:04,153: None
[DEBUG]2024-04-10 04:09:04,153: None
[DEBUG]2024-04-10 04:09:04,153: None
[DEBUG]2024-04-10 04:09:04,153: None
[DEBUG]2024-04-10 04:09:04,153: None
[DEBUG]2024-04-10 04:09:04,153: None
[DEBUG]2024-04-10 04:09:04,153: None
[DEBUG]2024-04-10 04:09:04,153: None
[DEBUG]2024-04-10 04:09:04,153: None
[DEBUG]2024-04-10 04:09:04,153: None
[DEBUG]2024-04-10 04:09:04,153: None
[DEBUG]2024-04-10 04:09:04,153: None
[DEBUG]2024-04-10 04:09:04,153: None
[DEBUG]2024-04-10 04:09:04,153: None
[DEBUG]2024-04-10 04:09:04,153: None
[DEBUG]2024-04-10 04:09:04,153: None
[DEBUG]2024-04-10 04:09:04,153: None
[DEBUG]2024-04-10 04:10:29,961: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 04:10:29,961: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 04:10:29,961: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 04:10:29,964: None
[DEBUG]2024-04-10 04:10:29,964: None
[DEBUG]2024-04-10 04:10:29,964: None
[DEBUG]2024-04-10 04:10:29,964: None
[DEBUG]2024-04-10 04:10:29,964: None
[DEBUG]2024-04-10 04:10:29,965: None
[DEBUG]2024-04-10 04:10:29,965: None
[DEBUG]2024-04-10 04:10:29,965: None
[DEBUG]2024-04-10 04:10:29,965: None
[DEBUG]2024-04-10 04:10:29,966: None
[DEBUG]2024-04-10 04:10:29,966: None
[DEBUG]2024-04-10 04:10:29,966: None
[DEBUG]2024-04-10 04:10:29,966: None
[DEBUG]2024-04-10 04:10:29,966: None
[DEBUG]2024-04-10 04:10:29,966: None
[DEBUG]2024-04-10 04:10:29,966: None
[DEBUG]2024-04-10 04:10:29,966: None
[DEBUG]2024-04-10 04:10:29,966: None
[DEBUG]2024-04-10 04:10:29,966: None
[DEBUG]2024-04-10 04:10:29,966: None
[DEBUG]2024-04-10 04:10:29,967: None
[DEBUG]2024-04-10 04:10:29,967: None
[DEBUG]2024-04-10 04:10:29,967: None
[DEBUG]2024-04-10 04:10:29,967: None
[DEBUG]2024-04-10 04:10:29,967: None
[DEBUG]2024-04-10 04:10:29,967: None
[DEBUG]2024-04-10 04:10:29,967: None
[DEBUG]2024-04-10 04:10:29,968: None
[DEBUG]2024-04-10 04:10:29,968: None
[DEBUG]2024-04-10 04:10:29,968: None
[DEBUG]2024-04-10 04:10:29,968: None
[DEBUG]2024-04-10 04:10:29,968: None
[DEBUG]2024-04-10 04:10:29,968: None
[DEBUG]2024-04-10 04:10:29,968: None
[DEBUG]2024-04-10 04:10:29,968: None
[DEBUG]2024-04-10 04:10:29,968: None
[DEBUG]2024-04-10 04:10:29,968: None
[DEBUG]2024-04-10 04:10:29,968: None
[DEBUG]2024-04-10 04:10:29,968: None
[DEBUG]2024-04-10 04:10:29,968: None
[DEBUG]2024-04-10 04:10:29,968: None
[DEBUG]2024-04-10 04:10:29,968: None
[DEBUG]2024-04-10 04:10:29,968: None
[DEBUG]2024-04-10 04:10:29,968: None
[DEBUG]2024-04-10 04:10:29,969: None
[DEBUG]2024-04-10 04:10:29,969: None
[DEBUG]2024-04-10 04:10:29,969: None
[DEBUG]2024-04-10 04:10:29,969: None
[DEBUG]2024-04-10 04:10:29,969: None
[DEBUG]2024-04-10 04:10:29,969: None
[DEBUG]2024-04-10 04:10:29,969: None
[DEBUG]2024-04-10 04:10:29,969: None
[DEBUG]2024-04-10 04:10:29,969: None
[DEBUG]2024-04-10 04:10:29,969: None
[DEBUG]2024-04-10 04:10:29,970: None
[DEBUG]2024-04-10 04:10:29,970: None
[DEBUG]2024-04-10 04:10:29,970: None
[DEBUG]2024-04-10 04:10:29,970: None
[DEBUG]2024-04-10 04:10:29,970: None
[DEBUG]2024-04-10 04:10:29,970: None
[DEBUG]2024-04-10 04:10:29,970: None
[DEBUG]2024-04-10 04:10:29,970: None
[DEBUG]2024-04-10 04:10:29,970: None
[DEBUG]2024-04-10 04:10:29,970: None
[DEBUG]2024-04-10 04:10:29,970: None
[DEBUG]2024-04-10 04:10:29,971: None
[DEBUG]2024-04-10 04:10:29,971: None
[DEBUG]2024-04-10 04:10:29,971: None
[DEBUG]2024-04-10 04:10:29,971: None
[DEBUG]2024-04-10 04:10:29,971: None
[DEBUG]2024-04-10 04:10:29,971: None
[DEBUG]2024-04-10 04:10:29,971: None
[DEBUG]2024-04-10 04:10:29,971: None
[DEBUG]2024-04-10 04:10:29,971: None
[DEBUG]2024-04-10 04:10:29,971: None
[DEBUG]2024-04-10 04:10:29,971: None
[DEBUG]2024-04-10 04:10:29,971: None
[DEBUG]2024-04-10 04:10:29,972: None
[DEBUG]2024-04-10 04:10:29,972: None
[DEBUG]2024-04-10 04:10:29,972: None
[DEBUG]2024-04-10 04:10:29,972: None
[DEBUG]2024-04-10 04:10:29,972: None
[DEBUG]2024-04-10 04:10:29,972: None
[DEBUG]2024-04-10 04:10:29,972: None
[DEBUG]2024-04-10 04:10:29,972: None
[DEBUG]2024-04-10 04:10:29,972: None
[DEBUG]2024-04-10 04:10:29,972: None
[DEBUG]2024-04-10 04:10:29,972: None
[DEBUG]2024-04-10 04:10:29,972: None
[DEBUG]2024-04-10 04:10:29,972: None
[DEBUG]2024-04-10 04:10:29,973: None
[DEBUG]2024-04-10 04:10:29,973: None
[DEBUG]2024-04-10 04:10:29,973: None
[DEBUG]2024-04-10 04:10:29,973: None
[DEBUG]2024-04-10 04:10:29,973: None
[DEBUG]2024-04-10 04:10:29,973: None
[DEBUG]2024-04-10 04:10:29,973: None
[DEBUG]2024-04-10 04:10:29,973: None
[DEBUG]2024-04-10 04:10:29,973: None
[DEBUG]2024-04-10 04:10:29,973: None
[DEBUG]2024-04-10 04:10:29,973: None
[DEBUG]2024-04-10 04:10:29,973: None
[DEBUG]2024-04-10 04:10:29,973: None
[DEBUG]2024-04-10 04:10:29,973: None
[DEBUG]2024-04-10 04:10:29,974: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:10:29,974: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:10:29,974: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:10:29,974: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:10:29,974: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:10:29,974: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:10:29,974: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:10:29,974: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:10:29,974: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:10:29,974: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:10:29,974: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:10:29,974: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:10:29,974: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:10:29,974: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:10:29,974: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:10:29,974: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:10:29,974: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:10:29,974: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:10:29,974: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:10:29,974: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:10:29,974: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:10:29,974: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:10:29,974: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:10:29,974: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:10:29,974: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:10:29,974: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:10:29,974: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:10:29,974: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:10:29,974: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:10:29,974: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:10:29,975: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:10:29,975: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:10:29,975: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:10:29,975: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:10:29,975: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:10:29,975: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:10:29,975: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:10:29,975: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:10:29,975: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:10:29,975: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:10:29,975: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:10:29,975: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:10:29,975: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:10:29,975: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:10:29,975: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:10:29,976: None
[DEBUG]2024-04-10 04:10:29,976: None
[DEBUG]2024-04-10 04:10:29,976: None
[DEBUG]2024-04-10 04:10:29,976: None
[DEBUG]2024-04-10 04:10:29,976: None
[DEBUG]2024-04-10 04:10:29,976: None
[DEBUG]2024-04-10 04:10:29,976: None
[DEBUG]2024-04-10 04:10:29,976: None
[DEBUG]2024-04-10 04:10:29,976: None
[DEBUG]2024-04-10 04:10:29,976: None
[DEBUG]2024-04-10 04:10:29,976: None
[DEBUG]2024-04-10 04:10:29,976: None
[DEBUG]2024-04-10 04:10:29,976: None
[DEBUG]2024-04-10 04:10:29,976: None
[DEBUG]2024-04-10 04:10:29,976: None
[DEBUG]2024-04-10 04:10:29,976: None
[DEBUG]2024-04-10 04:10:29,977: None
[DEBUG]2024-04-10 04:10:29,977: None
[DEBUG]2024-04-10 04:10:29,977: None
[DEBUG]2024-04-10 04:10:29,977: None
[DEBUG]2024-04-10 04:10:29,977: None
[DEBUG]2024-04-10 04:10:29,977: None
[DEBUG]2024-04-10 04:10:29,977: None
[DEBUG]2024-04-10 04:10:29,977: None
[DEBUG]2024-04-10 04:10:29,977: None
[DEBUG]2024-04-10 04:10:29,977: None
[DEBUG]2024-04-10 04:10:29,977: None
[DEBUG]2024-04-10 04:10:29,977: None
[DEBUG]2024-04-10 04:10:29,977: None
[DEBUG]2024-04-10 04:10:29,977: None
[DEBUG]2024-04-10 04:10:29,977: None
[DEBUG]2024-04-10 04:10:29,977: None
[DEBUG]2024-04-10 04:10:29,977: None
[DEBUG]2024-04-10 04:12:25,550: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 04:12:25,550: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 04:12:25,550: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 04:12:25,552: None
[DEBUG]2024-04-10 04:12:25,552: None
[DEBUG]2024-04-10 04:12:25,553: None
[DEBUG]2024-04-10 04:12:25,553: None
[DEBUG]2024-04-10 04:12:25,553: None
[DEBUG]2024-04-10 04:12:25,553: None
[DEBUG]2024-04-10 04:12:25,553: None
[DEBUG]2024-04-10 04:12:25,553: None
[DEBUG]2024-04-10 04:12:25,553: None
[DEBUG]2024-04-10 04:12:25,554: None
[DEBUG]2024-04-10 04:12:25,554: None
[DEBUG]2024-04-10 04:12:25,554: None
[DEBUG]2024-04-10 04:12:25,554: None
[DEBUG]2024-04-10 04:12:25,554: None
[DEBUG]2024-04-10 04:12:25,555: None
[DEBUG]2024-04-10 04:12:25,555: None
[DEBUG]2024-04-10 04:12:25,555: None
[DEBUG]2024-04-10 04:12:25,555: None
[DEBUG]2024-04-10 04:12:25,555: None
[DEBUG]2024-04-10 04:12:25,555: None
[DEBUG]2024-04-10 04:12:25,556: None
[DEBUG]2024-04-10 04:12:25,556: None
[DEBUG]2024-04-10 04:12:25,556: None
[DEBUG]2024-04-10 04:12:25,556: None
[DEBUG]2024-04-10 04:12:25,556: None
[DEBUG]2024-04-10 04:12:25,556: None
[DEBUG]2024-04-10 04:12:25,556: None
[DEBUG]2024-04-10 04:12:25,556: None
[DEBUG]2024-04-10 04:12:25,556: None
[DEBUG]2024-04-10 04:12:25,556: None
[DEBUG]2024-04-10 04:12:25,556: None
[DEBUG]2024-04-10 04:12:25,556: None
[DEBUG]2024-04-10 04:12:25,556: None
[DEBUG]2024-04-10 04:12:25,556: None
[DEBUG]2024-04-10 04:12:25,556: None
[DEBUG]2024-04-10 04:12:25,557: None
[DEBUG]2024-04-10 04:12:25,557: None
[DEBUG]2024-04-10 04:12:25,557: None
[DEBUG]2024-04-10 04:12:25,557: None
[DEBUG]2024-04-10 04:12:25,557: None
[DEBUG]2024-04-10 04:12:25,557: None
[DEBUG]2024-04-10 04:12:25,557: None
[DEBUG]2024-04-10 04:12:25,557: None
[DEBUG]2024-04-10 04:12:25,557: None
[DEBUG]2024-04-10 04:12:25,558: None
[DEBUG]2024-04-10 04:12:25,558: None
[DEBUG]2024-04-10 04:12:25,558: None
[DEBUG]2024-04-10 04:12:25,558: None
[DEBUG]2024-04-10 04:12:25,558: None
[DEBUG]2024-04-10 04:12:25,558: None
[DEBUG]2024-04-10 04:12:25,558: None
[DEBUG]2024-04-10 04:12:25,558: None
[DEBUG]2024-04-10 04:12:25,558: None
[DEBUG]2024-04-10 04:12:25,558: None
[DEBUG]2024-04-10 04:12:25,559: None
[DEBUG]2024-04-10 04:12:25,559: None
[DEBUG]2024-04-10 04:12:25,559: None
[DEBUG]2024-04-10 04:12:25,559: None
[DEBUG]2024-04-10 04:12:25,559: None
[DEBUG]2024-04-10 04:12:25,559: None
[DEBUG]2024-04-10 04:12:25,559: None
[DEBUG]2024-04-10 04:12:25,559: None
[DEBUG]2024-04-10 04:12:25,559: None
[DEBUG]2024-04-10 04:12:25,559: None
[DEBUG]2024-04-10 04:12:25,559: None
[DEBUG]2024-04-10 04:12:25,560: None
[DEBUG]2024-04-10 04:12:25,560: None
[DEBUG]2024-04-10 04:12:25,560: None
[DEBUG]2024-04-10 04:12:25,560: None
[DEBUG]2024-04-10 04:12:25,560: None
[DEBUG]2024-04-10 04:12:25,560: None
[DEBUG]2024-04-10 04:12:25,560: None
[DEBUG]2024-04-10 04:12:25,560: None
[DEBUG]2024-04-10 04:12:25,560: None
[DEBUG]2024-04-10 04:12:25,560: None
[DEBUG]2024-04-10 04:12:25,560: None
[DEBUG]2024-04-10 04:12:25,560: None
[DEBUG]2024-04-10 04:12:25,561: None
[DEBUG]2024-04-10 04:12:25,561: None
[DEBUG]2024-04-10 04:12:25,561: None
[DEBUG]2024-04-10 04:12:25,561: None
[DEBUG]2024-04-10 04:12:25,561: None
[DEBUG]2024-04-10 04:12:25,561: None
[DEBUG]2024-04-10 04:12:25,561: None
[DEBUG]2024-04-10 04:12:25,561: None
[DEBUG]2024-04-10 04:12:25,561: None
[DEBUG]2024-04-10 04:12:25,561: None
[DEBUG]2024-04-10 04:12:25,561: None
[DEBUG]2024-04-10 04:12:25,561: None
[DEBUG]2024-04-10 04:12:25,561: None
[DEBUG]2024-04-10 04:12:25,561: None
[DEBUG]2024-04-10 04:12:25,561: None
[DEBUG]2024-04-10 04:12:25,561: None
[DEBUG]2024-04-10 04:12:25,561: None
[DEBUG]2024-04-10 04:12:25,561: None
[DEBUG]2024-04-10 04:12:25,561: None
[DEBUG]2024-04-10 04:12:25,561: None
[DEBUG]2024-04-10 04:12:25,561: None
[DEBUG]2024-04-10 04:12:25,561: None
[DEBUG]2024-04-10 04:12:25,561: None
[DEBUG]2024-04-10 04:12:25,561: None
[DEBUG]2024-04-10 04:12:25,561: None
[DEBUG]2024-04-10 04:12:25,561: None
[DEBUG]2024-04-10 04:12:25,561: None
[DEBUG]2024-04-10 04:12:25,562: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:12:25,562: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:12:25,562: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:12:25,562: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:12:25,562: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:12:25,562: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:12:25,562: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:12:25,562: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:12:25,562: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:12:25,562: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:12:25,562: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:12:25,562: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:12:25,562: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:12:25,562: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:12:25,562: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:12:25,563: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:12:25,563: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:12:25,563: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:12:25,563: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:12:25,563: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:12:25,563: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:12:25,563: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:12:25,563: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:12:25,563: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:12:25,563: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:12:25,563: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:12:25,563: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:12:25,563: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:12:25,563: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:12:25,563: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:12:25,563: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:12:25,563: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:12:25,563: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:12:25,563: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:12:25,563: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:12:25,563: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:12:25,563: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:12:25,563: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:12:25,563: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:12:25,563: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:12:25,563: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:12:25,563: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:12:25,563: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:12:25,563: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:12:25,563: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:12:25,564: None
[DEBUG]2024-04-10 04:12:25,564: None
[DEBUG]2024-04-10 04:12:25,564: None
[DEBUG]2024-04-10 04:12:25,564: None
[DEBUG]2024-04-10 04:12:25,564: None
[DEBUG]2024-04-10 04:12:25,564: None
[DEBUG]2024-04-10 04:12:25,564: None
[DEBUG]2024-04-10 04:12:25,564: None
[DEBUG]2024-04-10 04:12:25,564: None
[DEBUG]2024-04-10 04:12:25,564: None
[DEBUG]2024-04-10 04:12:25,564: None
[DEBUG]2024-04-10 04:12:25,564: None
[DEBUG]2024-04-10 04:12:25,564: None
[DEBUG]2024-04-10 04:12:25,564: None
[DEBUG]2024-04-10 04:12:25,564: None
[DEBUG]2024-04-10 04:12:25,564: None
[DEBUG]2024-04-10 04:12:25,565: None
[DEBUG]2024-04-10 04:12:25,565: None
[DEBUG]2024-04-10 04:12:25,565: None
[DEBUG]2024-04-10 04:12:25,565: None
[DEBUG]2024-04-10 04:12:25,565: None
[DEBUG]2024-04-10 04:12:25,565: None
[DEBUG]2024-04-10 04:12:25,565: None
[DEBUG]2024-04-10 04:12:25,565: None
[DEBUG]2024-04-10 04:12:25,565: None
[DEBUG]2024-04-10 04:12:25,565: None
[DEBUG]2024-04-10 04:12:25,565: None
[DEBUG]2024-04-10 04:12:25,565: None
[DEBUG]2024-04-10 04:12:25,565: None
[DEBUG]2024-04-10 04:12:25,565: None
[DEBUG]2024-04-10 04:12:25,565: None
[DEBUG]2024-04-10 04:12:25,565: None
[DEBUG]2024-04-10 04:12:25,565: None
[DEBUG]2024-04-10 04:16:02,222: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 04:16:02,222: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 04:16:02,222: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 04:16:02,224: None
[DEBUG]2024-04-10 04:16:02,224: None
[DEBUG]2024-04-10 04:16:02,225: None
[DEBUG]2024-04-10 04:16:02,225: None
[DEBUG]2024-04-10 04:16:02,225: None
[DEBUG]2024-04-10 04:16:02,225: None
[DEBUG]2024-04-10 04:16:02,225: None
[DEBUG]2024-04-10 04:16:02,225: None
[DEBUG]2024-04-10 04:16:02,225: None
[DEBUG]2024-04-10 04:16:02,226: None
[DEBUG]2024-04-10 04:16:02,226: None
[DEBUG]2024-04-10 04:16:02,226: None
[DEBUG]2024-04-10 04:16:02,226: None
[DEBUG]2024-04-10 04:16:02,226: None
[DEBUG]2024-04-10 04:16:02,227: None
[DEBUG]2024-04-10 04:16:02,227: None
[DEBUG]2024-04-10 04:16:02,227: None
[DEBUG]2024-04-10 04:16:02,227: None
[DEBUG]2024-04-10 04:16:02,227: None
[DEBUG]2024-04-10 04:16:02,227: None
[DEBUG]2024-04-10 04:16:02,228: None
[DEBUG]2024-04-10 04:16:02,228: None
[DEBUG]2024-04-10 04:16:02,228: None
[DEBUG]2024-04-10 04:16:02,228: None
[DEBUG]2024-04-10 04:16:02,228: None
[DEBUG]2024-04-10 04:16:02,228: None
[DEBUG]2024-04-10 04:16:02,228: None
[DEBUG]2024-04-10 04:16:02,229: None
[DEBUG]2024-04-10 04:16:02,229: None
[DEBUG]2024-04-10 04:16:02,229: None
[DEBUG]2024-04-10 04:16:02,229: None
[DEBUG]2024-04-10 04:16:02,229: None
[DEBUG]2024-04-10 04:16:02,229: None
[DEBUG]2024-04-10 04:16:02,229: None
[DEBUG]2024-04-10 04:16:02,229: None
[DEBUG]2024-04-10 04:16:02,229: None
[DEBUG]2024-04-10 04:16:02,229: None
[DEBUG]2024-04-10 04:16:02,229: None
[DEBUG]2024-04-10 04:16:02,229: None
[DEBUG]2024-04-10 04:16:02,229: None
[DEBUG]2024-04-10 04:16:02,229: None
[DEBUG]2024-04-10 04:16:02,229: None
[DEBUG]2024-04-10 04:16:02,229: None
[DEBUG]2024-04-10 04:16:02,229: None
[DEBUG]2024-04-10 04:16:02,230: None
[DEBUG]2024-04-10 04:16:02,230: None
[DEBUG]2024-04-10 04:16:02,230: None
[DEBUG]2024-04-10 04:16:02,230: None
[DEBUG]2024-04-10 04:16:02,230: None
[DEBUG]2024-04-10 04:16:02,230: None
[DEBUG]2024-04-10 04:16:02,230: None
[DEBUG]2024-04-10 04:16:02,230: None
[DEBUG]2024-04-10 04:16:02,230: None
[DEBUG]2024-04-10 04:16:02,230: None
[DEBUG]2024-04-10 04:16:02,231: None
[DEBUG]2024-04-10 04:16:02,231: None
[DEBUG]2024-04-10 04:16:02,231: None
[DEBUG]2024-04-10 04:16:02,231: None
[DEBUG]2024-04-10 04:16:02,231: None
[DEBUG]2024-04-10 04:16:02,231: None
[DEBUG]2024-04-10 04:16:02,231: None
[DEBUG]2024-04-10 04:16:02,231: None
[DEBUG]2024-04-10 04:16:02,231: None
[DEBUG]2024-04-10 04:16:02,231: None
[DEBUG]2024-04-10 04:16:02,231: None
[DEBUG]2024-04-10 04:16:02,232: None
[DEBUG]2024-04-10 04:16:02,232: None
[DEBUG]2024-04-10 04:16:02,232: None
[DEBUG]2024-04-10 04:16:02,232: None
[DEBUG]2024-04-10 04:16:02,232: None
[DEBUG]2024-04-10 04:16:02,232: None
[DEBUG]2024-04-10 04:16:02,232: None
[DEBUG]2024-04-10 04:16:02,232: None
[DEBUG]2024-04-10 04:16:02,232: None
[DEBUG]2024-04-10 04:16:02,232: None
[DEBUG]2024-04-10 04:16:02,232: None
[DEBUG]2024-04-10 04:16:02,232: None
[DEBUG]2024-04-10 04:16:02,233: None
[DEBUG]2024-04-10 04:16:02,233: None
[DEBUG]2024-04-10 04:16:02,233: None
[DEBUG]2024-04-10 04:16:02,233: None
[DEBUG]2024-04-10 04:16:02,233: None
[DEBUG]2024-04-10 04:16:02,233: None
[DEBUG]2024-04-10 04:16:02,233: None
[DEBUG]2024-04-10 04:16:02,233: None
[DEBUG]2024-04-10 04:16:02,233: None
[DEBUG]2024-04-10 04:16:02,233: None
[DEBUG]2024-04-10 04:16:02,233: None
[DEBUG]2024-04-10 04:16:02,233: None
[DEBUG]2024-04-10 04:16:02,233: None
[DEBUG]2024-04-10 04:16:02,234: None
[DEBUG]2024-04-10 04:16:02,234: None
[DEBUG]2024-04-10 04:16:02,234: None
[DEBUG]2024-04-10 04:16:02,234: None
[DEBUG]2024-04-10 04:16:02,234: None
[DEBUG]2024-04-10 04:16:02,234: None
[DEBUG]2024-04-10 04:16:02,234: None
[DEBUG]2024-04-10 04:16:02,234: None
[DEBUG]2024-04-10 04:16:02,234: None
[DEBUG]2024-04-10 04:16:02,234: None
[DEBUG]2024-04-10 04:16:02,234: None
[DEBUG]2024-04-10 04:16:02,234: None
[DEBUG]2024-04-10 04:16:02,234: None
[DEBUG]2024-04-10 04:16:02,234: None
[DEBUG]2024-04-10 04:16:02,235: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:16:02,235: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:16:02,235: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:16:02,235: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:16:02,235: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:16:02,235: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:16:02,235: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:16:02,235: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:16:02,235: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:16:02,235: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:16:02,235: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:16:02,235: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:16:02,235: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:16:02,235: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:16:02,235: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:16:02,235: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:16:02,235: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:16:02,235: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:16:02,235: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:16:02,235: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:16:02,235: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:16:02,235: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:16:02,235: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:16:02,235: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:16:02,235: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:16:02,235: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:16:02,235: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:16:02,235: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:16:02,235: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:16:02,235: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:16:02,236: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:16:02,236: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:16:02,236: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:16:02,236: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:16:02,236: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:16:02,236: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:16:02,236: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:16:02,236: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:16:02,236: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:16:02,236: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:16:02,236: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:16:02,236: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:16:02,236: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:16:02,236: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:16:02,236: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:16:02,237: None
[DEBUG]2024-04-10 04:16:02,237: None
[DEBUG]2024-04-10 04:16:02,237: None
[DEBUG]2024-04-10 04:16:02,237: None
[DEBUG]2024-04-10 04:16:02,237: None
[DEBUG]2024-04-10 04:16:02,237: None
[DEBUG]2024-04-10 04:16:02,237: None
[DEBUG]2024-04-10 04:16:02,237: None
[DEBUG]2024-04-10 04:16:02,237: None
[DEBUG]2024-04-10 04:16:02,237: None
[DEBUG]2024-04-10 04:16:02,237: None
[DEBUG]2024-04-10 04:16:02,237: None
[DEBUG]2024-04-10 04:16:02,237: None
[DEBUG]2024-04-10 04:16:02,237: None
[DEBUG]2024-04-10 04:16:02,237: None
[DEBUG]2024-04-10 04:16:02,237: None
[DEBUG]2024-04-10 04:16:02,238: None
[DEBUG]2024-04-10 04:16:02,238: None
[DEBUG]2024-04-10 04:16:02,238: None
[DEBUG]2024-04-10 04:16:02,238: None
[DEBUG]2024-04-10 04:16:02,238: None
[DEBUG]2024-04-10 04:16:02,238: None
[DEBUG]2024-04-10 04:16:02,238: None
[DEBUG]2024-04-10 04:16:02,238: None
[DEBUG]2024-04-10 04:16:02,238: None
[DEBUG]2024-04-10 04:16:02,238: None
[DEBUG]2024-04-10 04:16:02,238: None
[DEBUG]2024-04-10 04:16:02,238: None
[DEBUG]2024-04-10 04:16:02,238: None
[DEBUG]2024-04-10 04:16:02,238: None
[DEBUG]2024-04-10 04:16:02,238: None
[DEBUG]2024-04-10 04:16:02,238: None
[DEBUG]2024-04-10 04:16:02,238: None
[DEBUG]2024-04-10 04:28:27,282: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 04:28:27,283: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 04:28:27,283: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 04:28:27,285: None
[DEBUG]2024-04-10 04:28:27,285: None
[DEBUG]2024-04-10 04:28:27,285: None
[DEBUG]2024-04-10 04:28:27,285: None
[DEBUG]2024-04-10 04:28:27,285: None
[DEBUG]2024-04-10 04:28:27,286: None
[DEBUG]2024-04-10 04:28:27,286: None
[DEBUG]2024-04-10 04:28:27,286: None
[DEBUG]2024-04-10 04:28:27,286: None
[DEBUG]2024-04-10 04:28:27,287: None
[DEBUG]2024-04-10 04:28:27,287: None
[DEBUG]2024-04-10 04:28:27,287: None
[DEBUG]2024-04-10 04:28:27,287: None
[DEBUG]2024-04-10 04:28:27,287: None
[DEBUG]2024-04-10 04:28:27,287: None
[DEBUG]2024-04-10 04:28:27,287: None
[DEBUG]2024-04-10 04:28:27,287: None
[DEBUG]2024-04-10 04:28:27,287: None
[DEBUG]2024-04-10 04:28:27,287: None
[DEBUG]2024-04-10 04:28:27,287: None
[DEBUG]2024-04-10 04:28:27,288: None
[DEBUG]2024-04-10 04:28:27,288: None
[DEBUG]2024-04-10 04:28:27,288: None
[DEBUG]2024-04-10 04:28:27,288: None
[DEBUG]2024-04-10 04:28:27,288: None
[DEBUG]2024-04-10 04:28:27,288: None
[DEBUG]2024-04-10 04:28:27,288: None
[DEBUG]2024-04-10 04:28:27,289: None
[DEBUG]2024-04-10 04:28:27,289: None
[DEBUG]2024-04-10 04:28:27,289: None
[DEBUG]2024-04-10 04:28:27,289: None
[DEBUG]2024-04-10 04:28:27,289: None
[DEBUG]2024-04-10 04:28:27,289: None
[DEBUG]2024-04-10 04:28:27,289: None
[DEBUG]2024-04-10 04:28:27,289: None
[DEBUG]2024-04-10 04:28:27,290: None
[DEBUG]2024-04-10 04:28:27,290: None
[DEBUG]2024-04-10 04:28:27,290: None
[DEBUG]2024-04-10 04:28:27,290: None
[DEBUG]2024-04-10 04:28:27,290: None
[DEBUG]2024-04-10 04:28:27,290: None
[DEBUG]2024-04-10 04:28:27,290: None
[DEBUG]2024-04-10 04:28:27,290: None
[DEBUG]2024-04-10 04:28:27,290: None
[DEBUG]2024-04-10 04:28:27,291: None
[DEBUG]2024-04-10 04:28:27,291: None
[DEBUG]2024-04-10 04:28:27,291: None
[DEBUG]2024-04-10 04:28:27,291: None
[DEBUG]2024-04-10 04:28:27,291: None
[DEBUG]2024-04-10 04:28:27,291: None
[DEBUG]2024-04-10 04:28:27,291: None
[DEBUG]2024-04-10 04:28:27,291: None
[DEBUG]2024-04-10 04:28:27,291: None
[DEBUG]2024-04-10 04:28:27,291: None
[DEBUG]2024-04-10 04:28:27,292: None
[DEBUG]2024-04-10 04:28:27,292: None
[DEBUG]2024-04-10 04:28:27,292: None
[DEBUG]2024-04-10 04:28:27,292: None
[DEBUG]2024-04-10 04:28:27,292: None
[DEBUG]2024-04-10 04:28:27,292: None
[DEBUG]2024-04-10 04:28:27,292: None
[DEBUG]2024-04-10 04:28:27,292: None
[DEBUG]2024-04-10 04:28:27,292: None
[DEBUG]2024-04-10 04:28:27,292: None
[DEBUG]2024-04-10 04:28:27,292: None
[DEBUG]2024-04-10 04:28:27,293: None
[DEBUG]2024-04-10 04:28:27,293: None
[DEBUG]2024-04-10 04:28:27,293: None
[DEBUG]2024-04-10 04:28:27,293: None
[DEBUG]2024-04-10 04:28:27,293: None
[DEBUG]2024-04-10 04:28:27,293: None
[DEBUG]2024-04-10 04:28:27,293: None
[DEBUG]2024-04-10 04:28:27,293: None
[DEBUG]2024-04-10 04:28:27,293: None
[DEBUG]2024-04-10 04:28:27,293: None
[DEBUG]2024-04-10 04:28:27,293: None
[DEBUG]2024-04-10 04:28:27,293: None
[DEBUG]2024-04-10 04:28:27,294: None
[DEBUG]2024-04-10 04:28:27,294: None
[DEBUG]2024-04-10 04:28:27,294: None
[DEBUG]2024-04-10 04:28:27,294: None
[DEBUG]2024-04-10 04:28:27,294: None
[DEBUG]2024-04-10 04:28:27,294: None
[DEBUG]2024-04-10 04:28:27,294: None
[DEBUG]2024-04-10 04:28:27,294: None
[DEBUG]2024-04-10 04:28:27,294: None
[DEBUG]2024-04-10 04:28:27,294: None
[DEBUG]2024-04-10 04:28:27,294: None
[DEBUG]2024-04-10 04:28:27,294: None
[DEBUG]2024-04-10 04:28:27,294: None
[DEBUG]2024-04-10 04:28:27,294: None
[DEBUG]2024-04-10 04:28:27,294: None
[DEBUG]2024-04-10 04:28:27,294: None
[DEBUG]2024-04-10 04:28:27,294: None
[DEBUG]2024-04-10 04:28:27,294: None
[DEBUG]2024-04-10 04:28:27,294: None
[DEBUG]2024-04-10 04:28:27,294: None
[DEBUG]2024-04-10 04:28:27,294: None
[DEBUG]2024-04-10 04:28:27,294: None
[DEBUG]2024-04-10 04:28:27,294: None
[DEBUG]2024-04-10 04:28:27,294: None
[DEBUG]2024-04-10 04:28:27,294: None
[DEBUG]2024-04-10 04:28:27,294: None
[DEBUG]2024-04-10 04:28:27,294: None
[DEBUG]2024-04-10 04:28:27,295: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:28:27,295: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:28:27,295: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:28:27,295: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:28:27,295: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:28:27,295: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:28:27,295: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:28:27,295: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:28:27,295: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:28:27,295: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:28:27,295: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:28:27,295: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:28:27,295: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:28:27,295: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:28:27,295: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:28:27,296: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:28:27,296: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:28:27,296: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:28:27,296: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:28:27,296: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:28:27,296: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:28:27,296: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:28:27,296: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:28:27,296: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:28:27,296: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:28:27,296: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:28:27,296: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:28:27,296: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:28:27,296: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:28:27,296: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:28:27,296: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:28:27,296: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:28:27,296: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:28:27,296: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:28:27,296: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:28:27,296: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:28:27,296: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:28:27,296: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:28:27,296: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:28:27,296: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:28:27,296: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:28:27,296: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:28:27,296: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:28:27,296: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:28:27,296: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:28:27,297: None
[DEBUG]2024-04-10 04:28:27,297: None
[DEBUG]2024-04-10 04:28:27,297: None
[DEBUG]2024-04-10 04:28:27,297: None
[DEBUG]2024-04-10 04:28:27,297: None
[DEBUG]2024-04-10 04:28:27,297: None
[DEBUG]2024-04-10 04:28:27,297: None
[DEBUG]2024-04-10 04:28:27,297: None
[DEBUG]2024-04-10 04:28:27,297: None
[DEBUG]2024-04-10 04:28:27,297: None
[DEBUG]2024-04-10 04:28:27,297: None
[DEBUG]2024-04-10 04:28:27,297: None
[DEBUG]2024-04-10 04:28:27,297: None
[DEBUG]2024-04-10 04:28:27,297: None
[DEBUG]2024-04-10 04:28:27,297: None
[DEBUG]2024-04-10 04:28:27,297: None
[DEBUG]2024-04-10 04:28:27,298: None
[DEBUG]2024-04-10 04:28:27,298: None
[DEBUG]2024-04-10 04:28:27,298: None
[DEBUG]2024-04-10 04:28:27,298: None
[DEBUG]2024-04-10 04:28:27,298: None
[DEBUG]2024-04-10 04:28:27,298: None
[DEBUG]2024-04-10 04:28:27,298: None
[DEBUG]2024-04-10 04:28:27,298: None
[DEBUG]2024-04-10 04:28:27,298: None
[DEBUG]2024-04-10 04:28:27,298: None
[DEBUG]2024-04-10 04:28:27,298: None
[DEBUG]2024-04-10 04:28:27,298: None
[DEBUG]2024-04-10 04:28:27,298: None
[DEBUG]2024-04-10 04:28:27,298: None
[DEBUG]2024-04-10 04:28:27,298: None
[DEBUG]2024-04-10 04:28:27,298: None
[DEBUG]2024-04-10 04:28:27,298: None
[DEBUG]2024-04-10 04:37:18,290: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 04:37:18,290: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 04:37:18,290: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 04:37:18,292: None
[DEBUG]2024-04-10 04:37:18,292: None
[DEBUG]2024-04-10 04:37:18,293: None
[DEBUG]2024-04-10 04:37:18,293: None
[DEBUG]2024-04-10 04:37:18,293: None
[DEBUG]2024-04-10 04:37:18,294: None
[DEBUG]2024-04-10 04:37:18,294: None
[DEBUG]2024-04-10 04:37:18,294: None
[DEBUG]2024-04-10 04:37:18,294: None
[DEBUG]2024-04-10 04:37:18,294: None
[DEBUG]2024-04-10 04:37:18,294: None
[DEBUG]2024-04-10 04:37:18,294: None
[DEBUG]2024-04-10 04:37:18,294: None
[DEBUG]2024-04-10 04:37:18,294: None
[DEBUG]2024-04-10 04:37:18,295: None
[DEBUG]2024-04-10 04:37:18,295: None
[DEBUG]2024-04-10 04:37:18,295: None
[DEBUG]2024-04-10 04:37:18,295: None
[DEBUG]2024-04-10 04:37:18,295: None
[DEBUG]2024-04-10 04:37:18,295: None
[DEBUG]2024-04-10 04:37:18,296: None
[DEBUG]2024-04-10 04:37:18,296: None
[DEBUG]2024-04-10 04:37:18,296: None
[DEBUG]2024-04-10 04:37:18,296: None
[DEBUG]2024-04-10 04:37:18,296: None
[DEBUG]2024-04-10 04:37:18,296: None
[DEBUG]2024-04-10 04:37:18,296: None
[DEBUG]2024-04-10 04:37:18,296: None
[DEBUG]2024-04-10 04:37:18,296: None
[DEBUG]2024-04-10 04:37:18,296: None
[DEBUG]2024-04-10 04:37:18,296: None
[DEBUG]2024-04-10 04:37:18,296: None
[DEBUG]2024-04-10 04:37:18,296: None
[DEBUG]2024-04-10 04:37:18,296: None
[DEBUG]2024-04-10 04:37:18,296: None
[DEBUG]2024-04-10 04:37:18,297: None
[DEBUG]2024-04-10 04:37:18,297: None
[DEBUG]2024-04-10 04:37:18,297: None
[DEBUG]2024-04-10 04:37:18,297: None
[DEBUG]2024-04-10 04:37:18,297: None
[DEBUG]2024-04-10 04:37:18,297: None
[DEBUG]2024-04-10 04:37:18,297: None
[DEBUG]2024-04-10 04:37:18,297: None
[DEBUG]2024-04-10 04:37:18,297: None
[DEBUG]2024-04-10 04:37:18,298: None
[DEBUG]2024-04-10 04:37:18,298: None
[DEBUG]2024-04-10 04:37:18,298: None
[DEBUG]2024-04-10 04:37:18,298: None
[DEBUG]2024-04-10 04:37:18,298: None
[DEBUG]2024-04-10 04:37:18,298: None
[DEBUG]2024-04-10 04:37:18,298: None
[DEBUG]2024-04-10 04:37:18,298: None
[DEBUG]2024-04-10 04:37:18,298: None
[DEBUG]2024-04-10 04:37:18,298: None
[DEBUG]2024-04-10 04:37:18,299: None
[DEBUG]2024-04-10 04:37:18,299: None
[DEBUG]2024-04-10 04:37:18,299: None
[DEBUG]2024-04-10 04:37:18,299: None
[DEBUG]2024-04-10 04:37:18,299: None
[DEBUG]2024-04-10 04:37:18,299: None
[DEBUG]2024-04-10 04:37:18,299: None
[DEBUG]2024-04-10 04:37:18,299: None
[DEBUG]2024-04-10 04:37:18,299: None
[DEBUG]2024-04-10 04:37:18,299: None
[DEBUG]2024-04-10 04:37:18,299: None
[DEBUG]2024-04-10 04:37:18,300: None
[DEBUG]2024-04-10 04:37:18,300: None
[DEBUG]2024-04-10 04:37:18,300: None
[DEBUG]2024-04-10 04:37:18,300: None
[DEBUG]2024-04-10 04:37:18,300: None
[DEBUG]2024-04-10 04:37:18,300: None
[DEBUG]2024-04-10 04:37:18,300: None
[DEBUG]2024-04-10 04:37:18,300: None
[DEBUG]2024-04-10 04:37:18,300: None
[DEBUG]2024-04-10 04:37:18,300: None
[DEBUG]2024-04-10 04:37:18,300: None
[DEBUG]2024-04-10 04:37:18,300: None
[DEBUG]2024-04-10 04:37:18,301: None
[DEBUG]2024-04-10 04:37:18,301: None
[DEBUG]2024-04-10 04:37:18,301: None
[DEBUG]2024-04-10 04:37:18,301: None
[DEBUG]2024-04-10 04:37:18,301: None
[DEBUG]2024-04-10 04:37:18,301: None
[DEBUG]2024-04-10 04:37:18,301: None
[DEBUG]2024-04-10 04:37:18,301: None
[DEBUG]2024-04-10 04:37:18,301: None
[DEBUG]2024-04-10 04:37:18,301: None
[DEBUG]2024-04-10 04:37:18,301: None
[DEBUG]2024-04-10 04:37:18,301: None
[DEBUG]2024-04-10 04:37:18,301: None
[DEBUG]2024-04-10 04:37:18,302: None
[DEBUG]2024-04-10 04:37:18,302: None
[DEBUG]2024-04-10 04:37:18,302: None
[DEBUG]2024-04-10 04:37:18,302: None
[DEBUG]2024-04-10 04:37:18,302: None
[DEBUG]2024-04-10 04:37:18,302: None
[DEBUG]2024-04-10 04:37:18,302: None
[DEBUG]2024-04-10 04:37:18,302: None
[DEBUG]2024-04-10 04:37:18,302: None
[DEBUG]2024-04-10 04:37:18,302: None
[DEBUG]2024-04-10 04:37:18,302: None
[DEBUG]2024-04-10 04:37:18,302: None
[DEBUG]2024-04-10 04:37:18,302: None
[DEBUG]2024-04-10 04:37:18,302: None
[DEBUG]2024-04-10 04:37:18,302: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:37:18,302: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:37:18,302: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:37:18,302: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:37:18,302: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:37:18,302: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:37:18,302: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:37:18,302: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:37:18,302: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:37:18,302: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:37:18,302: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:37:18,302: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:37:18,302: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:37:18,302: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:37:18,302: <re.Match object; span=(3272, 3392), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 04:37:18,303: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:37:18,303: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:37:18,303: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:37:18,303: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:37:18,303: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:37:18,303: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:37:18,303: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:37:18,303: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:37:18,303: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:37:18,303: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:37:18,303: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:37:18,303: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:37:18,303: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:37:18,303: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:37:18,303: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 04:37:18,304: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:37:18,304: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:37:18,304: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:37:18,304: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:37:18,304: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:37:18,304: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:37:18,304: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:37:18,304: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:37:18,304: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:37:18,304: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:37:18,304: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:37:18,304: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:37:18,304: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:37:18,304: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:37:18,304: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 04:37:18,305: None
[DEBUG]2024-04-10 04:37:18,305: None
[DEBUG]2024-04-10 04:37:18,305: None
[DEBUG]2024-04-10 04:37:18,305: None
[DEBUG]2024-04-10 04:37:18,305: None
[DEBUG]2024-04-10 04:37:18,305: None
[DEBUG]2024-04-10 04:37:18,305: None
[DEBUG]2024-04-10 04:37:18,305: None
[DEBUG]2024-04-10 04:37:18,305: None
[DEBUG]2024-04-10 04:37:18,305: None
[DEBUG]2024-04-10 04:37:18,305: None
[DEBUG]2024-04-10 04:37:18,305: None
[DEBUG]2024-04-10 04:37:18,305: None
[DEBUG]2024-04-10 04:37:18,305: None
[DEBUG]2024-04-10 04:37:18,305: None
[DEBUG]2024-04-10 04:37:18,305: None
[DEBUG]2024-04-10 04:37:18,306: None
[DEBUG]2024-04-10 04:37:18,306: None
[DEBUG]2024-04-10 04:37:18,306: None
[DEBUG]2024-04-10 04:37:18,306: None
[DEBUG]2024-04-10 04:37:18,306: None
[DEBUG]2024-04-10 04:37:18,306: None
[DEBUG]2024-04-10 04:37:18,306: None
[DEBUG]2024-04-10 04:37:18,306: None
[DEBUG]2024-04-10 04:37:18,306: None
[DEBUG]2024-04-10 04:37:18,306: None
[DEBUG]2024-04-10 04:37:18,306: None
[DEBUG]2024-04-10 04:37:18,306: None
[DEBUG]2024-04-10 04:37:18,306: None
[DEBUG]2024-04-10 04:37:18,306: None
[DEBUG]2024-04-10 04:37:18,306: None
[DEBUG]2024-04-10 04:37:18,306: None
[DEBUG]2024-04-10 04:37:18,306: None
[DEBUG]2024-04-10 05:04:56,166: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 05:04:56,166: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 05:04:56,166: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 05:04:56,169: None
[DEBUG]2024-04-10 05:04:56,169: None
[DEBUG]2024-04-10 05:04:56,169: None
[DEBUG]2024-04-10 05:04:56,169: None
[DEBUG]2024-04-10 05:04:56,169: None
[DEBUG]2024-04-10 05:04:56,170: None
[DEBUG]2024-04-10 05:04:56,170: None
[DEBUG]2024-04-10 05:04:56,170: None
[DEBUG]2024-04-10 05:04:56,170: None
[DEBUG]2024-04-10 05:04:56,171: None
[DEBUG]2024-04-10 05:04:56,171: None
[DEBUG]2024-04-10 05:04:56,171: None
[DEBUG]2024-04-10 05:04:56,171: None
[DEBUG]2024-04-10 05:04:56,171: None
[DEBUG]2024-04-10 05:04:56,171: None
[DEBUG]2024-04-10 05:04:56,171: None
[DEBUG]2024-04-10 05:04:56,171: None
[DEBUG]2024-04-10 05:04:56,171: None
[DEBUG]2024-04-10 05:04:56,171: None
[DEBUG]2024-04-10 05:04:56,171: None
[DEBUG]2024-04-10 05:04:56,172: None
[DEBUG]2024-04-10 05:04:56,172: None
[DEBUG]2024-04-10 05:04:56,172: None
[DEBUG]2024-04-10 05:04:56,172: None
[DEBUG]2024-04-10 05:04:56,172: None
[DEBUG]2024-04-10 05:04:56,172: None
[DEBUG]2024-04-10 05:04:56,172: None
[DEBUG]2024-04-10 05:04:56,173: None
[DEBUG]2024-04-10 05:04:56,173: None
[DEBUG]2024-04-10 05:04:56,173: None
[DEBUG]2024-04-10 05:04:56,173: None
[DEBUG]2024-04-10 05:04:56,173: None
[DEBUG]2024-04-10 05:04:56,173: None
[DEBUG]2024-04-10 05:04:56,173: None
[DEBUG]2024-04-10 05:04:56,173: None
[DEBUG]2024-04-10 05:04:56,173: None
[DEBUG]2024-04-10 05:04:56,173: None
[DEBUG]2024-04-10 05:04:56,173: None
[DEBUG]2024-04-10 05:04:56,173: None
[DEBUG]2024-04-10 05:04:56,173: None
[DEBUG]2024-04-10 05:04:56,173: None
[DEBUG]2024-04-10 05:04:56,173: None
[DEBUG]2024-04-10 05:04:56,173: None
[DEBUG]2024-04-10 05:04:56,173: None
[DEBUG]2024-04-10 05:04:56,173: None
[DEBUG]2024-04-10 05:04:56,173: None
[DEBUG]2024-04-10 05:04:56,173: None
[DEBUG]2024-04-10 05:04:56,173: None
[DEBUG]2024-04-10 05:04:56,173: None
[DEBUG]2024-04-10 05:04:56,173: None
[DEBUG]2024-04-10 05:04:56,173: None
[DEBUG]2024-04-10 05:04:56,173: None
[DEBUG]2024-04-10 05:04:56,173: None
[DEBUG]2024-04-10 05:04:56,173: None
[DEBUG]2024-04-10 05:04:56,174: None
[DEBUG]2024-04-10 05:04:56,174: None
[DEBUG]2024-04-10 05:04:56,174: None
[DEBUG]2024-04-10 05:04:56,174: None
[DEBUG]2024-04-10 05:04:56,174: None
[DEBUG]2024-04-10 05:04:56,174: None
[DEBUG]2024-04-10 05:04:56,174: None
[DEBUG]2024-04-10 05:04:56,174: None
[DEBUG]2024-04-10 05:04:56,174: None
[DEBUG]2024-04-10 05:04:56,174: None
[DEBUG]2024-04-10 05:04:56,174: None
[DEBUG]2024-04-10 05:04:56,176: None
[DEBUG]2024-04-10 05:04:56,176: None
[DEBUG]2024-04-10 05:04:56,176: None
[DEBUG]2024-04-10 05:04:56,176: None
[DEBUG]2024-04-10 05:04:56,176: None
[DEBUG]2024-04-10 05:04:56,176: None
[DEBUG]2024-04-10 05:04:56,176: None
[DEBUG]2024-04-10 05:04:56,176: None
[DEBUG]2024-04-10 05:04:56,176: None
[DEBUG]2024-04-10 05:04:56,176: None
[DEBUG]2024-04-10 05:04:56,176: None
[DEBUG]2024-04-10 05:04:56,176: None
[DEBUG]2024-04-10 05:04:56,176: None
[DEBUG]2024-04-10 05:04:56,176: None
[DEBUG]2024-04-10 05:04:56,176: None
[DEBUG]2024-04-10 05:04:56,176: None
[DEBUG]2024-04-10 05:04:56,176: None
[DEBUG]2024-04-10 05:04:56,176: None
[DEBUG]2024-04-10 05:04:56,176: None
[DEBUG]2024-04-10 05:04:56,176: None
[DEBUG]2024-04-10 05:04:56,176: None
[DEBUG]2024-04-10 05:04:56,176: None
[DEBUG]2024-04-10 05:04:56,176: None
[DEBUG]2024-04-10 05:04:56,176: None
[DEBUG]2024-04-10 05:04:56,176: None
[DEBUG]2024-04-10 05:04:56,177: None
[DEBUG]2024-04-10 05:04:56,177: None
[DEBUG]2024-04-10 05:04:56,177: None
[DEBUG]2024-04-10 05:04:56,177: None
[DEBUG]2024-04-10 05:04:56,177: None
[DEBUG]2024-04-10 05:04:56,177: None
[DEBUG]2024-04-10 05:04:56,177: None
[DEBUG]2024-04-10 05:04:56,177: None
[DEBUG]2024-04-10 05:04:56,177: None
[DEBUG]2024-04-10 05:04:56,177: None
[DEBUG]2024-04-10 05:04:56,177: None
[DEBUG]2024-04-10 05:04:56,177: None
[DEBUG]2024-04-10 05:04:56,177: None
[DEBUG]2024-04-10 05:04:56,177: None
[DEBUG]2024-04-10 05:04:56,178: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:04:56,178: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:04:56,178: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:04:56,178: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:04:56,178: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:04:56,178: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:04:56,178: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:04:56,178: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:04:56,178: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:04:56,178: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:04:56,178: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:04:56,178: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:04:56,178: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:04:56,178: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:04:56,178: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:04:56,178: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:04:56,178: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:04:56,178: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:04:56,178: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:04:56,178: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:04:56,178: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:04:56,178: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:04:56,178: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:04:56,178: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:04:56,178: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:04:56,178: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:04:56,178: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:04:56,178: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:04:56,178: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:04:56,178: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:04:56,179: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:04:56,179: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:04:56,179: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:04:56,179: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:04:56,179: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:04:56,179: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:04:56,179: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:04:56,179: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:04:56,179: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:04:56,179: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:04:56,179: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:04:56,179: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:04:56,179: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:04:56,179: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:04:56,179: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:04:56,181: None
[DEBUG]2024-04-10 05:04:56,181: None
[DEBUG]2024-04-10 05:04:56,181: None
[DEBUG]2024-04-10 05:04:56,181: None
[DEBUG]2024-04-10 05:04:56,181: None
[DEBUG]2024-04-10 05:04:56,181: None
[DEBUG]2024-04-10 05:04:56,181: None
[DEBUG]2024-04-10 05:04:56,181: None
[DEBUG]2024-04-10 05:04:56,181: None
[DEBUG]2024-04-10 05:04:56,181: None
[DEBUG]2024-04-10 05:04:56,181: None
[DEBUG]2024-04-10 05:04:56,181: None
[DEBUG]2024-04-10 05:04:56,181: None
[DEBUG]2024-04-10 05:04:56,181: None
[DEBUG]2024-04-10 05:04:56,181: None
[DEBUG]2024-04-10 05:04:56,181: None
[DEBUG]2024-04-10 05:04:56,182: None
[DEBUG]2024-04-10 05:04:56,182: None
[DEBUG]2024-04-10 05:04:56,182: None
[DEBUG]2024-04-10 05:04:56,182: None
[DEBUG]2024-04-10 05:04:56,182: None
[DEBUG]2024-04-10 05:04:56,182: None
[DEBUG]2024-04-10 05:04:56,182: None
[DEBUG]2024-04-10 05:04:56,182: None
[DEBUG]2024-04-10 05:04:56,182: None
[DEBUG]2024-04-10 05:04:56,182: None
[DEBUG]2024-04-10 05:04:56,182: None
[DEBUG]2024-04-10 05:04:56,182: None
[DEBUG]2024-04-10 05:04:56,182: None
[DEBUG]2024-04-10 05:04:56,182: None
[DEBUG]2024-04-10 05:04:56,182: None
[DEBUG]2024-04-10 05:04:56,182: None
[DEBUG]2024-04-10 05:04:56,182: None
[DEBUG]2024-04-10 05:05:38,636: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 05:05:38,636: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 05:05:38,636: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 05:05:38,638: None
[DEBUG]2024-04-10 05:05:38,638: None
[DEBUG]2024-04-10 05:05:38,639: None
[DEBUG]2024-04-10 05:05:38,639: None
[DEBUG]2024-04-10 05:05:38,639: None
[DEBUG]2024-04-10 05:05:38,640: None
[DEBUG]2024-04-10 05:05:38,640: None
[DEBUG]2024-04-10 05:05:38,640: None
[DEBUG]2024-04-10 05:05:38,640: None
[DEBUG]2024-04-10 05:05:38,640: None
[DEBUG]2024-04-10 05:05:38,640: None
[DEBUG]2024-04-10 05:05:38,640: None
[DEBUG]2024-04-10 05:05:38,640: None
[DEBUG]2024-04-10 05:05:38,640: None
[DEBUG]2024-04-10 05:05:38,641: None
[DEBUG]2024-04-10 05:05:38,641: None
[DEBUG]2024-04-10 05:05:38,641: None
[DEBUG]2024-04-10 05:05:38,641: None
[DEBUG]2024-04-10 05:05:38,641: None
[DEBUG]2024-04-10 05:05:38,641: None
[DEBUG]2024-04-10 05:05:38,642: None
[DEBUG]2024-04-10 05:05:38,642: None
[DEBUG]2024-04-10 05:05:38,642: None
[DEBUG]2024-04-10 05:05:38,642: None
[DEBUG]2024-04-10 05:05:38,642: None
[DEBUG]2024-04-10 05:05:38,642: None
[DEBUG]2024-04-10 05:05:38,642: None
[DEBUG]2024-04-10 05:05:38,642: None
[DEBUG]2024-04-10 05:05:38,642: None
[DEBUG]2024-04-10 05:05:38,642: None
[DEBUG]2024-04-10 05:05:38,642: None
[DEBUG]2024-04-10 05:05:38,642: None
[DEBUG]2024-04-10 05:05:38,642: None
[DEBUG]2024-04-10 05:05:38,642: None
[DEBUG]2024-04-10 05:05:38,642: None
[DEBUG]2024-04-10 05:05:38,643: None
[DEBUG]2024-04-10 05:05:38,643: None
[DEBUG]2024-04-10 05:05:38,643: None
[DEBUG]2024-04-10 05:05:38,643: None
[DEBUG]2024-04-10 05:05:38,643: None
[DEBUG]2024-04-10 05:05:38,643: None
[DEBUG]2024-04-10 05:05:38,643: None
[DEBUG]2024-04-10 05:05:38,643: None
[DEBUG]2024-04-10 05:05:38,643: None
[DEBUG]2024-04-10 05:05:38,644: None
[DEBUG]2024-04-10 05:05:38,644: None
[DEBUG]2024-04-10 05:05:38,644: None
[DEBUG]2024-04-10 05:05:38,644: None
[DEBUG]2024-04-10 05:05:38,644: None
[DEBUG]2024-04-10 05:05:38,644: None
[DEBUG]2024-04-10 05:05:38,644: None
[DEBUG]2024-04-10 05:05:38,644: None
[DEBUG]2024-04-10 05:05:38,644: None
[DEBUG]2024-04-10 05:05:38,644: None
[DEBUG]2024-04-10 05:05:38,645: None
[DEBUG]2024-04-10 05:05:38,645: None
[DEBUG]2024-04-10 05:05:38,645: None
[DEBUG]2024-04-10 05:05:38,645: None
[DEBUG]2024-04-10 05:05:38,645: None
[DEBUG]2024-04-10 05:05:38,645: None
[DEBUG]2024-04-10 05:05:38,645: None
[DEBUG]2024-04-10 05:05:38,645: None
[DEBUG]2024-04-10 05:05:38,645: None
[DEBUG]2024-04-10 05:05:38,645: None
[DEBUG]2024-04-10 05:05:38,645: None
[DEBUG]2024-04-10 05:05:38,646: None
[DEBUG]2024-04-10 05:05:38,646: None
[DEBUG]2024-04-10 05:05:38,646: None
[DEBUG]2024-04-10 05:05:38,646: None
[DEBUG]2024-04-10 05:05:38,646: None
[DEBUG]2024-04-10 05:05:38,646: None
[DEBUG]2024-04-10 05:05:38,646: None
[DEBUG]2024-04-10 05:05:38,646: None
[DEBUG]2024-04-10 05:05:38,646: None
[DEBUG]2024-04-10 05:05:38,646: None
[DEBUG]2024-04-10 05:05:38,646: None
[DEBUG]2024-04-10 05:05:38,646: None
[DEBUG]2024-04-10 05:05:38,647: None
[DEBUG]2024-04-10 05:05:38,647: None
[DEBUG]2024-04-10 05:05:38,647: None
[DEBUG]2024-04-10 05:05:38,647: None
[DEBUG]2024-04-10 05:05:38,647: None
[DEBUG]2024-04-10 05:05:38,647: None
[DEBUG]2024-04-10 05:05:38,647: None
[DEBUG]2024-04-10 05:05:38,647: None
[DEBUG]2024-04-10 05:05:38,647: None
[DEBUG]2024-04-10 05:05:38,647: None
[DEBUG]2024-04-10 05:05:38,647: None
[DEBUG]2024-04-10 05:05:38,647: None
[DEBUG]2024-04-10 05:05:38,647: None
[DEBUG]2024-04-10 05:05:38,648: None
[DEBUG]2024-04-10 05:05:38,648: None
[DEBUG]2024-04-10 05:05:38,648: None
[DEBUG]2024-04-10 05:05:38,648: None
[DEBUG]2024-04-10 05:05:38,648: None
[DEBUG]2024-04-10 05:05:38,648: None
[DEBUG]2024-04-10 05:05:38,648: None
[DEBUG]2024-04-10 05:05:38,648: None
[DEBUG]2024-04-10 05:05:38,648: None
[DEBUG]2024-04-10 05:05:38,648: None
[DEBUG]2024-04-10 05:05:38,648: None
[DEBUG]2024-04-10 05:05:38,648: None
[DEBUG]2024-04-10 05:05:38,648: None
[DEBUG]2024-04-10 05:05:38,648: None
[DEBUG]2024-04-10 05:05:38,649: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:05:38,649: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:05:38,649: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:05:38,649: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:05:38,649: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:05:38,649: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:05:38,649: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:05:38,649: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:05:38,649: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:05:38,649: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:05:38,649: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:05:38,649: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:05:38,649: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:05:38,649: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:05:38,649: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:05:38,649: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:05:38,649: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:05:38,649: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:05:38,649: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:05:38,649: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:05:38,649: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:05:38,649: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:05:38,649: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:05:38,649: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:05:38,649: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:05:38,649: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:05:38,649: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:05:38,649: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:05:38,649: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:05:38,649: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:05:38,650: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:05:38,650: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:05:38,650: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:05:38,650: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:05:38,650: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:05:38,650: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:05:38,650: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:05:38,650: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:05:38,650: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:05:38,650: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:05:38,650: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:05:38,650: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:05:38,650: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:05:38,650: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:05:38,650: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:05:38,651: None
[DEBUG]2024-04-10 05:05:38,651: None
[DEBUG]2024-04-10 05:05:38,651: None
[DEBUG]2024-04-10 05:05:38,651: None
[DEBUG]2024-04-10 05:05:38,651: None
[DEBUG]2024-04-10 05:05:38,651: None
[DEBUG]2024-04-10 05:05:38,651: None
[DEBUG]2024-04-10 05:05:38,651: None
[DEBUG]2024-04-10 05:05:38,651: None
[DEBUG]2024-04-10 05:05:38,651: None
[DEBUG]2024-04-10 05:05:38,651: None
[DEBUG]2024-04-10 05:05:38,651: None
[DEBUG]2024-04-10 05:05:38,651: None
[DEBUG]2024-04-10 05:05:38,651: None
[DEBUG]2024-04-10 05:05:38,651: None
[DEBUG]2024-04-10 05:05:38,651: None
[DEBUG]2024-04-10 05:05:38,652: None
[DEBUG]2024-04-10 05:05:38,652: None
[DEBUG]2024-04-10 05:05:38,652: None
[DEBUG]2024-04-10 05:05:38,652: None
[DEBUG]2024-04-10 05:05:38,652: None
[DEBUG]2024-04-10 05:05:38,652: None
[DEBUG]2024-04-10 05:05:38,652: None
[DEBUG]2024-04-10 05:05:38,652: None
[DEBUG]2024-04-10 05:05:38,652: None
[DEBUG]2024-04-10 05:05:38,652: None
[DEBUG]2024-04-10 05:05:38,652: None
[DEBUG]2024-04-10 05:05:38,652: None
[DEBUG]2024-04-10 05:05:38,652: None
[DEBUG]2024-04-10 05:05:38,652: None
[DEBUG]2024-04-10 05:05:38,652: None
[DEBUG]2024-04-10 05:05:38,652: None
[DEBUG]2024-04-10 05:05:38,652: None
[DEBUG]2024-04-10 05:05:54,797: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 05:05:54,797: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 05:05:54,797: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 05:05:54,799: None
[DEBUG]2024-04-10 05:05:54,799: None
[DEBUG]2024-04-10 05:05:54,800: None
[DEBUG]2024-04-10 05:05:54,800: None
[DEBUG]2024-04-10 05:05:54,800: None
[DEBUG]2024-04-10 05:05:54,800: None
[DEBUG]2024-04-10 05:05:54,800: None
[DEBUG]2024-04-10 05:05:54,800: None
[DEBUG]2024-04-10 05:05:54,800: None
[DEBUG]2024-04-10 05:05:54,801: None
[DEBUG]2024-04-10 05:05:54,801: None
[DEBUG]2024-04-10 05:05:54,801: None
[DEBUG]2024-04-10 05:05:54,801: None
[DEBUG]2024-04-10 05:05:54,801: None
[DEBUG]2024-04-10 05:05:54,802: None
[DEBUG]2024-04-10 05:05:54,802: None
[DEBUG]2024-04-10 05:05:54,802: None
[DEBUG]2024-04-10 05:05:54,802: None
[DEBUG]2024-04-10 05:05:54,802: None
[DEBUG]2024-04-10 05:05:54,802: None
[DEBUG]2024-04-10 05:05:54,802: None
[DEBUG]2024-04-10 05:05:54,802: None
[DEBUG]2024-04-10 05:05:54,802: None
[DEBUG]2024-04-10 05:05:54,802: None
[DEBUG]2024-04-10 05:05:54,802: None
[DEBUG]2024-04-10 05:05:54,802: None
[DEBUG]2024-04-10 05:05:54,802: None
[DEBUG]2024-04-10 05:05:54,804: None
[DEBUG]2024-04-10 05:05:54,804: None
[DEBUG]2024-04-10 05:05:54,804: None
[DEBUG]2024-04-10 05:05:54,804: None
[DEBUG]2024-04-10 05:05:54,804: None
[DEBUG]2024-04-10 05:05:54,804: None
[DEBUG]2024-04-10 05:05:54,804: None
[DEBUG]2024-04-10 05:05:54,804: None
[DEBUG]2024-04-10 05:05:54,804: None
[DEBUG]2024-04-10 05:05:54,804: None
[DEBUG]2024-04-10 05:05:54,804: None
[DEBUG]2024-04-10 05:05:54,804: None
[DEBUG]2024-04-10 05:05:54,804: None
[DEBUG]2024-04-10 05:05:54,804: None
[DEBUG]2024-04-10 05:05:54,804: None
[DEBUG]2024-04-10 05:05:54,804: None
[DEBUG]2024-04-10 05:05:54,804: None
[DEBUG]2024-04-10 05:05:54,805: None
[DEBUG]2024-04-10 05:05:54,805: None
[DEBUG]2024-04-10 05:05:54,805: None
[DEBUG]2024-04-10 05:05:54,805: None
[DEBUG]2024-04-10 05:05:54,805: None
[DEBUG]2024-04-10 05:05:54,805: None
[DEBUG]2024-04-10 05:05:54,805: None
[DEBUG]2024-04-10 05:05:54,805: None
[DEBUG]2024-04-10 05:05:54,805: None
[DEBUG]2024-04-10 05:05:54,805: None
[DEBUG]2024-04-10 05:05:54,806: None
[DEBUG]2024-04-10 05:05:54,806: None
[DEBUG]2024-04-10 05:05:54,806: None
[DEBUG]2024-04-10 05:05:54,806: None
[DEBUG]2024-04-10 05:05:54,806: None
[DEBUG]2024-04-10 05:05:54,806: None
[DEBUG]2024-04-10 05:05:54,806: None
[DEBUG]2024-04-10 05:05:54,806: None
[DEBUG]2024-04-10 05:05:54,806: None
[DEBUG]2024-04-10 05:05:54,806: None
[DEBUG]2024-04-10 05:05:54,806: None
[DEBUG]2024-04-10 05:05:54,807: None
[DEBUG]2024-04-10 05:05:54,807: None
[DEBUG]2024-04-10 05:05:54,807: None
[DEBUG]2024-04-10 05:05:54,807: None
[DEBUG]2024-04-10 05:05:54,807: None
[DEBUG]2024-04-10 05:05:54,807: None
[DEBUG]2024-04-10 05:05:54,807: None
[DEBUG]2024-04-10 05:05:54,807: None
[DEBUG]2024-04-10 05:05:54,807: None
[DEBUG]2024-04-10 05:05:54,807: None
[DEBUG]2024-04-10 05:05:54,807: None
[DEBUG]2024-04-10 05:05:54,807: None
[DEBUG]2024-04-10 05:05:54,808: None
[DEBUG]2024-04-10 05:05:54,808: None
[DEBUG]2024-04-10 05:05:54,808: None
[DEBUG]2024-04-10 05:05:54,808: None
[DEBUG]2024-04-10 05:05:54,808: None
[DEBUG]2024-04-10 05:05:54,808: None
[DEBUG]2024-04-10 05:05:54,808: None
[DEBUG]2024-04-10 05:05:54,808: None
[DEBUG]2024-04-10 05:05:54,808: None
[DEBUG]2024-04-10 05:05:54,808: None
[DEBUG]2024-04-10 05:05:54,808: None
[DEBUG]2024-04-10 05:05:54,808: None
[DEBUG]2024-04-10 05:05:54,808: None
[DEBUG]2024-04-10 05:05:54,809: None
[DEBUG]2024-04-10 05:05:54,809: None
[DEBUG]2024-04-10 05:05:54,809: None
[DEBUG]2024-04-10 05:05:54,809: None
[DEBUG]2024-04-10 05:05:54,809: None
[DEBUG]2024-04-10 05:05:54,809: None
[DEBUG]2024-04-10 05:05:54,809: None
[DEBUG]2024-04-10 05:05:54,809: None
[DEBUG]2024-04-10 05:05:54,809: None
[DEBUG]2024-04-10 05:05:54,809: None
[DEBUG]2024-04-10 05:05:54,809: None
[DEBUG]2024-04-10 05:05:54,809: None
[DEBUG]2024-04-10 05:05:54,809: None
[DEBUG]2024-04-10 05:05:54,809: None
[DEBUG]2024-04-10 05:05:54,810: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:05:54,810: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:05:54,810: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:05:54,810: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:05:54,810: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:05:54,810: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:05:54,810: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:05:54,810: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:05:54,810: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:05:54,810: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:05:54,810: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:05:54,810: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:05:54,810: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:05:54,810: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:05:54,810: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:05:54,810: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:05:54,810: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:05:54,810: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:05:54,810: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:05:54,810: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:05:54,810: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:05:54,810: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:05:54,810: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:05:54,810: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:05:54,810: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:05:54,810: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:05:54,810: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:05:54,810: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:05:54,810: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:05:54,810: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:05:54,811: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:05:54,811: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:05:54,811: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:05:54,811: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:05:54,811: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:05:54,811: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:05:54,811: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:05:54,811: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:05:54,811: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:05:54,811: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:05:54,811: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:05:54,811: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:05:54,811: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:05:54,811: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:05:54,811: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:05:54,812: None
[DEBUG]2024-04-10 05:05:54,812: None
[DEBUG]2024-04-10 05:05:54,812: None
[DEBUG]2024-04-10 05:05:54,812: None
[DEBUG]2024-04-10 05:05:54,812: None
[DEBUG]2024-04-10 05:05:54,812: None
[DEBUG]2024-04-10 05:05:54,812: None
[DEBUG]2024-04-10 05:05:54,812: None
[DEBUG]2024-04-10 05:05:54,812: None
[DEBUG]2024-04-10 05:05:54,812: None
[DEBUG]2024-04-10 05:05:54,812: None
[DEBUG]2024-04-10 05:05:54,812: None
[DEBUG]2024-04-10 05:05:54,812: None
[DEBUG]2024-04-10 05:05:54,812: None
[DEBUG]2024-04-10 05:05:54,812: None
[DEBUG]2024-04-10 05:05:54,812: None
[DEBUG]2024-04-10 05:05:54,813: None
[DEBUG]2024-04-10 05:05:54,813: None
[DEBUG]2024-04-10 05:05:54,813: None
[DEBUG]2024-04-10 05:05:54,813: None
[DEBUG]2024-04-10 05:05:54,813: None
[DEBUG]2024-04-10 05:05:54,813: None
[DEBUG]2024-04-10 05:05:54,813: None
[DEBUG]2024-04-10 05:05:54,813: None
[DEBUG]2024-04-10 05:05:54,813: None
[DEBUG]2024-04-10 05:05:54,813: None
[DEBUG]2024-04-10 05:05:54,813: None
[DEBUG]2024-04-10 05:05:54,813: None
[DEBUG]2024-04-10 05:05:54,813: None
[DEBUG]2024-04-10 05:05:54,813: None
[DEBUG]2024-04-10 05:05:54,813: None
[DEBUG]2024-04-10 05:05:54,813: None
[DEBUG]2024-04-10 05:05:54,813: None
[DEBUG]2024-04-10 05:06:46,400: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 05:06:46,400: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 05:06:46,401: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 05:06:46,402: None
[DEBUG]2024-04-10 05:06:46,402: None
[DEBUG]2024-04-10 05:06:46,403: None
[DEBUG]2024-04-10 05:06:46,403: None
[DEBUG]2024-04-10 05:06:46,403: None
[DEBUG]2024-04-10 05:06:46,404: None
[DEBUG]2024-04-10 05:06:46,404: None
[DEBUG]2024-04-10 05:06:46,404: None
[DEBUG]2024-04-10 05:06:46,404: None
[DEBUG]2024-04-10 05:06:46,404: None
[DEBUG]2024-04-10 05:06:46,404: None
[DEBUG]2024-04-10 05:06:46,404: None
[DEBUG]2024-04-10 05:06:46,404: None
[DEBUG]2024-04-10 05:06:46,404: None
[DEBUG]2024-04-10 05:06:46,405: None
[DEBUG]2024-04-10 05:06:46,405: None
[DEBUG]2024-04-10 05:06:46,405: None
[DEBUG]2024-04-10 05:06:46,405: None
[DEBUG]2024-04-10 05:06:46,405: None
[DEBUG]2024-04-10 05:06:46,405: None
[DEBUG]2024-04-10 05:06:46,406: None
[DEBUG]2024-04-10 05:06:46,406: None
[DEBUG]2024-04-10 05:06:46,406: None
[DEBUG]2024-04-10 05:06:46,406: None
[DEBUG]2024-04-10 05:06:46,406: None
[DEBUG]2024-04-10 05:06:46,406: None
[DEBUG]2024-04-10 05:06:46,406: None
[DEBUG]2024-04-10 05:06:46,407: None
[DEBUG]2024-04-10 05:06:46,407: None
[DEBUG]2024-04-10 05:06:46,407: None
[DEBUG]2024-04-10 05:06:46,407: None
[DEBUG]2024-04-10 05:06:46,407: None
[DEBUG]2024-04-10 05:06:46,407: None
[DEBUG]2024-04-10 05:06:46,407: None
[DEBUG]2024-04-10 05:06:46,407: None
[DEBUG]2024-04-10 05:06:46,407: None
[DEBUG]2024-04-10 05:06:46,407: None
[DEBUG]2024-04-10 05:06:46,407: None
[DEBUG]2024-04-10 05:06:46,407: None
[DEBUG]2024-04-10 05:06:46,407: None
[DEBUG]2024-04-10 05:06:46,407: None
[DEBUG]2024-04-10 05:06:46,407: None
[DEBUG]2024-04-10 05:06:46,407: None
[DEBUG]2024-04-10 05:06:46,407: None
[DEBUG]2024-04-10 05:06:46,408: None
[DEBUG]2024-04-10 05:06:46,408: None
[DEBUG]2024-04-10 05:06:46,408: None
[DEBUG]2024-04-10 05:06:46,408: None
[DEBUG]2024-04-10 05:06:46,408: None
[DEBUG]2024-04-10 05:06:46,408: None
[DEBUG]2024-04-10 05:06:46,408: None
[DEBUG]2024-04-10 05:06:46,408: None
[DEBUG]2024-04-10 05:06:46,408: None
[DEBUG]2024-04-10 05:06:46,408: None
[DEBUG]2024-04-10 05:06:46,409: None
[DEBUG]2024-04-10 05:06:46,409: None
[DEBUG]2024-04-10 05:06:46,409: None
[DEBUG]2024-04-10 05:06:46,409: None
[DEBUG]2024-04-10 05:06:46,409: None
[DEBUG]2024-04-10 05:06:46,409: None
[DEBUG]2024-04-10 05:06:46,409: None
[DEBUG]2024-04-10 05:06:46,409: None
[DEBUG]2024-04-10 05:06:46,409: None
[DEBUG]2024-04-10 05:06:46,409: None
[DEBUG]2024-04-10 05:06:46,409: None
[DEBUG]2024-04-10 05:06:46,410: None
[DEBUG]2024-04-10 05:06:46,410: None
[DEBUG]2024-04-10 05:06:46,410: None
[DEBUG]2024-04-10 05:06:46,410: None
[DEBUG]2024-04-10 05:06:46,410: None
[DEBUG]2024-04-10 05:06:46,410: None
[DEBUG]2024-04-10 05:06:46,410: None
[DEBUG]2024-04-10 05:06:46,410: None
[DEBUG]2024-04-10 05:06:46,410: None
[DEBUG]2024-04-10 05:06:46,410: None
[DEBUG]2024-04-10 05:06:46,410: None
[DEBUG]2024-04-10 05:06:46,410: None
[DEBUG]2024-04-10 05:06:46,411: None
[DEBUG]2024-04-10 05:06:46,411: None
[DEBUG]2024-04-10 05:06:46,411: None
[DEBUG]2024-04-10 05:06:46,411: None
[DEBUG]2024-04-10 05:06:46,411: None
[DEBUG]2024-04-10 05:06:46,411: None
[DEBUG]2024-04-10 05:06:46,411: None
[DEBUG]2024-04-10 05:06:46,411: None
[DEBUG]2024-04-10 05:06:46,411: None
[DEBUG]2024-04-10 05:06:46,411: None
[DEBUG]2024-04-10 05:06:46,411: None
[DEBUG]2024-04-10 05:06:46,411: None
[DEBUG]2024-04-10 05:06:46,411: None
[DEBUG]2024-04-10 05:06:46,412: None
[DEBUG]2024-04-10 05:06:46,412: None
[DEBUG]2024-04-10 05:06:46,412: None
[DEBUG]2024-04-10 05:06:46,412: None
[DEBUG]2024-04-10 05:06:46,412: None
[DEBUG]2024-04-10 05:06:46,412: None
[DEBUG]2024-04-10 05:06:46,412: None
[DEBUG]2024-04-10 05:06:46,412: None
[DEBUG]2024-04-10 05:06:46,412: None
[DEBUG]2024-04-10 05:06:46,412: None
[DEBUG]2024-04-10 05:06:46,412: None
[DEBUG]2024-04-10 05:06:46,412: None
[DEBUG]2024-04-10 05:06:46,412: None
[DEBUG]2024-04-10 05:06:46,412: None
[DEBUG]2024-04-10 05:06:46,413: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:06:46,413: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:06:46,413: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:06:46,413: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:06:46,413: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:06:46,413: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:06:46,413: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:06:46,413: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:06:46,413: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:06:46,413: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:06:46,413: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:06:46,413: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:06:46,413: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:06:46,413: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:06:46,413: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:06:46,413: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:06:46,413: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:06:46,413: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:06:46,413: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:06:46,413: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:06:46,413: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:06:46,413: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:06:46,413: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:06:46,413: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:06:46,413: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:06:46,413: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:06:46,413: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:06:46,413: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:06:46,413: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:06:46,413: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:06:46,414: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:06:46,414: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:06:46,414: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:06:46,414: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:06:46,414: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:06:46,414: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:06:46,414: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:06:46,414: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:06:46,414: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:06:46,414: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:06:46,414: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:06:46,414: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:06:46,414: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:06:46,414: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:06:46,414: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:06:46,415: None
[DEBUG]2024-04-10 05:06:46,415: None
[DEBUG]2024-04-10 05:06:46,415: None
[DEBUG]2024-04-10 05:06:46,415: None
[DEBUG]2024-04-10 05:06:46,415: None
[DEBUG]2024-04-10 05:06:46,415: None
[DEBUG]2024-04-10 05:06:46,415: None
[DEBUG]2024-04-10 05:06:46,415: None
[DEBUG]2024-04-10 05:06:46,415: None
[DEBUG]2024-04-10 05:06:46,415: None
[DEBUG]2024-04-10 05:06:46,415: None
[DEBUG]2024-04-10 05:06:46,415: None
[DEBUG]2024-04-10 05:06:46,415: None
[DEBUG]2024-04-10 05:06:46,415: None
[DEBUG]2024-04-10 05:06:46,415: None
[DEBUG]2024-04-10 05:06:46,415: None
[DEBUG]2024-04-10 05:06:46,416: None
[DEBUG]2024-04-10 05:06:46,416: None
[DEBUG]2024-04-10 05:06:46,416: None
[DEBUG]2024-04-10 05:06:46,416: None
[DEBUG]2024-04-10 05:06:46,416: None
[DEBUG]2024-04-10 05:06:46,416: None
[DEBUG]2024-04-10 05:06:46,416: None
[DEBUG]2024-04-10 05:06:46,416: None
[DEBUG]2024-04-10 05:06:46,416: None
[DEBUG]2024-04-10 05:06:46,416: None
[DEBUG]2024-04-10 05:06:46,416: None
[DEBUG]2024-04-10 05:06:46,416: None
[DEBUG]2024-04-10 05:06:46,416: None
[DEBUG]2024-04-10 05:06:46,416: None
[DEBUG]2024-04-10 05:06:46,416: None
[DEBUG]2024-04-10 05:06:46,416: None
[DEBUG]2024-04-10 05:06:46,416: None
[DEBUG]2024-04-10 05:06:54,313: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 05:06:54,313: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 05:06:54,313: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 05:06:54,315: None
[DEBUG]2024-04-10 05:06:54,315: None
[DEBUG]2024-04-10 05:06:54,316: None
[DEBUG]2024-04-10 05:06:54,316: None
[DEBUG]2024-04-10 05:06:54,316: None
[DEBUG]2024-04-10 05:06:54,316: None
[DEBUG]2024-04-10 05:06:54,316: None
[DEBUG]2024-04-10 05:06:54,316: None
[DEBUG]2024-04-10 05:06:54,316: None
[DEBUG]2024-04-10 05:06:54,317: None
[DEBUG]2024-04-10 05:06:54,317: None
[DEBUG]2024-04-10 05:06:54,317: None
[DEBUG]2024-04-10 05:06:54,317: None
[DEBUG]2024-04-10 05:06:54,317: None
[DEBUG]2024-04-10 05:06:54,318: None
[DEBUG]2024-04-10 05:06:54,318: None
[DEBUG]2024-04-10 05:06:54,318: None
[DEBUG]2024-04-10 05:06:54,318: None
[DEBUG]2024-04-10 05:06:54,318: None
[DEBUG]2024-04-10 05:06:54,318: None
[DEBUG]2024-04-10 05:06:54,318: None
[DEBUG]2024-04-10 05:06:54,318: None
[DEBUG]2024-04-10 05:06:54,318: None
[DEBUG]2024-04-10 05:06:54,318: None
[DEBUG]2024-04-10 05:06:54,318: None
[DEBUG]2024-04-10 05:06:54,318: None
[DEBUG]2024-04-10 05:06:54,318: None
[DEBUG]2024-04-10 05:06:54,319: None
[DEBUG]2024-04-10 05:06:54,319: None
[DEBUG]2024-04-10 05:06:54,319: None
[DEBUG]2024-04-10 05:06:54,319: None
[DEBUG]2024-04-10 05:06:54,319: None
[DEBUG]2024-04-10 05:06:54,319: None
[DEBUG]2024-04-10 05:06:54,319: None
[DEBUG]2024-04-10 05:06:54,319: None
[DEBUG]2024-04-10 05:06:54,320: None
[DEBUG]2024-04-10 05:06:54,320: None
[DEBUG]2024-04-10 05:06:54,320: None
[DEBUG]2024-04-10 05:06:54,320: None
[DEBUG]2024-04-10 05:06:54,320: None
[DEBUG]2024-04-10 05:06:54,320: None
[DEBUG]2024-04-10 05:06:54,320: None
[DEBUG]2024-04-10 05:06:54,320: None
[DEBUG]2024-04-10 05:06:54,320: None
[DEBUG]2024-04-10 05:06:54,321: None
[DEBUG]2024-04-10 05:06:54,321: None
[DEBUG]2024-04-10 05:06:54,321: None
[DEBUG]2024-04-10 05:06:54,321: None
[DEBUG]2024-04-10 05:06:54,321: None
[DEBUG]2024-04-10 05:06:54,321: None
[DEBUG]2024-04-10 05:06:54,321: None
[DEBUG]2024-04-10 05:06:54,321: None
[DEBUG]2024-04-10 05:06:54,321: None
[DEBUG]2024-04-10 05:06:54,321: None
[DEBUG]2024-04-10 05:06:54,322: None
[DEBUG]2024-04-10 05:06:54,322: None
[DEBUG]2024-04-10 05:06:54,322: None
[DEBUG]2024-04-10 05:06:54,322: None
[DEBUG]2024-04-10 05:06:54,322: None
[DEBUG]2024-04-10 05:06:54,322: None
[DEBUG]2024-04-10 05:06:54,322: None
[DEBUG]2024-04-10 05:06:54,322: None
[DEBUG]2024-04-10 05:06:54,322: None
[DEBUG]2024-04-10 05:06:54,322: None
[DEBUG]2024-04-10 05:06:54,322: None
[DEBUG]2024-04-10 05:06:54,322: None
[DEBUG]2024-04-10 05:06:54,322: None
[DEBUG]2024-04-10 05:06:54,322: None
[DEBUG]2024-04-10 05:06:54,322: None
[DEBUG]2024-04-10 05:06:54,322: None
[DEBUG]2024-04-10 05:06:54,322: None
[DEBUG]2024-04-10 05:06:54,322: None
[DEBUG]2024-04-10 05:06:54,322: None
[DEBUG]2024-04-10 05:06:54,322: None
[DEBUG]2024-04-10 05:06:54,322: None
[DEBUG]2024-04-10 05:06:54,322: None
[DEBUG]2024-04-10 05:06:54,322: None
[DEBUG]2024-04-10 05:06:54,323: None
[DEBUG]2024-04-10 05:06:54,323: None
[DEBUG]2024-04-10 05:06:54,323: None
[DEBUG]2024-04-10 05:06:54,323: None
[DEBUG]2024-04-10 05:06:54,323: None
[DEBUG]2024-04-10 05:06:54,323: None
[DEBUG]2024-04-10 05:06:54,323: None
[DEBUG]2024-04-10 05:06:54,323: None
[DEBUG]2024-04-10 05:06:54,323: None
[DEBUG]2024-04-10 05:06:54,323: None
[DEBUG]2024-04-10 05:06:54,323: None
[DEBUG]2024-04-10 05:06:54,323: None
[DEBUG]2024-04-10 05:06:54,323: None
[DEBUG]2024-04-10 05:06:54,324: None
[DEBUG]2024-04-10 05:06:54,324: None
[DEBUG]2024-04-10 05:06:54,324: None
[DEBUG]2024-04-10 05:06:54,324: None
[DEBUG]2024-04-10 05:06:54,324: None
[DEBUG]2024-04-10 05:06:54,324: None
[DEBUG]2024-04-10 05:06:54,324: None
[DEBUG]2024-04-10 05:06:54,324: None
[DEBUG]2024-04-10 05:06:54,324: None
[DEBUG]2024-04-10 05:06:54,324: None
[DEBUG]2024-04-10 05:06:54,324: None
[DEBUG]2024-04-10 05:06:54,324: None
[DEBUG]2024-04-10 05:06:54,324: None
[DEBUG]2024-04-10 05:06:54,324: None
[DEBUG]2024-04-10 05:06:54,325: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:06:54,325: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:06:54,325: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:06:54,325: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:06:54,325: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:06:54,325: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:06:54,325: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:06:54,325: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:06:54,325: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:06:54,325: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:06:54,325: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:06:54,325: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:06:54,325: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:06:54,325: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:06:54,325: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:06:54,325: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:06:54,325: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:06:54,325: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:06:54,325: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:06:54,325: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:06:54,325: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:06:54,325: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:06:54,325: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:06:54,325: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:06:54,325: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:06:54,325: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:06:54,325: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:06:54,325: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:06:54,325: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:06:54,325: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:06:54,326: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:06:54,326: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:06:54,326: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:06:54,326: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:06:54,326: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:06:54,326: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:06:54,326: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:06:54,326: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:06:54,326: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:06:54,326: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:06:54,326: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:06:54,326: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:06:54,326: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:06:54,326: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:06:54,326: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:06:54,327: None
[DEBUG]2024-04-10 05:06:54,327: None
[DEBUG]2024-04-10 05:06:54,327: None
[DEBUG]2024-04-10 05:06:54,327: None
[DEBUG]2024-04-10 05:06:54,327: None
[DEBUG]2024-04-10 05:06:54,327: None
[DEBUG]2024-04-10 05:06:54,327: None
[DEBUG]2024-04-10 05:06:54,327: None
[DEBUG]2024-04-10 05:06:54,327: None
[DEBUG]2024-04-10 05:06:54,327: None
[DEBUG]2024-04-10 05:06:54,327: None
[DEBUG]2024-04-10 05:06:54,327: None
[DEBUG]2024-04-10 05:06:54,327: None
[DEBUG]2024-04-10 05:06:54,327: None
[DEBUG]2024-04-10 05:06:54,327: None
[DEBUG]2024-04-10 05:06:54,327: None
[DEBUG]2024-04-10 05:06:54,328: None
[DEBUG]2024-04-10 05:06:54,328: None
[DEBUG]2024-04-10 05:06:54,328: None
[DEBUG]2024-04-10 05:06:54,328: None
[DEBUG]2024-04-10 05:06:54,328: None
[DEBUG]2024-04-10 05:06:54,328: None
[DEBUG]2024-04-10 05:06:54,328: None
[DEBUG]2024-04-10 05:06:54,328: None
[DEBUG]2024-04-10 05:06:54,328: None
[DEBUG]2024-04-10 05:06:54,328: None
[DEBUG]2024-04-10 05:06:54,328: None
[DEBUG]2024-04-10 05:06:54,328: None
[DEBUG]2024-04-10 05:06:54,328: None
[DEBUG]2024-04-10 05:06:54,328: None
[DEBUG]2024-04-10 05:06:54,328: None
[DEBUG]2024-04-10 05:06:54,328: None
[DEBUG]2024-04-10 05:06:54,328: None
[DEBUG]2024-04-10 05:09:36,809: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 05:09:36,809: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 05:09:36,809: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 05:09:36,811: None
[DEBUG]2024-04-10 05:09:36,811: None
[DEBUG]2024-04-10 05:09:36,812: None
[DEBUG]2024-04-10 05:09:36,812: None
[DEBUG]2024-04-10 05:09:36,812: None
[DEBUG]2024-04-10 05:09:36,812: None
[DEBUG]2024-04-10 05:09:36,812: None
[DEBUG]2024-04-10 05:09:36,812: None
[DEBUG]2024-04-10 05:09:36,812: None
[DEBUG]2024-04-10 05:09:36,813: None
[DEBUG]2024-04-10 05:09:36,813: None
[DEBUG]2024-04-10 05:09:36,813: None
[DEBUG]2024-04-10 05:09:36,813: None
[DEBUG]2024-04-10 05:09:36,813: None
[DEBUG]2024-04-10 05:09:36,814: None
[DEBUG]2024-04-10 05:09:36,814: None
[DEBUG]2024-04-10 05:09:36,814: None
[DEBUG]2024-04-10 05:09:36,814: None
[DEBUG]2024-04-10 05:09:36,814: None
[DEBUG]2024-04-10 05:09:36,814: None
[DEBUG]2024-04-10 05:09:36,814: None
[DEBUG]2024-04-10 05:09:36,814: None
[DEBUG]2024-04-10 05:09:36,814: None
[DEBUG]2024-04-10 05:09:36,814: None
[DEBUG]2024-04-10 05:09:36,814: None
[DEBUG]2024-04-10 05:09:36,814: None
[DEBUG]2024-04-10 05:09:36,814: None
[DEBUG]2024-04-10 05:09:36,815: None
[DEBUG]2024-04-10 05:09:36,815: None
[DEBUG]2024-04-10 05:09:36,815: None
[DEBUG]2024-04-10 05:09:36,815: None
[DEBUG]2024-04-10 05:09:36,815: None
[DEBUG]2024-04-10 05:09:36,815: None
[DEBUG]2024-04-10 05:09:36,815: None
[DEBUG]2024-04-10 05:09:36,815: None
[DEBUG]2024-04-10 05:09:36,816: None
[DEBUG]2024-04-10 05:09:36,816: None
[DEBUG]2024-04-10 05:09:36,816: None
[DEBUG]2024-04-10 05:09:36,816: None
[DEBUG]2024-04-10 05:09:36,816: None
[DEBUG]2024-04-10 05:09:36,816: None
[DEBUG]2024-04-10 05:09:36,816: None
[DEBUG]2024-04-10 05:09:36,816: None
[DEBUG]2024-04-10 05:09:36,816: None
[DEBUG]2024-04-10 05:09:36,817: None
[DEBUG]2024-04-10 05:09:36,817: None
[DEBUG]2024-04-10 05:09:36,817: None
[DEBUG]2024-04-10 05:09:36,817: None
[DEBUG]2024-04-10 05:09:36,817: None
[DEBUG]2024-04-10 05:09:36,817: None
[DEBUG]2024-04-10 05:09:36,817: None
[DEBUG]2024-04-10 05:09:36,817: None
[DEBUG]2024-04-10 05:09:36,817: None
[DEBUG]2024-04-10 05:09:36,817: None
[DEBUG]2024-04-10 05:09:36,818: None
[DEBUG]2024-04-10 05:09:36,818: None
[DEBUG]2024-04-10 05:09:36,818: None
[DEBUG]2024-04-10 05:09:36,818: None
[DEBUG]2024-04-10 05:09:36,818: None
[DEBUG]2024-04-10 05:09:36,818: None
[DEBUG]2024-04-10 05:09:36,818: None
[DEBUG]2024-04-10 05:09:36,818: None
[DEBUG]2024-04-10 05:09:36,818: None
[DEBUG]2024-04-10 05:09:36,818: None
[DEBUG]2024-04-10 05:09:36,818: None
[DEBUG]2024-04-10 05:09:36,819: None
[DEBUG]2024-04-10 05:09:36,819: None
[DEBUG]2024-04-10 05:09:36,819: None
[DEBUG]2024-04-10 05:09:36,819: None
[DEBUG]2024-04-10 05:09:36,819: None
[DEBUG]2024-04-10 05:09:36,819: None
[DEBUG]2024-04-10 05:09:36,819: None
[DEBUG]2024-04-10 05:09:36,819: None
[DEBUG]2024-04-10 05:09:36,819: None
[DEBUG]2024-04-10 05:09:36,819: None
[DEBUG]2024-04-10 05:09:36,819: None
[DEBUG]2024-04-10 05:09:36,819: None
[DEBUG]2024-04-10 05:09:36,820: None
[DEBUG]2024-04-10 05:09:36,820: None
[DEBUG]2024-04-10 05:09:36,820: None
[DEBUG]2024-04-10 05:09:36,820: None
[DEBUG]2024-04-10 05:09:36,820: None
[DEBUG]2024-04-10 05:09:36,820: None
[DEBUG]2024-04-10 05:09:36,820: None
[DEBUG]2024-04-10 05:09:36,820: None
[DEBUG]2024-04-10 05:09:36,820: None
[DEBUG]2024-04-10 05:09:36,820: None
[DEBUG]2024-04-10 05:09:36,820: None
[DEBUG]2024-04-10 05:09:36,820: None
[DEBUG]2024-04-10 05:09:36,820: None
[DEBUG]2024-04-10 05:09:36,821: None
[DEBUG]2024-04-10 05:09:36,821: None
[DEBUG]2024-04-10 05:09:36,821: None
[DEBUG]2024-04-10 05:09:36,821: None
[DEBUG]2024-04-10 05:09:36,821: None
[DEBUG]2024-04-10 05:09:36,821: None
[DEBUG]2024-04-10 05:09:36,821: None
[DEBUG]2024-04-10 05:09:36,821: None
[DEBUG]2024-04-10 05:09:36,821: None
[DEBUG]2024-04-10 05:09:36,821: None
[DEBUG]2024-04-10 05:09:36,821: None
[DEBUG]2024-04-10 05:09:36,821: None
[DEBUG]2024-04-10 05:09:36,821: None
[DEBUG]2024-04-10 05:09:36,821: None
[DEBUG]2024-04-10 05:09:36,822: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:09:36,822: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:09:36,822: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:09:36,822: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:09:36,822: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:09:36,822: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:09:36,822: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:09:36,822: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:09:36,822: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:09:36,822: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:09:36,822: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:09:36,822: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:09:36,822: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:09:36,822: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:09:36,822: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:09:36,823: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:09:36,823: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:09:36,823: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:09:36,823: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:09:36,823: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:09:36,823: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:09:36,823: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:09:36,823: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:09:36,823: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:09:36,823: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:09:36,823: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:09:36,823: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:09:36,823: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:09:36,823: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:09:36,823: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:09:36,824: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:09:36,824: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:09:36,824: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:09:36,824: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:09:36,824: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:09:36,824: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:09:36,824: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:09:36,824: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:09:36,824: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:09:36,824: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:09:36,824: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:09:36,824: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:09:36,824: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:09:36,824: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:09:36,824: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:09:36,825: None
[DEBUG]2024-04-10 05:09:36,825: None
[DEBUG]2024-04-10 05:09:36,825: None
[DEBUG]2024-04-10 05:09:36,825: None
[DEBUG]2024-04-10 05:09:36,825: None
[DEBUG]2024-04-10 05:09:36,825: None
[DEBUG]2024-04-10 05:09:36,825: None
[DEBUG]2024-04-10 05:09:36,825: None
[DEBUG]2024-04-10 05:09:36,825: None
[DEBUG]2024-04-10 05:09:36,825: None
[DEBUG]2024-04-10 05:09:36,825: None
[DEBUG]2024-04-10 05:09:36,825: None
[DEBUG]2024-04-10 05:09:36,825: None
[DEBUG]2024-04-10 05:09:36,825: None
[DEBUG]2024-04-10 05:09:36,825: None
[DEBUG]2024-04-10 05:09:36,825: None
[DEBUG]2024-04-10 05:09:36,826: None
[DEBUG]2024-04-10 05:09:36,826: None
[DEBUG]2024-04-10 05:09:36,826: None
[DEBUG]2024-04-10 05:09:36,826: None
[DEBUG]2024-04-10 05:09:36,826: None
[DEBUG]2024-04-10 05:09:36,826: None
[DEBUG]2024-04-10 05:09:36,826: None
[DEBUG]2024-04-10 05:09:36,826: None
[DEBUG]2024-04-10 05:09:36,826: None
[DEBUG]2024-04-10 05:09:36,826: None
[DEBUG]2024-04-10 05:09:36,826: None
[DEBUG]2024-04-10 05:09:36,826: None
[DEBUG]2024-04-10 05:09:36,826: None
[DEBUG]2024-04-10 05:09:36,826: None
[DEBUG]2024-04-10 05:09:36,826: None
[DEBUG]2024-04-10 05:09:36,826: None
[DEBUG]2024-04-10 05:09:36,826: None
[DEBUG]2024-04-10 05:13:47,099: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 05:13:47,099: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 05:13:47,099: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 05:13:47,101: None
[DEBUG]2024-04-10 05:13:47,101: None
[DEBUG]2024-04-10 05:13:47,102: None
[DEBUG]2024-04-10 05:13:47,102: None
[DEBUG]2024-04-10 05:13:47,102: None
[DEBUG]2024-04-10 05:13:47,102: None
[DEBUG]2024-04-10 05:13:47,102: None
[DEBUG]2024-04-10 05:13:47,102: None
[DEBUG]2024-04-10 05:13:47,102: None
[DEBUG]2024-04-10 05:13:47,103: None
[DEBUG]2024-04-10 05:13:47,103: None
[DEBUG]2024-04-10 05:13:47,103: None
[DEBUG]2024-04-10 05:13:47,103: None
[DEBUG]2024-04-10 05:13:47,103: None
[DEBUG]2024-04-10 05:13:47,104: None
[DEBUG]2024-04-10 05:13:47,104: None
[DEBUG]2024-04-10 05:13:47,104: None
[DEBUG]2024-04-10 05:13:47,104: None
[DEBUG]2024-04-10 05:13:47,104: None
[DEBUG]2024-04-10 05:13:47,104: None
[DEBUG]2024-04-10 05:13:47,105: None
[DEBUG]2024-04-10 05:13:47,105: None
[DEBUG]2024-04-10 05:13:47,105: None
[DEBUG]2024-04-10 05:13:47,105: None
[DEBUG]2024-04-10 05:13:47,105: None
[DEBUG]2024-04-10 05:13:47,105: None
[DEBUG]2024-04-10 05:13:47,105: None
[DEBUG]2024-04-10 05:13:47,105: None
[DEBUG]2024-04-10 05:13:47,105: None
[DEBUG]2024-04-10 05:13:47,105: None
[DEBUG]2024-04-10 05:13:47,105: None
[DEBUG]2024-04-10 05:13:47,105: None
[DEBUG]2024-04-10 05:13:47,105: None
[DEBUG]2024-04-10 05:13:47,105: None
[DEBUG]2024-04-10 05:13:47,105: None
[DEBUG]2024-04-10 05:13:47,106: None
[DEBUG]2024-04-10 05:13:47,106: None
[DEBUG]2024-04-10 05:13:47,106: None
[DEBUG]2024-04-10 05:13:47,106: None
[DEBUG]2024-04-10 05:13:47,106: None
[DEBUG]2024-04-10 05:13:47,106: None
[DEBUG]2024-04-10 05:13:47,106: None
[DEBUG]2024-04-10 05:13:47,106: None
[DEBUG]2024-04-10 05:13:47,106: None
[DEBUG]2024-04-10 05:13:47,107: None
[DEBUG]2024-04-10 05:13:47,107: None
[DEBUG]2024-04-10 05:13:47,107: None
[DEBUG]2024-04-10 05:13:47,107: None
[DEBUG]2024-04-10 05:13:47,107: None
[DEBUG]2024-04-10 05:13:47,107: None
[DEBUG]2024-04-10 05:13:47,107: None
[DEBUG]2024-04-10 05:13:47,107: None
[DEBUG]2024-04-10 05:13:47,107: None
[DEBUG]2024-04-10 05:13:47,107: None
[DEBUG]2024-04-10 05:13:47,108: None
[DEBUG]2024-04-10 05:13:47,108: None
[DEBUG]2024-04-10 05:13:47,108: None
[DEBUG]2024-04-10 05:13:47,108: None
[DEBUG]2024-04-10 05:13:47,108: None
[DEBUG]2024-04-10 05:13:47,108: None
[DEBUG]2024-04-10 05:13:47,108: None
[DEBUG]2024-04-10 05:13:47,108: None
[DEBUG]2024-04-10 05:13:47,108: None
[DEBUG]2024-04-10 05:13:47,108: None
[DEBUG]2024-04-10 05:13:47,108: None
[DEBUG]2024-04-10 05:13:47,109: None
[DEBUG]2024-04-10 05:13:47,109: None
[DEBUG]2024-04-10 05:13:47,109: None
[DEBUG]2024-04-10 05:13:47,109: None
[DEBUG]2024-04-10 05:13:47,109: None
[DEBUG]2024-04-10 05:13:47,109: None
[DEBUG]2024-04-10 05:13:47,109: None
[DEBUG]2024-04-10 05:13:47,109: None
[DEBUG]2024-04-10 05:13:47,109: None
[DEBUG]2024-04-10 05:13:47,109: None
[DEBUG]2024-04-10 05:13:47,109: None
[DEBUG]2024-04-10 05:13:47,109: None
[DEBUG]2024-04-10 05:13:47,110: None
[DEBUG]2024-04-10 05:13:47,110: None
[DEBUG]2024-04-10 05:13:47,110: None
[DEBUG]2024-04-10 05:13:47,110: None
[DEBUG]2024-04-10 05:13:47,110: None
[DEBUG]2024-04-10 05:13:47,110: None
[DEBUG]2024-04-10 05:13:47,110: None
[DEBUG]2024-04-10 05:13:47,110: None
[DEBUG]2024-04-10 05:13:47,110: None
[DEBUG]2024-04-10 05:13:47,110: None
[DEBUG]2024-04-10 05:13:47,110: None
[DEBUG]2024-04-10 05:13:47,110: None
[DEBUG]2024-04-10 05:13:47,110: None
[DEBUG]2024-04-10 05:13:47,111: None
[DEBUG]2024-04-10 05:13:47,111: None
[DEBUG]2024-04-10 05:13:47,111: None
[DEBUG]2024-04-10 05:13:47,111: None
[DEBUG]2024-04-10 05:13:47,111: None
[DEBUG]2024-04-10 05:13:47,111: None
[DEBUG]2024-04-10 05:13:47,111: None
[DEBUG]2024-04-10 05:13:47,111: None
[DEBUG]2024-04-10 05:13:47,111: None
[DEBUG]2024-04-10 05:13:47,111: None
[DEBUG]2024-04-10 05:13:47,111: None
[DEBUG]2024-04-10 05:13:47,111: None
[DEBUG]2024-04-10 05:13:47,111: None
[DEBUG]2024-04-10 05:13:47,111: None
[DEBUG]2024-04-10 05:13:47,112: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:13:47,112: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:13:47,112: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:13:47,112: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:13:47,112: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:13:47,112: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:13:47,112: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:13:47,112: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:13:47,112: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:13:47,112: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:13:47,112: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:13:47,112: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:13:47,112: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:13:47,112: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:13:47,112: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:13:47,112: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:13:47,112: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:13:47,112: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:13:47,112: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:13:47,112: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:13:47,112: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:13:47,112: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:13:47,112: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:13:47,112: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:13:47,112: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:13:47,112: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:13:47,112: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:13:47,112: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:13:47,112: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:13:47,112: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:13:47,113: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:13:47,113: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:13:47,113: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:13:47,113: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:13:47,113: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:13:47,113: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:13:47,113: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:13:47,113: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:13:47,113: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:13:47,113: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:13:47,113: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:13:47,113: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:13:47,113: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:13:47,113: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:13:47,113: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:13:47,114: None
[DEBUG]2024-04-10 05:13:47,114: None
[DEBUG]2024-04-10 05:13:47,114: None
[DEBUG]2024-04-10 05:13:47,114: None
[DEBUG]2024-04-10 05:13:47,114: None
[DEBUG]2024-04-10 05:13:47,114: None
[DEBUG]2024-04-10 05:13:47,114: None
[DEBUG]2024-04-10 05:13:47,114: None
[DEBUG]2024-04-10 05:13:47,114: None
[DEBUG]2024-04-10 05:13:47,114: None
[DEBUG]2024-04-10 05:13:47,114: None
[DEBUG]2024-04-10 05:13:47,114: None
[DEBUG]2024-04-10 05:13:47,114: None
[DEBUG]2024-04-10 05:13:47,114: None
[DEBUG]2024-04-10 05:13:47,114: None
[DEBUG]2024-04-10 05:13:47,114: None
[DEBUG]2024-04-10 05:13:47,115: None
[DEBUG]2024-04-10 05:13:47,115: None
[DEBUG]2024-04-10 05:13:47,115: None
[DEBUG]2024-04-10 05:13:47,115: None
[DEBUG]2024-04-10 05:13:47,115: None
[DEBUG]2024-04-10 05:13:47,115: None
[DEBUG]2024-04-10 05:13:47,115: None
[DEBUG]2024-04-10 05:13:47,115: None
[DEBUG]2024-04-10 05:13:47,115: None
[DEBUG]2024-04-10 05:13:47,115: None
[DEBUG]2024-04-10 05:13:47,115: None
[DEBUG]2024-04-10 05:13:47,115: None
[DEBUG]2024-04-10 05:13:47,115: None
[DEBUG]2024-04-10 05:13:47,115: None
[DEBUG]2024-04-10 05:13:47,115: None
[DEBUG]2024-04-10 05:13:47,115: None
[DEBUG]2024-04-10 05:13:47,115: None
[DEBUG]2024-04-10 05:20:37,881: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 05:20:37,881: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 05:20:37,881: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 05:20:37,883: None
[DEBUG]2024-04-10 05:20:37,883: None
[DEBUG]2024-04-10 05:20:37,884: None
[DEBUG]2024-04-10 05:20:37,884: None
[DEBUG]2024-04-10 05:20:37,884: None
[DEBUG]2024-04-10 05:20:37,884: None
[DEBUG]2024-04-10 05:20:37,884: None
[DEBUG]2024-04-10 05:20:37,884: None
[DEBUG]2024-04-10 05:20:37,884: None
[DEBUG]2024-04-10 05:20:37,885: None
[DEBUG]2024-04-10 05:20:37,885: None
[DEBUG]2024-04-10 05:20:37,885: None
[DEBUG]2024-04-10 05:20:37,885: None
[DEBUG]2024-04-10 05:20:37,885: None
[DEBUG]2024-04-10 05:20:37,886: None
[DEBUG]2024-04-10 05:20:37,886: None
[DEBUG]2024-04-10 05:20:37,886: None
[DEBUG]2024-04-10 05:20:37,886: None
[DEBUG]2024-04-10 05:20:37,886: None
[DEBUG]2024-04-10 05:20:37,886: None
[DEBUG]2024-04-10 05:20:37,886: None
[DEBUG]2024-04-10 05:20:37,886: None
[DEBUG]2024-04-10 05:20:37,886: None
[DEBUG]2024-04-10 05:20:37,886: None
[DEBUG]2024-04-10 05:20:37,886: None
[DEBUG]2024-04-10 05:20:37,886: None
[DEBUG]2024-04-10 05:20:37,886: None
[DEBUG]2024-04-10 05:20:37,887: None
[DEBUG]2024-04-10 05:20:37,887: None
[DEBUG]2024-04-10 05:20:37,887: None
[DEBUG]2024-04-10 05:20:37,887: None
[DEBUG]2024-04-10 05:20:37,887: None
[DEBUG]2024-04-10 05:20:37,887: None
[DEBUG]2024-04-10 05:20:37,887: None
[DEBUG]2024-04-10 05:20:37,887: None
[DEBUG]2024-04-10 05:20:37,888: None
[DEBUG]2024-04-10 05:20:37,888: None
[DEBUG]2024-04-10 05:20:37,888: None
[DEBUG]2024-04-10 05:20:37,888: None
[DEBUG]2024-04-10 05:20:37,888: None
[DEBUG]2024-04-10 05:20:37,888: None
[DEBUG]2024-04-10 05:20:37,888: None
[DEBUG]2024-04-10 05:20:37,888: None
[DEBUG]2024-04-10 05:20:37,888: None
[DEBUG]2024-04-10 05:20:37,889: None
[DEBUG]2024-04-10 05:20:37,889: None
[DEBUG]2024-04-10 05:20:37,889: None
[DEBUG]2024-04-10 05:20:37,889: None
[DEBUG]2024-04-10 05:20:37,889: None
[DEBUG]2024-04-10 05:20:37,889: None
[DEBUG]2024-04-10 05:20:37,889: None
[DEBUG]2024-04-10 05:20:37,889: None
[DEBUG]2024-04-10 05:20:37,889: None
[DEBUG]2024-04-10 05:20:37,889: None
[DEBUG]2024-04-10 05:20:37,890: None
[DEBUG]2024-04-10 05:20:37,890: None
[DEBUG]2024-04-10 05:20:37,890: None
[DEBUG]2024-04-10 05:20:37,890: None
[DEBUG]2024-04-10 05:20:37,890: None
[DEBUG]2024-04-10 05:20:37,890: None
[DEBUG]2024-04-10 05:20:37,890: None
[DEBUG]2024-04-10 05:20:37,890: None
[DEBUG]2024-04-10 05:20:37,890: None
[DEBUG]2024-04-10 05:20:37,890: None
[DEBUG]2024-04-10 05:20:37,890: None
[DEBUG]2024-04-10 05:20:37,891: None
[DEBUG]2024-04-10 05:20:37,891: None
[DEBUG]2024-04-10 05:20:37,891: None
[DEBUG]2024-04-10 05:20:37,891: None
[DEBUG]2024-04-10 05:20:37,891: None
[DEBUG]2024-04-10 05:20:37,891: None
[DEBUG]2024-04-10 05:20:37,891: None
[DEBUG]2024-04-10 05:20:37,891: None
[DEBUG]2024-04-10 05:20:37,891: None
[DEBUG]2024-04-10 05:20:37,891: None
[DEBUG]2024-04-10 05:20:37,891: None
[DEBUG]2024-04-10 05:20:37,891: None
[DEBUG]2024-04-10 05:20:37,892: None
[DEBUG]2024-04-10 05:20:37,892: None
[DEBUG]2024-04-10 05:20:37,892: None
[DEBUG]2024-04-10 05:20:37,892: None
[DEBUG]2024-04-10 05:20:37,892: None
[DEBUG]2024-04-10 05:20:37,892: None
[DEBUG]2024-04-10 05:20:37,892: None
[DEBUG]2024-04-10 05:20:37,892: None
[DEBUG]2024-04-10 05:20:37,892: None
[DEBUG]2024-04-10 05:20:37,892: None
[DEBUG]2024-04-10 05:20:37,892: None
[DEBUG]2024-04-10 05:20:37,892: None
[DEBUG]2024-04-10 05:20:37,892: None
[DEBUG]2024-04-10 05:20:37,892: None
[DEBUG]2024-04-10 05:20:37,892: None
[DEBUG]2024-04-10 05:20:37,892: None
[DEBUG]2024-04-10 05:20:37,892: None
[DEBUG]2024-04-10 05:20:37,892: None
[DEBUG]2024-04-10 05:20:37,892: None
[DEBUG]2024-04-10 05:20:37,892: None
[DEBUG]2024-04-10 05:20:37,892: None
[DEBUG]2024-04-10 05:20:37,892: None
[DEBUG]2024-04-10 05:20:37,892: None
[DEBUG]2024-04-10 05:20:37,892: None
[DEBUG]2024-04-10 05:20:37,892: None
[DEBUG]2024-04-10 05:20:37,892: None
[DEBUG]2024-04-10 05:20:37,892: None
[DEBUG]2024-04-10 05:20:37,893: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:20:37,893: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:20:37,893: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:20:37,893: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:20:37,893: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:20:37,893: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:20:37,893: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:20:37,893: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:20:37,893: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:20:37,893: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:20:37,893: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:20:37,893: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:20:37,893: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:20:37,893: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:20:37,893: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:20:37,894: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:20:37,894: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:20:37,894: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:20:37,894: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:20:37,894: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:20:37,894: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:20:37,894: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:20:37,894: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:20:37,894: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:20:37,894: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:20:37,894: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:20:37,894: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:20:37,894: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:20:37,894: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:20:37,894: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:20:37,894: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:20:37,894: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:20:37,894: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:20:37,894: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:20:37,894: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:20:37,894: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:20:37,894: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:20:37,894: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:20:37,894: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:20:37,894: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:20:37,894: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:20:37,894: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:20:37,894: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:20:37,894: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:20:37,894: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:20:37,896: None
[DEBUG]2024-04-10 05:20:37,896: None
[DEBUG]2024-04-10 05:20:37,896: None
[DEBUG]2024-04-10 05:20:37,896: None
[DEBUG]2024-04-10 05:20:37,896: None
[DEBUG]2024-04-10 05:20:37,896: None
[DEBUG]2024-04-10 05:20:37,896: None
[DEBUG]2024-04-10 05:20:37,896: None
[DEBUG]2024-04-10 05:20:37,896: None
[DEBUG]2024-04-10 05:20:37,896: None
[DEBUG]2024-04-10 05:20:37,896: None
[DEBUG]2024-04-10 05:20:37,896: None
[DEBUG]2024-04-10 05:20:37,896: None
[DEBUG]2024-04-10 05:20:37,896: None
[DEBUG]2024-04-10 05:20:37,896: None
[DEBUG]2024-04-10 05:20:37,896: None
[DEBUG]2024-04-10 05:20:37,897: None
[DEBUG]2024-04-10 05:20:37,897: None
[DEBUG]2024-04-10 05:20:37,897: None
[DEBUG]2024-04-10 05:20:37,897: None
[DEBUG]2024-04-10 05:20:37,897: None
[DEBUG]2024-04-10 05:20:37,897: None
[DEBUG]2024-04-10 05:20:37,897: None
[DEBUG]2024-04-10 05:20:37,897: None
[DEBUG]2024-04-10 05:20:37,897: None
[DEBUG]2024-04-10 05:20:37,897: None
[DEBUG]2024-04-10 05:20:37,897: None
[DEBUG]2024-04-10 05:20:37,897: None
[DEBUG]2024-04-10 05:20:37,897: None
[DEBUG]2024-04-10 05:20:37,897: None
[DEBUG]2024-04-10 05:20:37,897: None
[DEBUG]2024-04-10 05:20:37,897: None
[DEBUG]2024-04-10 05:20:37,897: None
[DEBUG]2024-04-10 05:22:11,520: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 05:22:11,521: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 05:22:11,521: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 05:22:11,523: None
[DEBUG]2024-04-10 05:22:11,523: None
[DEBUG]2024-04-10 05:22:11,523: None
[DEBUG]2024-04-10 05:22:11,523: None
[DEBUG]2024-04-10 05:22:11,523: None
[DEBUG]2024-04-10 05:22:11,524: None
[DEBUG]2024-04-10 05:22:11,524: None
[DEBUG]2024-04-10 05:22:11,524: None
[DEBUG]2024-04-10 05:22:11,524: None
[DEBUG]2024-04-10 05:22:11,524: None
[DEBUG]2024-04-10 05:22:11,524: None
[DEBUG]2024-04-10 05:22:11,524: None
[DEBUG]2024-04-10 05:22:11,524: None
[DEBUG]2024-04-10 05:22:11,524: None
[DEBUG]2024-04-10 05:22:11,525: None
[DEBUG]2024-04-10 05:22:11,525: None
[DEBUG]2024-04-10 05:22:11,525: None
[DEBUG]2024-04-10 05:22:11,525: None
[DEBUG]2024-04-10 05:22:11,525: None
[DEBUG]2024-04-10 05:22:11,525: None
[DEBUG]2024-04-10 05:22:11,526: None
[DEBUG]2024-04-10 05:22:11,526: None
[DEBUG]2024-04-10 05:22:11,526: None
[DEBUG]2024-04-10 05:22:11,526: None
[DEBUG]2024-04-10 05:22:11,526: None
[DEBUG]2024-04-10 05:22:11,526: None
[DEBUG]2024-04-10 05:22:11,526: None
[DEBUG]2024-04-10 05:22:11,527: None
[DEBUG]2024-04-10 05:22:11,527: None
[DEBUG]2024-04-10 05:22:11,527: None
[DEBUG]2024-04-10 05:22:11,527: None
[DEBUG]2024-04-10 05:22:11,527: None
[DEBUG]2024-04-10 05:22:11,527: None
[DEBUG]2024-04-10 05:22:11,527: None
[DEBUG]2024-04-10 05:22:11,527: None
[DEBUG]2024-04-10 05:22:11,527: None
[DEBUG]2024-04-10 05:22:11,527: None
[DEBUG]2024-04-10 05:22:11,527: None
[DEBUG]2024-04-10 05:22:11,527: None
[DEBUG]2024-04-10 05:22:11,527: None
[DEBUG]2024-04-10 05:22:11,527: None
[DEBUG]2024-04-10 05:22:11,527: None
[DEBUG]2024-04-10 05:22:11,527: None
[DEBUG]2024-04-10 05:22:11,527: None
[DEBUG]2024-04-10 05:22:11,529: None
[DEBUG]2024-04-10 05:22:11,529: None
[DEBUG]2024-04-10 05:22:11,529: None
[DEBUG]2024-04-10 05:22:11,529: None
[DEBUG]2024-04-10 05:22:11,529: None
[DEBUG]2024-04-10 05:22:11,529: None
[DEBUG]2024-04-10 05:22:11,529: None
[DEBUG]2024-04-10 05:22:11,529: None
[DEBUG]2024-04-10 05:22:11,529: None
[DEBUG]2024-04-10 05:22:11,529: None
[DEBUG]2024-04-10 05:22:11,530: None
[DEBUG]2024-04-10 05:22:11,530: None
[DEBUG]2024-04-10 05:22:11,530: None
[DEBUG]2024-04-10 05:22:11,530: None
[DEBUG]2024-04-10 05:22:11,530: None
[DEBUG]2024-04-10 05:22:11,530: None
[DEBUG]2024-04-10 05:22:11,530: None
[DEBUG]2024-04-10 05:22:11,530: None
[DEBUG]2024-04-10 05:22:11,530: None
[DEBUG]2024-04-10 05:22:11,530: None
[DEBUG]2024-04-10 05:22:11,530: None
[DEBUG]2024-04-10 05:22:11,531: None
[DEBUG]2024-04-10 05:22:11,531: None
[DEBUG]2024-04-10 05:22:11,531: None
[DEBUG]2024-04-10 05:22:11,531: None
[DEBUG]2024-04-10 05:22:11,531: None
[DEBUG]2024-04-10 05:22:11,531: None
[DEBUG]2024-04-10 05:22:11,531: None
[DEBUG]2024-04-10 05:22:11,531: None
[DEBUG]2024-04-10 05:22:11,531: None
[DEBUG]2024-04-10 05:22:11,531: None
[DEBUG]2024-04-10 05:22:11,531: None
[DEBUG]2024-04-10 05:22:11,531: None
[DEBUG]2024-04-10 05:22:11,532: None
[DEBUG]2024-04-10 05:22:11,532: None
[DEBUG]2024-04-10 05:22:11,532: None
[DEBUG]2024-04-10 05:22:11,532: None
[DEBUG]2024-04-10 05:22:11,532: None
[DEBUG]2024-04-10 05:22:11,532: None
[DEBUG]2024-04-10 05:22:11,532: None
[DEBUG]2024-04-10 05:22:11,532: None
[DEBUG]2024-04-10 05:22:11,532: None
[DEBUG]2024-04-10 05:22:11,532: None
[DEBUG]2024-04-10 05:22:11,532: None
[DEBUG]2024-04-10 05:22:11,532: None
[DEBUG]2024-04-10 05:22:11,532: None
[DEBUG]2024-04-10 05:22:11,533: None
[DEBUG]2024-04-10 05:22:11,533: None
[DEBUG]2024-04-10 05:22:11,533: None
[DEBUG]2024-04-10 05:22:11,533: None
[DEBUG]2024-04-10 05:22:11,533: None
[DEBUG]2024-04-10 05:22:11,533: None
[DEBUG]2024-04-10 05:22:11,533: None
[DEBUG]2024-04-10 05:22:11,533: None
[DEBUG]2024-04-10 05:22:11,533: None
[DEBUG]2024-04-10 05:22:11,533: None
[DEBUG]2024-04-10 05:22:11,533: None
[DEBUG]2024-04-10 05:22:11,533: None
[DEBUG]2024-04-10 05:22:11,533: None
[DEBUG]2024-04-10 05:22:11,533: None
[DEBUG]2024-04-10 05:22:11,534: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:22:11,534: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:22:11,534: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:22:11,534: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:22:11,534: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:22:11,534: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:22:11,534: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:22:11,534: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:22:11,534: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:22:11,534: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:22:11,534: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:22:11,534: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:22:11,534: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:22:11,534: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:22:11,534: <re.Match object; span=(3348, 3468), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:22:11,534: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:22:11,534: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:22:11,534: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:22:11,534: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:22:11,534: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:22:11,534: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:22:11,534: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:22:11,534: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:22:11,534: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:22:11,534: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:22:11,534: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:22:11,534: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:22:11,534: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:22:11,534: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:22:11,534: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:22:11,535: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:22:11,535: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:22:11,535: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:22:11,535: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:22:11,535: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:22:11,535: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:22:11,535: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:22:11,535: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:22:11,535: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:22:11,535: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:22:11,535: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:22:11,535: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:22:11,535: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:22:11,535: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:22:11,535: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:22:11,536: None
[DEBUG]2024-04-10 05:22:11,536: None
[DEBUG]2024-04-10 05:22:11,536: None
[DEBUG]2024-04-10 05:22:11,536: None
[DEBUG]2024-04-10 05:22:11,536: None
[DEBUG]2024-04-10 05:22:11,536: None
[DEBUG]2024-04-10 05:22:11,536: None
[DEBUG]2024-04-10 05:22:11,536: None
[DEBUG]2024-04-10 05:22:11,536: None
[DEBUG]2024-04-10 05:22:11,536: None
[DEBUG]2024-04-10 05:22:11,536: None
[DEBUG]2024-04-10 05:22:11,536: None
[DEBUG]2024-04-10 05:22:11,536: None
[DEBUG]2024-04-10 05:22:11,536: None
[DEBUG]2024-04-10 05:22:11,536: None
[DEBUG]2024-04-10 05:22:11,536: None
[DEBUG]2024-04-10 05:22:11,537: None
[DEBUG]2024-04-10 05:22:11,537: None
[DEBUG]2024-04-10 05:22:11,537: None
[DEBUG]2024-04-10 05:22:11,537: None
[DEBUG]2024-04-10 05:22:11,537: None
[DEBUG]2024-04-10 05:22:11,537: None
[DEBUG]2024-04-10 05:22:11,537: None
[DEBUG]2024-04-10 05:22:11,537: None
[DEBUG]2024-04-10 05:22:11,537: None
[DEBUG]2024-04-10 05:22:11,537: None
[DEBUG]2024-04-10 05:22:11,537: None
[DEBUG]2024-04-10 05:22:11,537: None
[DEBUG]2024-04-10 05:22:11,537: None
[DEBUG]2024-04-10 05:22:11,537: None
[DEBUG]2024-04-10 05:22:11,537: None
[DEBUG]2024-04-10 05:22:11,537: None
[DEBUG]2024-04-10 05:22:11,537: None
[DEBUG]2024-04-10 05:23:56,596: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 05:23:56,596: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 05:23:56,596: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 05:23:56,598: None
[DEBUG]2024-04-10 05:23:56,598: None
[DEBUG]2024-04-10 05:23:56,598: None
[DEBUG]2024-04-10 05:23:56,598: None
[DEBUG]2024-04-10 05:23:56,598: None
[DEBUG]2024-04-10 05:23:56,599: None
[DEBUG]2024-04-10 05:23:56,599: None
[DEBUG]2024-04-10 05:23:56,599: None
[DEBUG]2024-04-10 05:23:56,599: None
[DEBUG]2024-04-10 05:23:56,600: None
[DEBUG]2024-04-10 05:23:56,600: None
[DEBUG]2024-04-10 05:23:56,600: None
[DEBUG]2024-04-10 05:23:56,600: None
[DEBUG]2024-04-10 05:23:56,600: None
[DEBUG]2024-04-10 05:23:56,600: None
[DEBUG]2024-04-10 05:23:56,600: None
[DEBUG]2024-04-10 05:23:56,600: None
[DEBUG]2024-04-10 05:23:56,600: None
[DEBUG]2024-04-10 05:23:56,600: None
[DEBUG]2024-04-10 05:23:56,600: None
[DEBUG]2024-04-10 05:23:56,601: None
[DEBUG]2024-04-10 05:23:56,601: None
[DEBUG]2024-04-10 05:23:56,601: None
[DEBUG]2024-04-10 05:23:56,601: None
[DEBUG]2024-04-10 05:23:56,601: None
[DEBUG]2024-04-10 05:23:56,601: None
[DEBUG]2024-04-10 05:23:56,601: None
[DEBUG]2024-04-10 05:23:56,602: None
[DEBUG]2024-04-10 05:23:56,602: None
[DEBUG]2024-04-10 05:23:56,602: None
[DEBUG]2024-04-10 05:23:56,602: None
[DEBUG]2024-04-10 05:23:56,602: None
[DEBUG]2024-04-10 05:23:56,602: None
[DEBUG]2024-04-10 05:23:56,602: None
[DEBUG]2024-04-10 05:23:56,602: None
[DEBUG]2024-04-10 05:23:56,603: None
[DEBUG]2024-04-10 05:23:56,603: None
[DEBUG]2024-04-10 05:23:56,603: None
[DEBUG]2024-04-10 05:23:56,603: None
[DEBUG]2024-04-10 05:23:56,603: None
[DEBUG]2024-04-10 05:23:56,603: None
[DEBUG]2024-04-10 05:23:56,603: None
[DEBUG]2024-04-10 05:23:56,603: None
[DEBUG]2024-04-10 05:23:56,603: None
[DEBUG]2024-04-10 05:23:56,604: None
[DEBUG]2024-04-10 05:23:56,604: None
[DEBUG]2024-04-10 05:23:56,604: None
[DEBUG]2024-04-10 05:23:56,604: None
[DEBUG]2024-04-10 05:23:56,604: None
[DEBUG]2024-04-10 05:23:56,604: None
[DEBUG]2024-04-10 05:23:56,604: None
[DEBUG]2024-04-10 05:23:56,604: None
[DEBUG]2024-04-10 05:23:56,604: None
[DEBUG]2024-04-10 05:23:56,604: None
[DEBUG]2024-04-10 05:23:56,604: None
[DEBUG]2024-04-10 05:23:56,604: None
[DEBUG]2024-04-10 05:23:56,604: None
[DEBUG]2024-04-10 05:23:56,604: None
[DEBUG]2024-04-10 05:23:56,604: None
[DEBUG]2024-04-10 05:23:56,604: None
[DEBUG]2024-04-10 05:23:56,604: None
[DEBUG]2024-04-10 05:23:56,604: None
[DEBUG]2024-04-10 05:23:56,604: None
[DEBUG]2024-04-10 05:23:56,604: None
[DEBUG]2024-04-10 05:23:56,604: None
[DEBUG]2024-04-10 05:23:56,605: None
[DEBUG]2024-04-10 05:23:56,605: None
[DEBUG]2024-04-10 05:23:56,605: None
[DEBUG]2024-04-10 05:23:56,605: None
[DEBUG]2024-04-10 05:23:56,605: None
[DEBUG]2024-04-10 05:23:56,605: None
[DEBUG]2024-04-10 05:23:56,605: None
[DEBUG]2024-04-10 05:23:56,605: None
[DEBUG]2024-04-10 05:23:56,605: None
[DEBUG]2024-04-10 05:23:56,605: None
[DEBUG]2024-04-10 05:23:56,605: None
[DEBUG]2024-04-10 05:23:56,605: None
[DEBUG]2024-04-10 05:23:56,606: None
[DEBUG]2024-04-10 05:23:56,606: None
[DEBUG]2024-04-10 05:23:56,606: None
[DEBUG]2024-04-10 05:23:56,606: None
[DEBUG]2024-04-10 05:23:56,606: None
[DEBUG]2024-04-10 05:23:56,606: None
[DEBUG]2024-04-10 05:23:56,606: None
[DEBUG]2024-04-10 05:23:56,606: None
[DEBUG]2024-04-10 05:23:56,606: None
[DEBUG]2024-04-10 05:23:56,606: None
[DEBUG]2024-04-10 05:23:56,606: None
[DEBUG]2024-04-10 05:23:56,606: None
[DEBUG]2024-04-10 05:23:56,606: None
[DEBUG]2024-04-10 05:23:56,607: None
[DEBUG]2024-04-10 05:23:56,607: None
[DEBUG]2024-04-10 05:23:56,607: None
[DEBUG]2024-04-10 05:23:56,607: None
[DEBUG]2024-04-10 05:23:56,607: None
[DEBUG]2024-04-10 05:23:56,607: None
[DEBUG]2024-04-10 05:23:56,607: None
[DEBUG]2024-04-10 05:23:56,607: None
[DEBUG]2024-04-10 05:23:56,607: None
[DEBUG]2024-04-10 05:23:56,607: None
[DEBUG]2024-04-10 05:23:56,607: None
[DEBUG]2024-04-10 05:23:56,607: None
[DEBUG]2024-04-10 05:23:56,607: None
[DEBUG]2024-04-10 05:23:56,607: None
[DEBUG]2024-04-10 05:23:56,608: <re.Match object; span=(3276, 3396), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:23:56,608: <re.Match object; span=(3276, 3396), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:23:56,608: <re.Match object; span=(3276, 3396), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:23:56,608: <re.Match object; span=(3276, 3396), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:23:56,608: <re.Match object; span=(3276, 3396), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:23:56,608: <re.Match object; span=(3276, 3396), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:23:56,608: <re.Match object; span=(3276, 3396), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:23:56,608: <re.Match object; span=(3276, 3396), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:23:56,608: <re.Match object; span=(3276, 3396), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:23:56,608: <re.Match object; span=(3276, 3396), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:23:56,608: <re.Match object; span=(3276, 3396), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:23:56,608: <re.Match object; span=(3276, 3396), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:23:56,608: <re.Match object; span=(3276, 3396), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:23:56,608: <re.Match object; span=(3276, 3396), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:23:56,608: <re.Match object; span=(3276, 3396), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:23:56,609: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:23:56,609: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:23:56,609: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:23:56,609: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:23:56,609: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:23:56,609: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:23:56,609: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:23:56,609: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:23:56,609: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:23:56,609: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:23:56,609: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:23:56,609: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:23:56,609: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:23:56,609: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:23:56,609: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:23:56,609: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:23:56,609: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:23:56,609: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:23:56,609: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:23:56,609: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:23:56,609: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:23:56,609: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:23:56,609: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:23:56,609: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:23:56,609: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:23:56,609: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:23:56,609: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:23:56,609: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:23:56,609: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:23:56,609: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:23:56,610: None
[DEBUG]2024-04-10 05:23:56,610: None
[DEBUG]2024-04-10 05:23:56,610: None
[DEBUG]2024-04-10 05:23:56,610: None
[DEBUG]2024-04-10 05:23:56,610: None
[DEBUG]2024-04-10 05:23:56,610: None
[DEBUG]2024-04-10 05:23:56,610: None
[DEBUG]2024-04-10 05:23:56,610: None
[DEBUG]2024-04-10 05:23:56,610: None
[DEBUG]2024-04-10 05:23:56,610: None
[DEBUG]2024-04-10 05:23:56,610: None
[DEBUG]2024-04-10 05:23:56,610: None
[DEBUG]2024-04-10 05:23:56,610: None
[DEBUG]2024-04-10 05:23:56,610: None
[DEBUG]2024-04-10 05:23:56,610: None
[DEBUG]2024-04-10 05:23:56,610: None
[DEBUG]2024-04-10 05:23:56,611: None
[DEBUG]2024-04-10 05:23:56,611: None
[DEBUG]2024-04-10 05:23:56,611: None
[DEBUG]2024-04-10 05:23:56,611: None
[DEBUG]2024-04-10 05:23:56,611: None
[DEBUG]2024-04-10 05:23:56,611: None
[DEBUG]2024-04-10 05:23:56,611: None
[DEBUG]2024-04-10 05:23:56,611: None
[DEBUG]2024-04-10 05:23:56,611: None
[DEBUG]2024-04-10 05:23:56,611: None
[DEBUG]2024-04-10 05:23:56,611: None
[DEBUG]2024-04-10 05:23:56,611: None
[DEBUG]2024-04-10 05:23:56,611: None
[DEBUG]2024-04-10 05:23:56,611: None
[DEBUG]2024-04-10 05:23:56,611: None
[DEBUG]2024-04-10 05:23:56,611: None
[DEBUG]2024-04-10 05:23:56,611: None
[DEBUG]2024-04-10 05:25:59,779: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 05:25:59,780: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 05:25:59,780: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 05:25:59,782: None
[DEBUG]2024-04-10 05:25:59,782: None
[DEBUG]2024-04-10 05:25:59,782: None
[DEBUG]2024-04-10 05:25:59,782: None
[DEBUG]2024-04-10 05:25:59,782: None
[DEBUG]2024-04-10 05:25:59,783: None
[DEBUG]2024-04-10 05:25:59,783: None
[DEBUG]2024-04-10 05:25:59,783: None
[DEBUG]2024-04-10 05:25:59,783: None
[DEBUG]2024-04-10 05:25:59,783: None
[DEBUG]2024-04-10 05:25:59,783: None
[DEBUG]2024-04-10 05:25:59,783: None
[DEBUG]2024-04-10 05:25:59,783: None
[DEBUG]2024-04-10 05:25:59,783: None
[DEBUG]2024-04-10 05:25:59,784: None
[DEBUG]2024-04-10 05:25:59,784: None
[DEBUG]2024-04-10 05:25:59,784: None
[DEBUG]2024-04-10 05:25:59,784: None
[DEBUG]2024-04-10 05:25:59,784: None
[DEBUG]2024-04-10 05:25:59,784: None
[DEBUG]2024-04-10 05:25:59,785: None
[DEBUG]2024-04-10 05:25:59,785: None
[DEBUG]2024-04-10 05:25:59,785: None
[DEBUG]2024-04-10 05:25:59,785: None
[DEBUG]2024-04-10 05:25:59,785: None
[DEBUG]2024-04-10 05:25:59,785: None
[DEBUG]2024-04-10 05:25:59,785: None
[DEBUG]2024-04-10 05:25:59,785: None
[DEBUG]2024-04-10 05:25:59,785: None
[DEBUG]2024-04-10 05:25:59,785: None
[DEBUG]2024-04-10 05:25:59,785: None
[DEBUG]2024-04-10 05:25:59,785: None
[DEBUG]2024-04-10 05:25:59,785: None
[DEBUG]2024-04-10 05:25:59,785: None
[DEBUG]2024-04-10 05:25:59,785: None
[DEBUG]2024-04-10 05:25:59,786: None
[DEBUG]2024-04-10 05:25:59,786: None
[DEBUG]2024-04-10 05:25:59,786: None
[DEBUG]2024-04-10 05:25:59,786: None
[DEBUG]2024-04-10 05:25:59,786: None
[DEBUG]2024-04-10 05:25:59,786: None
[DEBUG]2024-04-10 05:25:59,786: None
[DEBUG]2024-04-10 05:25:59,786: None
[DEBUG]2024-04-10 05:25:59,786: None
[DEBUG]2024-04-10 05:25:59,787: None
[DEBUG]2024-04-10 05:25:59,787: None
[DEBUG]2024-04-10 05:25:59,787: None
[DEBUG]2024-04-10 05:25:59,787: None
[DEBUG]2024-04-10 05:25:59,787: None
[DEBUG]2024-04-10 05:25:59,787: None
[DEBUG]2024-04-10 05:25:59,787: None
[DEBUG]2024-04-10 05:25:59,787: None
[DEBUG]2024-04-10 05:25:59,787: None
[DEBUG]2024-04-10 05:25:59,787: None
[DEBUG]2024-04-10 05:25:59,788: None
[DEBUG]2024-04-10 05:25:59,788: None
[DEBUG]2024-04-10 05:25:59,788: None
[DEBUG]2024-04-10 05:25:59,788: None
[DEBUG]2024-04-10 05:25:59,788: None
[DEBUG]2024-04-10 05:25:59,788: None
[DEBUG]2024-04-10 05:25:59,788: None
[DEBUG]2024-04-10 05:25:59,788: None
[DEBUG]2024-04-10 05:25:59,788: None
[DEBUG]2024-04-10 05:25:59,788: None
[DEBUG]2024-04-10 05:25:59,788: None
[DEBUG]2024-04-10 05:25:59,789: None
[DEBUG]2024-04-10 05:25:59,789: None
[DEBUG]2024-04-10 05:25:59,789: None
[DEBUG]2024-04-10 05:25:59,789: None
[DEBUG]2024-04-10 05:25:59,789: None
[DEBUG]2024-04-10 05:25:59,789: None
[DEBUG]2024-04-10 05:25:59,789: None
[DEBUG]2024-04-10 05:25:59,789: None
[DEBUG]2024-04-10 05:25:59,789: None
[DEBUG]2024-04-10 05:25:59,789: None
[DEBUG]2024-04-10 05:25:59,789: None
[DEBUG]2024-04-10 05:25:59,789: None
[DEBUG]2024-04-10 05:25:59,789: None
[DEBUG]2024-04-10 05:25:59,789: None
[DEBUG]2024-04-10 05:25:59,789: None
[DEBUG]2024-04-10 05:25:59,789: None
[DEBUG]2024-04-10 05:25:59,789: None
[DEBUG]2024-04-10 05:25:59,789: None
[DEBUG]2024-04-10 05:25:59,789: None
[DEBUG]2024-04-10 05:25:59,789: None
[DEBUG]2024-04-10 05:25:59,789: None
[DEBUG]2024-04-10 05:25:59,789: None
[DEBUG]2024-04-10 05:25:59,789: None
[DEBUG]2024-04-10 05:25:59,789: None
[DEBUG]2024-04-10 05:25:59,789: None
[DEBUG]2024-04-10 05:25:59,790: None
[DEBUG]2024-04-10 05:25:59,790: None
[DEBUG]2024-04-10 05:25:59,790: None
[DEBUG]2024-04-10 05:25:59,790: None
[DEBUG]2024-04-10 05:25:59,790: None
[DEBUG]2024-04-10 05:25:59,790: None
[DEBUG]2024-04-10 05:25:59,790: None
[DEBUG]2024-04-10 05:25:59,790: None
[DEBUG]2024-04-10 05:25:59,790: None
[DEBUG]2024-04-10 05:25:59,790: None
[DEBUG]2024-04-10 05:25:59,790: None
[DEBUG]2024-04-10 05:25:59,790: None
[DEBUG]2024-04-10 05:25:59,790: None
[DEBUG]2024-04-10 05:25:59,790: None
[DEBUG]2024-04-10 05:25:59,791: <re.Match object; span=(3276, 3396), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:25:59,791: <re.Match object; span=(3276, 3396), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:25:59,791: <re.Match object; span=(3276, 3396), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:25:59,791: <re.Match object; span=(3276, 3396), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:25:59,791: <re.Match object; span=(3276, 3396), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:25:59,791: <re.Match object; span=(3276, 3396), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:25:59,791: <re.Match object; span=(3276, 3396), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:25:59,791: <re.Match object; span=(3276, 3396), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:25:59,791: <re.Match object; span=(3276, 3396), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:25:59,791: <re.Match object; span=(3276, 3396), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:25:59,791: <re.Match object; span=(3276, 3396), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:25:59,791: <re.Match object; span=(3276, 3396), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:25:59,791: <re.Match object; span=(3276, 3396), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:25:59,791: <re.Match object; span=(3276, 3396), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:25:59,791: <re.Match object; span=(3276, 3396), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 05:25:59,792: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:25:59,792: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:25:59,792: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:25:59,792: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:25:59,792: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:25:59,792: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:25:59,792: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:25:59,792: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:25:59,792: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:25:59,792: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:25:59,792: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:25:59,792: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:25:59,792: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:25:59,792: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:25:59,792: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 05:25:59,792: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:25:59,792: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:25:59,792: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:25:59,792: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:25:59,792: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:25:59,792: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:25:59,792: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:25:59,792: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:25:59,792: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:25:59,792: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:25:59,792: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:25:59,792: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:25:59,792: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:25:59,792: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:25:59,792: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 05:25:59,793: None
[DEBUG]2024-04-10 05:25:59,793: None
[DEBUG]2024-04-10 05:25:59,793: None
[DEBUG]2024-04-10 05:25:59,793: None
[DEBUG]2024-04-10 05:25:59,793: None
[DEBUG]2024-04-10 05:25:59,793: None
[DEBUG]2024-04-10 05:25:59,793: None
[DEBUG]2024-04-10 05:25:59,793: None
[DEBUG]2024-04-10 05:25:59,793: None
[DEBUG]2024-04-10 05:25:59,793: None
[DEBUG]2024-04-10 05:25:59,793: None
[DEBUG]2024-04-10 05:25:59,793: None
[DEBUG]2024-04-10 05:25:59,793: None
[DEBUG]2024-04-10 05:25:59,793: None
[DEBUG]2024-04-10 05:25:59,793: None
[DEBUG]2024-04-10 05:25:59,793: None
[DEBUG]2024-04-10 05:25:59,794: None
[DEBUG]2024-04-10 05:25:59,794: None
[DEBUG]2024-04-10 05:25:59,794: None
[DEBUG]2024-04-10 05:25:59,794: None
[DEBUG]2024-04-10 05:25:59,794: None
[DEBUG]2024-04-10 05:25:59,794: None
[DEBUG]2024-04-10 05:25:59,794: None
[DEBUG]2024-04-10 05:25:59,794: None
[DEBUG]2024-04-10 05:25:59,794: None
[DEBUG]2024-04-10 05:25:59,794: None
[DEBUG]2024-04-10 05:25:59,794: None
[DEBUG]2024-04-10 05:25:59,794: None
[DEBUG]2024-04-10 05:25:59,794: None
[DEBUG]2024-04-10 05:25:59,794: None
[DEBUG]2024-04-10 05:25:59,794: None
[DEBUG]2024-04-10 05:25:59,794: None
[DEBUG]2024-04-10 05:25:59,794: None
[DEBUG]2024-04-10 12:14:33,014: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 12:14:33,014: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 12:14:33,014: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 12:14:33,029: None
[DEBUG]2024-04-10 12:14:33,029: None
[DEBUG]2024-04-10 12:14:33,048: None
[DEBUG]2024-04-10 12:14:33,048: None
[DEBUG]2024-04-10 12:14:33,048: None
[DEBUG]2024-04-10 12:14:33,070: None
[DEBUG]2024-04-10 12:14:33,070: None
[DEBUG]2024-04-10 12:14:33,070: None
[DEBUG]2024-04-10 12:14:33,070: None
[DEBUG]2024-04-10 12:14:33,092: None
[DEBUG]2024-04-10 12:14:33,092: None
[DEBUG]2024-04-10 12:14:33,092: None
[DEBUG]2024-04-10 12:14:33,092: None
[DEBUG]2024-04-10 12:14:33,092: None
[DEBUG]2024-04-10 12:14:33,110: None
[DEBUG]2024-04-10 12:14:33,110: None
[DEBUG]2024-04-10 12:14:33,110: None
[DEBUG]2024-04-10 12:14:33,110: None
[DEBUG]2024-04-10 12:14:33,110: None
[DEBUG]2024-04-10 12:14:33,110: None
[DEBUG]2024-04-10 12:14:33,124: None
[DEBUG]2024-04-10 12:14:33,124: None
[DEBUG]2024-04-10 12:14:33,124: None
[DEBUG]2024-04-10 12:14:33,124: None
[DEBUG]2024-04-10 12:14:33,124: None
[DEBUG]2024-04-10 12:14:33,124: None
[DEBUG]2024-04-10 12:14:33,124: None
[DEBUG]2024-04-10 12:14:33,138: None
[DEBUG]2024-04-10 12:14:33,138: None
[DEBUG]2024-04-10 12:14:33,138: None
[DEBUG]2024-04-10 12:14:33,138: None
[DEBUG]2024-04-10 12:14:33,138: None
[DEBUG]2024-04-10 12:14:33,138: None
[DEBUG]2024-04-10 12:14:33,138: None
[DEBUG]2024-04-10 12:14:33,138: None
[DEBUG]2024-04-10 12:14:33,153: None
[DEBUG]2024-04-10 12:14:33,153: None
[DEBUG]2024-04-10 12:14:33,153: None
[DEBUG]2024-04-10 12:14:33,153: None
[DEBUG]2024-04-10 12:14:33,153: None
[DEBUG]2024-04-10 12:14:33,153: None
[DEBUG]2024-04-10 12:14:33,153: None
[DEBUG]2024-04-10 12:14:33,153: None
[DEBUG]2024-04-10 12:14:33,153: None
[DEBUG]2024-04-10 12:14:33,165: None
[DEBUG]2024-04-10 12:14:33,165: None
[DEBUG]2024-04-10 12:14:33,165: None
[DEBUG]2024-04-10 12:14:33,165: None
[DEBUG]2024-04-10 12:14:33,165: None
[DEBUG]2024-04-10 12:14:33,165: None
[DEBUG]2024-04-10 12:14:33,165: None
[DEBUG]2024-04-10 12:14:33,165: None
[DEBUG]2024-04-10 12:14:33,165: None
[DEBUG]2024-04-10 12:14:33,165: None
[DEBUG]2024-04-10 12:14:33,176: None
[DEBUG]2024-04-10 12:14:33,176: None
[DEBUG]2024-04-10 12:14:33,176: None
[DEBUG]2024-04-10 12:14:33,176: None
[DEBUG]2024-04-10 12:14:33,176: None
[DEBUG]2024-04-10 12:14:33,176: None
[DEBUG]2024-04-10 12:14:33,176: None
[DEBUG]2024-04-10 12:14:33,176: None
[DEBUG]2024-04-10 12:14:33,176: None
[DEBUG]2024-04-10 12:14:33,176: None
[DEBUG]2024-04-10 12:14:33,176: None
[DEBUG]2024-04-10 12:14:33,189: None
[DEBUG]2024-04-10 12:14:33,189: None
[DEBUG]2024-04-10 12:14:33,189: None
[DEBUG]2024-04-10 12:14:33,189: None
[DEBUG]2024-04-10 12:14:33,189: None
[DEBUG]2024-04-10 12:14:33,189: None
[DEBUG]2024-04-10 12:14:33,189: None
[DEBUG]2024-04-10 12:14:33,189: None
[DEBUG]2024-04-10 12:14:33,189: None
[DEBUG]2024-04-10 12:14:33,189: None
[DEBUG]2024-04-10 12:14:33,189: None
[DEBUG]2024-04-10 12:14:33,189: None
[DEBUG]2024-04-10 12:14:33,202: None
[DEBUG]2024-04-10 12:14:33,202: None
[DEBUG]2024-04-10 12:14:33,202: None
[DEBUG]2024-04-10 12:14:33,202: None
[DEBUG]2024-04-10 12:14:33,202: None
[DEBUG]2024-04-10 12:14:33,202: None
[DEBUG]2024-04-10 12:14:33,202: None
[DEBUG]2024-04-10 12:14:33,202: None
[DEBUG]2024-04-10 12:14:33,202: None
[DEBUG]2024-04-10 12:14:33,202: None
[DEBUG]2024-04-10 12:14:33,202: None
[DEBUG]2024-04-10 12:14:33,202: None
[DEBUG]2024-04-10 12:14:33,202: None
[DEBUG]2024-04-10 12:14:33,204: None
[DEBUG]2024-04-10 12:14:33,204: None
[DEBUG]2024-04-10 12:14:33,204: None
[DEBUG]2024-04-10 12:14:33,204: None
[DEBUG]2024-04-10 12:14:33,204: None
[DEBUG]2024-04-10 12:14:33,204: None
[DEBUG]2024-04-10 12:14:33,204: None
[DEBUG]2024-04-10 12:14:33,204: None
[DEBUG]2024-04-10 12:14:33,204: None
[DEBUG]2024-04-10 12:14:33,204: None
[DEBUG]2024-04-10 12:14:33,204: None
[DEBUG]2024-04-10 12:14:33,204: None
[DEBUG]2024-04-10 12:14:33,204: None
[DEBUG]2024-04-10 12:14:33,204: None
[DEBUG]2024-04-10 12:14:33,206: None
[DEBUG]2024-04-10 12:14:33,206: None
[DEBUG]2024-04-10 12:14:33,206: None
[DEBUG]2024-04-10 12:14:33,206: None
[DEBUG]2024-04-10 12:14:33,206: None
[DEBUG]2024-04-10 12:14:33,206: None
[DEBUG]2024-04-10 12:14:33,206: None
[DEBUG]2024-04-10 12:14:33,206: None
[DEBUG]2024-04-10 12:14:33,206: None
[DEBUG]2024-04-10 12:14:33,206: None
[DEBUG]2024-04-10 12:14:33,206: None
[DEBUG]2024-04-10 12:14:33,206: None
[DEBUG]2024-04-10 12:14:33,206: None
[DEBUG]2024-04-10 12:14:33,206: None
[DEBUG]2024-04-10 12:14:33,206: None
[DEBUG]2024-04-10 12:14:33,210: None
[DEBUG]2024-04-10 12:14:33,210: None
[DEBUG]2024-04-10 12:14:33,210: None
[DEBUG]2024-04-10 12:14:33,210: None
[DEBUG]2024-04-10 12:14:33,210: None
[DEBUG]2024-04-10 12:14:33,210: None
[DEBUG]2024-04-10 12:14:33,210: None
[DEBUG]2024-04-10 12:14:33,210: None
[DEBUG]2024-04-10 12:14:33,210: None
[DEBUG]2024-04-10 12:14:33,210: None
[DEBUG]2024-04-10 12:14:33,210: None
[DEBUG]2024-04-10 12:14:33,210: None
[DEBUG]2024-04-10 12:14:33,210: None
[DEBUG]2024-04-10 12:14:33,210: None
[DEBUG]2024-04-10 12:14:33,210: None
[DEBUG]2024-04-10 12:14:33,210: None
[DEBUG]2024-04-10 12:14:33,212: <re.Match object; span=(3276, 3396), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 12:14:33,212: <re.Match object; span=(3276, 3396), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 12:14:33,212: <re.Match object; span=(3276, 3396), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 12:14:33,212: <re.Match object; span=(3276, 3396), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 12:14:33,212: <re.Match object; span=(3276, 3396), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 12:14:33,212: <re.Match object; span=(3276, 3396), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 12:14:33,212: <re.Match object; span=(3276, 3396), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 12:14:33,212: <re.Match object; span=(3276, 3396), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 12:14:33,212: <re.Match object; span=(3276, 3396), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 12:14:33,212: <re.Match object; span=(3276, 3396), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 12:14:33,212: <re.Match object; span=(3276, 3396), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 12:14:33,212: <re.Match object; span=(3276, 3396), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 12:14:33,212: <re.Match object; span=(3276, 3396), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 12:14:33,212: <re.Match object; span=(3276, 3396), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 12:14:33,212: <re.Match object; span=(3276, 3396), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 12:14:33,212: <re.Match object; span=(3276, 3396), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 12:14:33,212: <re.Match object; span=(3276, 3396), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 12:14:33,213: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 12:14:33,213: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 12:14:33,213: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 12:14:33,213: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 12:14:33,213: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 12:14:33,213: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 12:14:33,213: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 12:14:33,213: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 12:14:33,213: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 12:14:33,213: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 12:14:33,213: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 12:14:33,213: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 12:14:33,213: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 12:14:33,213: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 12:14:33,213: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 12:14:33,213: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 12:14:33,213: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP', 'EVADE_FORWARD']
[DEBUG]2024-04-10 12:14:33,214: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 12:14:33,214: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 12:14:33,214: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 12:14:33,214: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 12:14:33,214: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 12:14:33,214: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 12:14:33,214: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 12:14:33,214: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 12:14:33,214: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 12:14:33,214: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 12:14:33,214: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 12:14:33,214: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 12:14:33,214: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 12:14:33,214: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 12:14:33,214: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 12:14:33,214: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


[DEBUG]2024-04-10 12:14:33,214: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
	"EVADE_FORWARD",
};


