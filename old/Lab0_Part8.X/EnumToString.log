[DEBUG]2024-04-10 05:50:28,420: <re.Match object; span=(1081, 1810), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 05:50:28,420: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 05:50:28,420: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 05:50:28,430: None
[DEBUG]2024-04-10 05:50:28,430: None
[DEBUG]2024-04-10 05:50:28,432: None
[DEBUG]2024-04-10 05:50:28,432: None
[DEBUG]2024-04-10 05:50:28,432: None
[DEBUG]2024-04-10 05:50:28,433: None
[DEBUG]2024-04-10 05:50:28,433: None
[DEBUG]2024-04-10 05:50:28,433: None
[DEBUG]2024-04-10 05:50:28,433: None
[DEBUG]2024-04-10 05:50:28,434: None
[DEBUG]2024-04-10 05:50:28,434: None
[DEBUG]2024-04-10 05:50:28,434: None
[DEBUG]2024-04-10 05:50:28,434: None
[DEBUG]2024-04-10 05:50:28,434: None
[DEBUG]2024-04-10 05:50:28,435: None
[DEBUG]2024-04-10 05:50:28,435: None
[DEBUG]2024-04-10 05:50:28,435: None
[DEBUG]2024-04-10 05:50:28,435: None
[DEBUG]2024-04-10 05:50:28,435: None
[DEBUG]2024-04-10 05:50:28,435: None
[DEBUG]2024-04-10 05:50:28,436: None
[DEBUG]2024-04-10 05:50:28,436: None
[DEBUG]2024-04-10 05:50:28,436: None
[DEBUG]2024-04-10 05:50:28,436: None
[DEBUG]2024-04-10 05:50:28,436: None
[DEBUG]2024-04-10 05:50:28,436: None
[DEBUG]2024-04-10 05:50:28,436: None
[DEBUG]2024-04-10 05:50:28,437: None
[DEBUG]2024-04-10 05:50:28,437: None
[DEBUG]2024-04-10 05:50:28,437: None
[DEBUG]2024-04-10 05:50:28,437: None
[DEBUG]2024-04-10 05:50:28,437: None
[DEBUG]2024-04-10 05:50:28,437: None
[DEBUG]2024-04-10 05:50:28,437: None
[DEBUG]2024-04-10 05:50:28,437: None
[DEBUG]2024-04-10 05:50:28,439: None
[DEBUG]2024-04-10 05:50:28,439: None
[DEBUG]2024-04-10 05:50:28,439: None
[DEBUG]2024-04-10 05:50:28,439: None
[DEBUG]2024-04-10 05:50:28,439: None
[DEBUG]2024-04-10 05:50:28,439: None
[DEBUG]2024-04-10 05:50:28,439: None
[DEBUG]2024-04-10 05:50:28,439: None
[DEBUG]2024-04-10 05:50:28,439: None
[DEBUG]2024-04-10 05:50:28,440: None
[DEBUG]2024-04-10 05:50:28,440: None
[DEBUG]2024-04-10 05:50:28,440: None
[DEBUG]2024-04-10 05:50:28,440: None
[DEBUG]2024-04-10 05:50:28,440: None
[DEBUG]2024-04-10 05:50:28,440: None
[DEBUG]2024-04-10 05:50:28,440: None
[DEBUG]2024-04-10 05:50:28,440: None
[DEBUG]2024-04-10 05:50:28,440: None
[DEBUG]2024-04-10 05:50:28,440: None
[DEBUG]2024-04-10 05:50:28,441: None
[DEBUG]2024-04-10 05:50:28,441: None
[DEBUG]2024-04-10 05:50:28,441: None
[DEBUG]2024-04-10 05:50:28,441: None
[DEBUG]2024-04-10 05:50:28,441: None
[DEBUG]2024-04-10 05:50:28,441: None
[DEBUG]2024-04-10 05:50:28,441: None
[DEBUG]2024-04-10 05:50:28,441: None
[DEBUG]2024-04-10 05:50:28,441: None
[DEBUG]2024-04-10 05:50:28,441: None
[DEBUG]2024-04-10 05:50:28,441: None
[DEBUG]2024-04-10 05:50:28,443: None
[DEBUG]2024-04-10 05:50:28,443: None
[DEBUG]2024-04-10 05:50:28,443: None
[DEBUG]2024-04-10 05:50:28,443: None
[DEBUG]2024-04-10 05:50:28,443: None
[DEBUG]2024-04-10 05:50:28,443: None
[DEBUG]2024-04-10 05:50:28,443: None
[DEBUG]2024-04-10 05:50:28,443: None
[DEBUG]2024-04-10 05:50:28,443: None
[DEBUG]2024-04-10 05:50:28,443: None
[DEBUG]2024-04-10 05:50:28,443: None
[DEBUG]2024-04-10 05:50:28,443: None
[DEBUG]2024-04-10 05:50:28,444: None
[DEBUG]2024-04-10 05:50:28,444: None
[DEBUG]2024-04-10 05:50:28,444: None
[DEBUG]2024-04-10 05:50:28,444: None
[DEBUG]2024-04-10 05:50:28,444: None
[DEBUG]2024-04-10 05:50:28,444: None
[DEBUG]2024-04-10 05:50:28,444: None
[DEBUG]2024-04-10 05:50:28,444: None
[DEBUG]2024-04-10 05:50:28,444: None
[DEBUG]2024-04-10 05:50:28,444: None
[DEBUG]2024-04-10 05:50:28,444: None
[DEBUG]2024-04-10 05:50:28,444: None
[DEBUG]2024-04-10 05:50:28,444: None
[DEBUG]2024-04-10 05:50:28,445: None
[DEBUG]2024-04-10 05:50:28,445: None
[DEBUG]2024-04-10 05:50:28,445: None
[DEBUG]2024-04-10 05:50:28,445: None
[DEBUG]2024-04-10 05:50:28,445: None
[DEBUG]2024-04-10 05:50:28,445: None
[DEBUG]2024-04-10 05:50:28,445: None
[DEBUG]2024-04-10 05:50:28,445: None
[DEBUG]2024-04-10 05:50:28,445: None
[DEBUG]2024-04-10 05:50:28,445: None
[DEBUG]2024-04-10 05:50:28,445: None
[DEBUG]2024-04-10 05:50:28,445: None
[DEBUG]2024-04-10 05:50:28,445: None
[DEBUG]2024-04-10 05:50:28,445: None
[DEBUG]2024-04-10 05:50:28,447: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 05:50:28,447: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 05:50:28,447: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 05:50:28,447: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 05:50:28,447: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 05:50:28,447: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 05:50:28,447: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 05:50:28,447: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 05:50:28,447: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 05:50:28,447: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 05:50:28,447: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 05:50:28,447: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 05:50:28,447: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 05:50:28,447: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 05:50:28,447: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 05:50:28,448: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 05:50:28,448: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 05:50:28,448: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 05:50:28,448: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 05:50:28,448: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 05:50:28,448: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 05:50:28,448: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 05:50:28,448: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 05:50:28,448: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 05:50:28,448: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 05:50:28,448: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 05:50:28,448: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 05:50:28,448: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 05:50:28,448: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 05:50:28,448: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 05:50:28,448: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 05:50:28,448: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 05:50:28,448: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 05:50:28,448: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 05:50:28,448: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 05:50:28,448: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 05:50:28,448: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 05:50:28,448: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 05:50:28,448: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 05:50:28,448: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 05:50:28,448: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 05:50:28,448: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 05:50:28,448: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 05:50:28,448: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 05:50:28,448: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 05:50:28,450: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 05:50:28,450: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 05:50:28,450: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 05:50:28,450: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 05:50:28,450: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 05:50:28,450: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 05:50:28,450: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 05:50:28,450: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 05:50:28,450: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 05:50:28,450: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 05:50:28,450: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 05:50:28,450: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 05:50:28,450: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 05:50:28,450: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 05:50:28,450: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 05:50:28,450: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 05:50:28,451: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 05:50:28,451: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 05:50:28,451: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 05:50:28,451: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 05:50:28,451: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 05:50:28,451: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 05:50:28,451: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 05:50:28,451: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 05:50:28,451: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 05:50:28,451: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 05:50:28,451: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 05:50:28,451: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 05:50:28,451: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 05:50:28,451: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 05:50:28,451: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 05:50:28,451: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 05:50:28,452: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 05:50:28,452: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 05:50:28,452: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 05:50:28,452: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 05:50:28,452: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 05:50:28,452: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 05:50:28,452: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 05:50:28,452: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 05:50:28,452: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 05:50:28,452: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 05:50:28,452: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 05:50:28,452: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 05:50:28,452: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 05:50:28,452: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 05:50:28,452: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 05:50:28,452: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 05:51:25,837: <re.Match object; span=(1081, 1810), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 05:51:25,838: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 05:51:25,838: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 05:51:25,839: None
[DEBUG]2024-04-10 05:51:25,839: None
[DEBUG]2024-04-10 05:51:25,840: None
[DEBUG]2024-04-10 05:51:25,840: None
[DEBUG]2024-04-10 05:51:25,840: None
[DEBUG]2024-04-10 05:51:25,840: None
[DEBUG]2024-04-10 05:51:25,840: None
[DEBUG]2024-04-10 05:51:25,840: None
[DEBUG]2024-04-10 05:51:25,840: None
[DEBUG]2024-04-10 05:51:25,841: None
[DEBUG]2024-04-10 05:51:25,841: None
[DEBUG]2024-04-10 05:51:25,841: None
[DEBUG]2024-04-10 05:51:25,841: None
[DEBUG]2024-04-10 05:51:25,841: None
[DEBUG]2024-04-10 05:51:25,842: None
[DEBUG]2024-04-10 05:51:25,842: None
[DEBUG]2024-04-10 05:51:25,842: None
[DEBUG]2024-04-10 05:51:25,842: None
[DEBUG]2024-04-10 05:51:25,842: None
[DEBUG]2024-04-10 05:51:25,842: None
[DEBUG]2024-04-10 05:51:25,842: None
[DEBUG]2024-04-10 05:51:25,842: None
[DEBUG]2024-04-10 05:51:25,842: None
[DEBUG]2024-04-10 05:51:25,842: None
[DEBUG]2024-04-10 05:51:25,842: None
[DEBUG]2024-04-10 05:51:25,842: None
[DEBUG]2024-04-10 05:51:25,842: None
[DEBUG]2024-04-10 05:51:25,843: None
[DEBUG]2024-04-10 05:51:25,843: None
[DEBUG]2024-04-10 05:51:25,843: None
[DEBUG]2024-04-10 05:51:25,843: None
[DEBUG]2024-04-10 05:51:25,843: None
[DEBUG]2024-04-10 05:51:25,843: None
[DEBUG]2024-04-10 05:51:25,843: None
[DEBUG]2024-04-10 05:51:25,843: None
[DEBUG]2024-04-10 05:51:25,844: None
[DEBUG]2024-04-10 05:51:25,844: None
[DEBUG]2024-04-10 05:51:25,844: None
[DEBUG]2024-04-10 05:51:25,844: None
[DEBUG]2024-04-10 05:51:25,844: None
[DEBUG]2024-04-10 05:51:25,844: None
[DEBUG]2024-04-10 05:51:25,844: None
[DEBUG]2024-04-10 05:51:25,844: None
[DEBUG]2024-04-10 05:51:25,844: None
[DEBUG]2024-04-10 05:51:25,845: None
[DEBUG]2024-04-10 05:51:25,845: None
[DEBUG]2024-04-10 05:51:25,845: None
[DEBUG]2024-04-10 05:51:25,845: None
[DEBUG]2024-04-10 05:51:25,845: None
[DEBUG]2024-04-10 05:51:25,845: None
[DEBUG]2024-04-10 05:51:25,845: None
[DEBUG]2024-04-10 05:51:25,845: None
[DEBUG]2024-04-10 05:51:25,845: None
[DEBUG]2024-04-10 05:51:25,845: None
[DEBUG]2024-04-10 05:51:25,846: None
[DEBUG]2024-04-10 05:51:25,846: None
[DEBUG]2024-04-10 05:51:25,846: None
[DEBUG]2024-04-10 05:51:25,846: None
[DEBUG]2024-04-10 05:51:25,846: None
[DEBUG]2024-04-10 05:51:25,846: None
[DEBUG]2024-04-10 05:51:25,846: None
[DEBUG]2024-04-10 05:51:25,846: None
[DEBUG]2024-04-10 05:51:25,846: None
[DEBUG]2024-04-10 05:51:25,846: None
[DEBUG]2024-04-10 05:51:25,846: None
[DEBUG]2024-04-10 05:51:25,847: None
[DEBUG]2024-04-10 05:51:25,847: None
[DEBUG]2024-04-10 05:51:25,847: None
[DEBUG]2024-04-10 05:51:25,847: None
[DEBUG]2024-04-10 05:51:25,847: None
[DEBUG]2024-04-10 05:51:25,847: None
[DEBUG]2024-04-10 05:51:25,847: None
[DEBUG]2024-04-10 05:51:25,847: None
[DEBUG]2024-04-10 05:51:25,847: None
[DEBUG]2024-04-10 05:51:25,847: None
[DEBUG]2024-04-10 05:51:25,847: None
[DEBUG]2024-04-10 05:51:25,847: None
[DEBUG]2024-04-10 05:51:25,848: None
[DEBUG]2024-04-10 05:51:25,848: None
[DEBUG]2024-04-10 05:51:25,848: None
[DEBUG]2024-04-10 05:51:25,848: None
[DEBUG]2024-04-10 05:51:25,848: None
[DEBUG]2024-04-10 05:51:25,848: None
[DEBUG]2024-04-10 05:51:25,848: None
[DEBUG]2024-04-10 05:51:25,848: None
[DEBUG]2024-04-10 05:51:25,848: None
[DEBUG]2024-04-10 05:51:25,848: None
[DEBUG]2024-04-10 05:51:25,848: None
[DEBUG]2024-04-10 05:51:25,848: None
[DEBUG]2024-04-10 05:51:25,848: None
[DEBUG]2024-04-10 05:51:25,849: None
[DEBUG]2024-04-10 05:51:25,849: None
[DEBUG]2024-04-10 05:51:25,849: None
[DEBUG]2024-04-10 05:51:25,849: None
[DEBUG]2024-04-10 05:51:25,849: None
[DEBUG]2024-04-10 05:51:25,849: None
[DEBUG]2024-04-10 05:51:25,849: None
[DEBUG]2024-04-10 05:51:25,849: None
[DEBUG]2024-04-10 05:51:25,849: None
[DEBUG]2024-04-10 05:51:25,849: None
[DEBUG]2024-04-10 05:51:25,849: None
[DEBUG]2024-04-10 05:51:25,849: None
[DEBUG]2024-04-10 05:51:25,849: None
[DEBUG]2024-04-10 05:51:25,849: None
[DEBUG]2024-04-10 05:51:25,850: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 05:51:25,850: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 05:51:25,850: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 05:51:25,850: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 05:51:25,850: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 05:51:25,850: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 05:51:25,850: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 05:51:25,850: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 05:51:25,850: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 05:51:25,850: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 05:51:25,850: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 05:51:25,850: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 05:51:25,850: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 05:51:25,850: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 05:51:25,850: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 05:51:25,850: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 05:51:25,850: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 05:51:25,850: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 05:51:25,850: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 05:51:25,850: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 05:51:25,850: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 05:51:25,850: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 05:51:25,850: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 05:51:25,850: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 05:51:25,850: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 05:51:25,850: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 05:51:25,850: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 05:51:25,850: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 05:51:25,850: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 05:51:25,850: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 05:51:25,851: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 05:51:25,851: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 05:51:25,851: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 05:51:25,851: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 05:51:25,851: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 05:51:25,851: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 05:51:25,851: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 05:51:25,851: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 05:51:25,851: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 05:51:25,851: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 05:51:25,851: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 05:51:25,851: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 05:51:25,851: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 05:51:25,851: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 05:51:25,851: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 05:51:25,852: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 05:51:25,852: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 05:51:25,852: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 05:51:25,852: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 05:51:25,852: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 05:51:25,852: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 05:51:25,852: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 05:51:25,852: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 05:51:25,852: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 05:51:25,852: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 05:51:25,852: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 05:51:25,852: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 05:51:25,852: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 05:51:25,852: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 05:51:25,852: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 05:51:25,852: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 05:51:25,853: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 05:51:25,853: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 05:51:25,853: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 05:51:25,853: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 05:51:25,853: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 05:51:25,853: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 05:51:25,853: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 05:51:25,853: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 05:51:25,853: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 05:51:25,853: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 05:51:25,853: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 05:51:25,853: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 05:51:25,853: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 05:51:25,853: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 05:51:25,853: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 05:51:25,853: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 05:51:25,853: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 05:51:25,853: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 05:51:25,853: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 05:51:25,853: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 05:51:25,853: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 05:51:25,853: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 05:51:25,853: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 05:51:25,853: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 05:51:25,853: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 05:51:25,853: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 05:51:25,853: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 05:51:25,853: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 05:51:25,853: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 05:51:25,853: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 05:51:25,853: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 05:51:25,853: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 05:59:57,331: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 05:59:57,331: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 05:59:57,331: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 05:59:57,334: None
[DEBUG]2024-04-10 05:59:57,334: None
[DEBUG]2024-04-10 05:59:57,334: None
[DEBUG]2024-04-10 05:59:57,334: None
[DEBUG]2024-04-10 05:59:57,334: None
[DEBUG]2024-04-10 05:59:57,335: None
[DEBUG]2024-04-10 05:59:57,335: None
[DEBUG]2024-04-10 05:59:57,335: None
[DEBUG]2024-04-10 05:59:57,335: None
[DEBUG]2024-04-10 05:59:57,336: None
[DEBUG]2024-04-10 05:59:57,336: None
[DEBUG]2024-04-10 05:59:57,336: None
[DEBUG]2024-04-10 05:59:57,336: None
[DEBUG]2024-04-10 05:59:57,336: None
[DEBUG]2024-04-10 05:59:57,336: None
[DEBUG]2024-04-10 05:59:57,336: None
[DEBUG]2024-04-10 05:59:57,336: None
[DEBUG]2024-04-10 05:59:57,336: None
[DEBUG]2024-04-10 05:59:57,336: None
[DEBUG]2024-04-10 05:59:57,336: None
[DEBUG]2024-04-10 05:59:57,337: None
[DEBUG]2024-04-10 05:59:57,337: None
[DEBUG]2024-04-10 05:59:57,337: None
[DEBUG]2024-04-10 05:59:57,337: None
[DEBUG]2024-04-10 05:59:57,337: None
[DEBUG]2024-04-10 05:59:57,337: None
[DEBUG]2024-04-10 05:59:57,337: None
[DEBUG]2024-04-10 05:59:57,338: None
[DEBUG]2024-04-10 05:59:57,338: None
[DEBUG]2024-04-10 05:59:57,338: None
[DEBUG]2024-04-10 05:59:57,338: None
[DEBUG]2024-04-10 05:59:57,338: None
[DEBUG]2024-04-10 05:59:57,338: None
[DEBUG]2024-04-10 05:59:57,338: None
[DEBUG]2024-04-10 05:59:57,338: None
[DEBUG]2024-04-10 05:59:57,339: None
[DEBUG]2024-04-10 05:59:57,339: None
[DEBUG]2024-04-10 05:59:57,339: None
[DEBUG]2024-04-10 05:59:57,339: None
[DEBUG]2024-04-10 05:59:57,339: None
[DEBUG]2024-04-10 05:59:57,339: None
[DEBUG]2024-04-10 05:59:57,339: None
[DEBUG]2024-04-10 05:59:57,339: None
[DEBUG]2024-04-10 05:59:57,339: None
[DEBUG]2024-04-10 05:59:57,339: None
[DEBUG]2024-04-10 05:59:57,339: None
[DEBUG]2024-04-10 05:59:57,339: None
[DEBUG]2024-04-10 05:59:57,339: None
[DEBUG]2024-04-10 05:59:57,339: None
[DEBUG]2024-04-10 05:59:57,339: None
[DEBUG]2024-04-10 05:59:57,339: None
[DEBUG]2024-04-10 05:59:57,339: None
[DEBUG]2024-04-10 05:59:57,339: None
[DEBUG]2024-04-10 05:59:57,339: None
[DEBUG]2024-04-10 05:59:57,340: None
[DEBUG]2024-04-10 05:59:57,340: None
[DEBUG]2024-04-10 05:59:57,340: None
[DEBUG]2024-04-10 05:59:57,340: None
[DEBUG]2024-04-10 05:59:57,340: None
[DEBUG]2024-04-10 05:59:57,340: None
[DEBUG]2024-04-10 05:59:57,340: None
[DEBUG]2024-04-10 05:59:57,340: None
[DEBUG]2024-04-10 05:59:57,340: None
[DEBUG]2024-04-10 05:59:57,340: None
[DEBUG]2024-04-10 05:59:57,340: None
[DEBUG]2024-04-10 05:59:57,341: None
[DEBUG]2024-04-10 05:59:57,341: None
[DEBUG]2024-04-10 05:59:57,341: None
[DEBUG]2024-04-10 05:59:57,341: None
[DEBUG]2024-04-10 05:59:57,341: None
[DEBUG]2024-04-10 05:59:57,341: None
[DEBUG]2024-04-10 05:59:57,341: None
[DEBUG]2024-04-10 05:59:57,341: None
[DEBUG]2024-04-10 05:59:57,341: None
[DEBUG]2024-04-10 05:59:57,341: None
[DEBUG]2024-04-10 05:59:57,341: None
[DEBUG]2024-04-10 05:59:57,341: None
[DEBUG]2024-04-10 05:59:57,342: None
[DEBUG]2024-04-10 05:59:57,342: None
[DEBUG]2024-04-10 05:59:57,342: None
[DEBUG]2024-04-10 05:59:57,342: None
[DEBUG]2024-04-10 05:59:57,342: None
[DEBUG]2024-04-10 05:59:57,342: None
[DEBUG]2024-04-10 05:59:57,342: None
[DEBUG]2024-04-10 05:59:57,342: None
[DEBUG]2024-04-10 05:59:57,342: None
[DEBUG]2024-04-10 05:59:57,342: None
[DEBUG]2024-04-10 05:59:57,342: None
[DEBUG]2024-04-10 05:59:57,342: None
[DEBUG]2024-04-10 05:59:57,342: None
[DEBUG]2024-04-10 05:59:57,343: None
[DEBUG]2024-04-10 05:59:57,343: None
[DEBUG]2024-04-10 05:59:57,343: None
[DEBUG]2024-04-10 05:59:57,343: None
[DEBUG]2024-04-10 05:59:57,343: None
[DEBUG]2024-04-10 05:59:57,343: None
[DEBUG]2024-04-10 05:59:57,343: None
[DEBUG]2024-04-10 05:59:57,343: None
[DEBUG]2024-04-10 05:59:57,343: None
[DEBUG]2024-04-10 05:59:57,343: None
[DEBUG]2024-04-10 05:59:57,343: None
[DEBUG]2024-04-10 05:59:57,343: None
[DEBUG]2024-04-10 05:59:57,343: None
[DEBUG]2024-04-10 05:59:57,343: None
[DEBUG]2024-04-10 05:59:57,344: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 05:59:57,344: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 05:59:57,344: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 05:59:57,344: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 05:59:57,344: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 05:59:57,344: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 05:59:57,344: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 05:59:57,344: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 05:59:57,344: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 05:59:57,344: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 05:59:57,344: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 05:59:57,344: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 05:59:57,344: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 05:59:57,344: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 05:59:57,344: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 05:59:57,344: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 05:59:57,344: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 05:59:57,344: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 05:59:57,344: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 05:59:57,344: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 05:59:57,344: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 05:59:57,344: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 05:59:57,344: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 05:59:57,344: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 05:59:57,344: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 05:59:57,344: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 05:59:57,344: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 05:59:57,344: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 05:59:57,344: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 05:59:57,344: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 05:59:57,345: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 05:59:57,345: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 05:59:57,345: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 05:59:57,345: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 05:59:57,345: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 05:59:57,345: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 05:59:57,345: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 05:59:57,345: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 05:59:57,345: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 05:59:57,345: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 05:59:57,345: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 05:59:57,345: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 05:59:57,345: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 05:59:57,345: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 05:59:57,345: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 05:59:57,347: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 05:59:57,347: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 05:59:57,347: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 05:59:57,347: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 05:59:57,347: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 05:59:57,347: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 05:59:57,347: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 05:59:57,347: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 05:59:57,347: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 05:59:57,347: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 05:59:57,347: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 05:59:57,347: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 05:59:57,347: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 05:59:57,347: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 05:59:57,347: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 05:59:57,347: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 05:59:57,347: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 05:59:57,347: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 05:59:57,347: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 05:59:57,347: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 05:59:57,347: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 05:59:57,347: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 05:59:57,347: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 05:59:57,347: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 05:59:57,347: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 05:59:57,347: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 05:59:57,347: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 05:59:57,347: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 05:59:57,347: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 05:59:57,347: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 05:59:57,347: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 05:59:57,347: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 05:59:57,348: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 05:59:57,348: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 05:59:57,348: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 05:59:57,348: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 05:59:57,348: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 05:59:57,348: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 05:59:57,348: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 05:59:57,348: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 05:59:57,348: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 05:59:57,348: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 05:59:57,348: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 05:59:57,348: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 05:59:57,348: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 05:59:57,348: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 05:59:57,348: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 05:59:57,348: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 05:59:57,349: None
[DEBUG]2024-04-10 05:59:57,349: None
[DEBUG]2024-04-10 05:59:57,349: None
[DEBUG]2024-04-10 05:59:57,349: None
[DEBUG]2024-04-10 05:59:57,349: None
[DEBUG]2024-04-10 05:59:57,349: None
[DEBUG]2024-04-10 05:59:57,349: None
[DEBUG]2024-04-10 05:59:57,349: None
[DEBUG]2024-04-10 05:59:57,349: None
[DEBUG]2024-04-10 05:59:57,349: None
[DEBUG]2024-04-10 05:59:57,349: None
[DEBUG]2024-04-10 05:59:57,349: None
[DEBUG]2024-04-10 05:59:57,349: None
[DEBUG]2024-04-10 05:59:57,349: None
[DEBUG]2024-04-10 05:59:57,349: None
[DEBUG]2024-04-10 05:59:57,349: None
[DEBUG]2024-04-10 05:59:57,349: None
[DEBUG]2024-04-10 05:59:57,350: None
[DEBUG]2024-04-10 05:59:57,350: None
[DEBUG]2024-04-10 05:59:57,350: None
[DEBUG]2024-04-10 05:59:57,350: None
[DEBUG]2024-04-10 05:59:57,350: None
[DEBUG]2024-04-10 05:59:57,350: None
[DEBUG]2024-04-10 05:59:57,350: None
[DEBUG]2024-04-10 05:59:57,350: None
[DEBUG]2024-04-10 05:59:57,350: None
[DEBUG]2024-04-10 05:59:57,350: None
[DEBUG]2024-04-10 05:59:57,350: None
[DEBUG]2024-04-10 05:59:57,350: None
[DEBUG]2024-04-10 05:59:57,350: None
[DEBUG]2024-04-10 05:59:57,350: None
[DEBUG]2024-04-10 05:59:57,350: None
[DEBUG]2024-04-10 05:59:57,350: None
[DEBUG]2024-04-10 05:59:57,350: None
[DEBUG]2024-04-10 05:59:57,350: None
[DEBUG]2024-04-10 06:01:00,593: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 06:01:00,593: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 06:01:00,593: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 06:01:00,595: None
[DEBUG]2024-04-10 06:01:00,595: None
[DEBUG]2024-04-10 06:01:00,595: None
[DEBUG]2024-04-10 06:01:00,595: None
[DEBUG]2024-04-10 06:01:00,595: None
[DEBUG]2024-04-10 06:01:00,596: None
[DEBUG]2024-04-10 06:01:00,596: None
[DEBUG]2024-04-10 06:01:00,596: None
[DEBUG]2024-04-10 06:01:00,596: None
[DEBUG]2024-04-10 06:01:00,596: None
[DEBUG]2024-04-10 06:01:00,596: None
[DEBUG]2024-04-10 06:01:00,596: None
[DEBUG]2024-04-10 06:01:00,596: None
[DEBUG]2024-04-10 06:01:00,596: None
[DEBUG]2024-04-10 06:01:00,597: None
[DEBUG]2024-04-10 06:01:00,597: None
[DEBUG]2024-04-10 06:01:00,597: None
[DEBUG]2024-04-10 06:01:00,597: None
[DEBUG]2024-04-10 06:01:00,597: None
[DEBUG]2024-04-10 06:01:00,597: None
[DEBUG]2024-04-10 06:01:00,598: None
[DEBUG]2024-04-10 06:01:00,598: None
[DEBUG]2024-04-10 06:01:00,598: None
[DEBUG]2024-04-10 06:01:00,598: None
[DEBUG]2024-04-10 06:01:00,598: None
[DEBUG]2024-04-10 06:01:00,598: None
[DEBUG]2024-04-10 06:01:00,598: None
[DEBUG]2024-04-10 06:01:00,599: None
[DEBUG]2024-04-10 06:01:00,599: None
[DEBUG]2024-04-10 06:01:00,599: None
[DEBUG]2024-04-10 06:01:00,599: None
[DEBUG]2024-04-10 06:01:00,599: None
[DEBUG]2024-04-10 06:01:00,599: None
[DEBUG]2024-04-10 06:01:00,599: None
[DEBUG]2024-04-10 06:01:00,599: None
[DEBUG]2024-04-10 06:01:00,599: None
[DEBUG]2024-04-10 06:01:00,599: None
[DEBUG]2024-04-10 06:01:00,599: None
[DEBUG]2024-04-10 06:01:00,599: None
[DEBUG]2024-04-10 06:01:00,599: None
[DEBUG]2024-04-10 06:01:00,599: None
[DEBUG]2024-04-10 06:01:00,599: None
[DEBUG]2024-04-10 06:01:00,599: None
[DEBUG]2024-04-10 06:01:00,599: None
[DEBUG]2024-04-10 06:01:00,600: None
[DEBUG]2024-04-10 06:01:00,600: None
[DEBUG]2024-04-10 06:01:00,600: None
[DEBUG]2024-04-10 06:01:00,600: None
[DEBUG]2024-04-10 06:01:00,600: None
[DEBUG]2024-04-10 06:01:00,600: None
[DEBUG]2024-04-10 06:01:00,600: None
[DEBUG]2024-04-10 06:01:00,600: None
[DEBUG]2024-04-10 06:01:00,600: None
[DEBUG]2024-04-10 06:01:00,600: None
[DEBUG]2024-04-10 06:01:00,601: None
[DEBUG]2024-04-10 06:01:00,601: None
[DEBUG]2024-04-10 06:01:00,601: None
[DEBUG]2024-04-10 06:01:00,601: None
[DEBUG]2024-04-10 06:01:00,601: None
[DEBUG]2024-04-10 06:01:00,601: None
[DEBUG]2024-04-10 06:01:00,601: None
[DEBUG]2024-04-10 06:01:00,601: None
[DEBUG]2024-04-10 06:01:00,601: None
[DEBUG]2024-04-10 06:01:00,601: None
[DEBUG]2024-04-10 06:01:00,601: None
[DEBUG]2024-04-10 06:01:00,602: None
[DEBUG]2024-04-10 06:01:00,602: None
[DEBUG]2024-04-10 06:01:00,602: None
[DEBUG]2024-04-10 06:01:00,602: None
[DEBUG]2024-04-10 06:01:00,602: None
[DEBUG]2024-04-10 06:01:00,602: None
[DEBUG]2024-04-10 06:01:00,602: None
[DEBUG]2024-04-10 06:01:00,602: None
[DEBUG]2024-04-10 06:01:00,602: None
[DEBUG]2024-04-10 06:01:00,602: None
[DEBUG]2024-04-10 06:01:00,602: None
[DEBUG]2024-04-10 06:01:00,602: None
[DEBUG]2024-04-10 06:01:00,603: None
[DEBUG]2024-04-10 06:01:00,603: None
[DEBUG]2024-04-10 06:01:00,603: None
[DEBUG]2024-04-10 06:01:00,603: None
[DEBUG]2024-04-10 06:01:00,603: None
[DEBUG]2024-04-10 06:01:00,603: None
[DEBUG]2024-04-10 06:01:00,603: None
[DEBUG]2024-04-10 06:01:00,603: None
[DEBUG]2024-04-10 06:01:00,603: None
[DEBUG]2024-04-10 06:01:00,603: None
[DEBUG]2024-04-10 06:01:00,603: None
[DEBUG]2024-04-10 06:01:00,603: None
[DEBUG]2024-04-10 06:01:00,603: None
[DEBUG]2024-04-10 06:01:00,603: None
[DEBUG]2024-04-10 06:01:00,603: None
[DEBUG]2024-04-10 06:01:00,603: None
[DEBUG]2024-04-10 06:01:00,603: None
[DEBUG]2024-04-10 06:01:00,603: None
[DEBUG]2024-04-10 06:01:00,603: None
[DEBUG]2024-04-10 06:01:00,603: None
[DEBUG]2024-04-10 06:01:00,603: None
[DEBUG]2024-04-10 06:01:00,603: None
[DEBUG]2024-04-10 06:01:00,603: None
[DEBUG]2024-04-10 06:01:00,603: None
[DEBUG]2024-04-10 06:01:00,603: None
[DEBUG]2024-04-10 06:01:00,603: None
[DEBUG]2024-04-10 06:01:00,603: None
[DEBUG]2024-04-10 06:01:00,604: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 06:01:00,604: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 06:01:00,604: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 06:01:00,604: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 06:01:00,604: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 06:01:00,604: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 06:01:00,604: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 06:01:00,604: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 06:01:00,604: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 06:01:00,604: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 06:01:00,604: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 06:01:00,604: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 06:01:00,604: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 06:01:00,604: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 06:01:00,604: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2024-04-10 06:01:00,605: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 06:01:00,605: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 06:01:00,605: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 06:01:00,605: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 06:01:00,605: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 06:01:00,605: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 06:01:00,605: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 06:01:00,605: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 06:01:00,605: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 06:01:00,605: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 06:01:00,605: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 06:01:00,605: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 06:01:00,605: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 06:01:00,605: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 06:01:00,605: ['InitPState', 'FirstState']
[DEBUG]2024-04-10 06:01:00,605: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 06:01:00,605: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 06:01:00,605: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 06:01:00,605: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 06:01:00,605: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 06:01:00,605: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 06:01:00,605: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 06:01:00,605: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 06:01:00,605: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 06:01:00,605: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 06:01:00,605: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 06:01:00,605: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 06:01:00,605: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 06:01:00,605: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 06:01:00,605: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2024-04-10 06:01:00,606: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:01:00,606: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:01:00,606: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:01:00,606: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:01:00,606: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:01:00,606: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:01:00,606: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:01:00,606: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:01:00,606: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:01:00,606: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:01:00,606: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:01:00,606: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:01:00,606: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:01:00,606: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:01:00,606: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:01:00,606: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:01:00,607: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:01:00,607: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:01:00,607: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:01:00,607: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:01:00,607: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:01:00,607: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:01:00,607: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:01:00,607: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:01:00,607: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:01:00,607: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:01:00,607: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:01:00,607: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:01:00,607: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:01:00,607: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:01:00,607: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:01:00,607: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:01:00,607: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:01:00,607: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:01:00,607: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:01:00,607: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:01:00,607: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:01:00,607: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:01:00,607: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:01:00,607: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:01:00,607: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:01:00,607: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:01:00,607: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:01:00,607: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:01:00,607: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:01:00,607: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:01:00,607: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:01:00,607: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:01:00,608: None
[DEBUG]2024-04-10 06:01:00,608: None
[DEBUG]2024-04-10 06:01:00,608: None
[DEBUG]2024-04-10 06:01:00,608: None
[DEBUG]2024-04-10 06:01:00,608: None
[DEBUG]2024-04-10 06:01:00,608: None
[DEBUG]2024-04-10 06:01:00,608: None
[DEBUG]2024-04-10 06:01:00,608: None
[DEBUG]2024-04-10 06:01:00,608: None
[DEBUG]2024-04-10 06:01:00,608: None
[DEBUG]2024-04-10 06:01:00,608: None
[DEBUG]2024-04-10 06:01:00,608: None
[DEBUG]2024-04-10 06:01:00,608: None
[DEBUG]2024-04-10 06:01:00,608: None
[DEBUG]2024-04-10 06:01:00,608: None
[DEBUG]2024-04-10 06:01:00,608: None
[DEBUG]2024-04-10 06:01:00,608: None
[DEBUG]2024-04-10 06:01:00,609: None
[DEBUG]2024-04-10 06:01:00,609: None
[DEBUG]2024-04-10 06:01:00,609: None
[DEBUG]2024-04-10 06:01:00,609: None
[DEBUG]2024-04-10 06:01:00,609: None
[DEBUG]2024-04-10 06:01:00,609: None
[DEBUG]2024-04-10 06:01:00,609: None
[DEBUG]2024-04-10 06:01:00,609: None
[DEBUG]2024-04-10 06:01:00,609: None
[DEBUG]2024-04-10 06:01:00,609: None
[DEBUG]2024-04-10 06:01:00,609: None
[DEBUG]2024-04-10 06:01:00,609: None
[DEBUG]2024-04-10 06:01:00,609: None
[DEBUG]2024-04-10 06:01:00,609: None
[DEBUG]2024-04-10 06:01:00,609: None
[DEBUG]2024-04-10 06:01:00,609: None
[DEBUG]2024-04-10 06:01:00,609: None
[DEBUG]2024-04-10 06:01:00,609: None
[DEBUG]2024-04-10 06:05:55,680: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 06:05:55,680: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 06:05:55,680: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 06:05:55,681: None
[DEBUG]2024-04-10 06:05:55,681: None
[DEBUG]2024-04-10 06:05:55,682: None
[DEBUG]2024-04-10 06:05:55,682: None
[DEBUG]2024-04-10 06:05:55,682: None
[DEBUG]2024-04-10 06:05:55,682: None
[DEBUG]2024-04-10 06:05:55,682: None
[DEBUG]2024-04-10 06:05:55,682: None
[DEBUG]2024-04-10 06:05:55,682: None
[DEBUG]2024-04-10 06:05:55,683: None
[DEBUG]2024-04-10 06:05:55,683: None
[DEBUG]2024-04-10 06:05:55,683: None
[DEBUG]2024-04-10 06:05:55,683: None
[DEBUG]2024-04-10 06:05:55,683: None
[DEBUG]2024-04-10 06:05:55,684: None
[DEBUG]2024-04-10 06:05:55,684: None
[DEBUG]2024-04-10 06:05:55,684: None
[DEBUG]2024-04-10 06:05:55,684: None
[DEBUG]2024-04-10 06:05:55,684: None
[DEBUG]2024-04-10 06:05:55,684: None
[DEBUG]2024-04-10 06:05:55,684: None
[DEBUG]2024-04-10 06:05:55,684: None
[DEBUG]2024-04-10 06:05:55,684: None
[DEBUG]2024-04-10 06:05:55,684: None
[DEBUG]2024-04-10 06:05:55,684: None
[DEBUG]2024-04-10 06:05:55,684: None
[DEBUG]2024-04-10 06:05:55,684: None
[DEBUG]2024-04-10 06:05:55,685: None
[DEBUG]2024-04-10 06:05:55,685: None
[DEBUG]2024-04-10 06:05:55,685: None
[DEBUG]2024-04-10 06:05:55,685: None
[DEBUG]2024-04-10 06:05:55,685: None
[DEBUG]2024-04-10 06:05:55,685: None
[DEBUG]2024-04-10 06:05:55,685: None
[DEBUG]2024-04-10 06:05:55,685: None
[DEBUG]2024-04-10 06:05:55,686: None
[DEBUG]2024-04-10 06:05:55,686: None
[DEBUG]2024-04-10 06:05:55,686: None
[DEBUG]2024-04-10 06:05:55,686: None
[DEBUG]2024-04-10 06:05:55,686: None
[DEBUG]2024-04-10 06:05:55,686: None
[DEBUG]2024-04-10 06:05:55,686: None
[DEBUG]2024-04-10 06:05:55,686: None
[DEBUG]2024-04-10 06:05:55,686: None
[DEBUG]2024-04-10 06:05:55,687: None
[DEBUG]2024-04-10 06:05:55,687: None
[DEBUG]2024-04-10 06:05:55,687: None
[DEBUG]2024-04-10 06:05:55,687: None
[DEBUG]2024-04-10 06:05:55,687: None
[DEBUG]2024-04-10 06:05:55,687: None
[DEBUG]2024-04-10 06:05:55,687: None
[DEBUG]2024-04-10 06:05:55,687: None
[DEBUG]2024-04-10 06:05:55,687: None
[DEBUG]2024-04-10 06:05:55,687: None
[DEBUG]2024-04-10 06:05:55,688: None
[DEBUG]2024-04-10 06:05:55,688: None
[DEBUG]2024-04-10 06:05:55,688: None
[DEBUG]2024-04-10 06:05:55,688: None
[DEBUG]2024-04-10 06:05:55,688: None
[DEBUG]2024-04-10 06:05:55,688: None
[DEBUG]2024-04-10 06:05:55,688: None
[DEBUG]2024-04-10 06:05:55,688: None
[DEBUG]2024-04-10 06:05:55,688: None
[DEBUG]2024-04-10 06:05:55,688: None
[DEBUG]2024-04-10 06:05:55,688: None
[DEBUG]2024-04-10 06:05:55,689: None
[DEBUG]2024-04-10 06:05:55,689: None
[DEBUG]2024-04-10 06:05:55,689: None
[DEBUG]2024-04-10 06:05:55,689: None
[DEBUG]2024-04-10 06:05:55,689: None
[DEBUG]2024-04-10 06:05:55,689: None
[DEBUG]2024-04-10 06:05:55,689: None
[DEBUG]2024-04-10 06:05:55,689: None
[DEBUG]2024-04-10 06:05:55,689: None
[DEBUG]2024-04-10 06:05:55,689: None
[DEBUG]2024-04-10 06:05:55,689: None
[DEBUG]2024-04-10 06:05:55,689: None
[DEBUG]2024-04-10 06:05:55,690: None
[DEBUG]2024-04-10 06:05:55,690: None
[DEBUG]2024-04-10 06:05:55,690: None
[DEBUG]2024-04-10 06:05:55,690: None
[DEBUG]2024-04-10 06:05:55,690: None
[DEBUG]2024-04-10 06:05:55,690: None
[DEBUG]2024-04-10 06:05:55,690: None
[DEBUG]2024-04-10 06:05:55,690: None
[DEBUG]2024-04-10 06:05:55,690: None
[DEBUG]2024-04-10 06:05:55,690: None
[DEBUG]2024-04-10 06:05:55,690: None
[DEBUG]2024-04-10 06:05:55,690: None
[DEBUG]2024-04-10 06:05:55,690: None
[DEBUG]2024-04-10 06:05:55,691: None
[DEBUG]2024-04-10 06:05:55,691: None
[DEBUG]2024-04-10 06:05:55,691: None
[DEBUG]2024-04-10 06:05:55,691: None
[DEBUG]2024-04-10 06:05:55,691: None
[DEBUG]2024-04-10 06:05:55,691: None
[DEBUG]2024-04-10 06:05:55,691: None
[DEBUG]2024-04-10 06:05:55,691: None
[DEBUG]2024-04-10 06:05:55,691: None
[DEBUG]2024-04-10 06:05:55,691: None
[DEBUG]2024-04-10 06:05:55,691: None
[DEBUG]2024-04-10 06:05:55,691: None
[DEBUG]2024-04-10 06:05:55,691: None
[DEBUG]2024-04-10 06:05:55,691: None
[DEBUG]2024-04-10 06:05:55,692: <re.Match object; span=(2340, 2441), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:05:55,692: <re.Match object; span=(2340, 2441), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:05:55,692: <re.Match object; span=(2340, 2441), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:05:55,692: <re.Match object; span=(2340, 2441), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:05:55,692: <re.Match object; span=(2340, 2441), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:05:55,692: <re.Match object; span=(2340, 2441), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:05:55,692: <re.Match object; span=(2340, 2441), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:05:55,692: <re.Match object; span=(2340, 2441), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:05:55,692: <re.Match object; span=(2340, 2441), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:05:55,692: <re.Match object; span=(2340, 2441), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:05:55,692: <re.Match object; span=(2340, 2441), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:05:55,692: <re.Match object; span=(2340, 2441), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:05:55,692: <re.Match object; span=(2340, 2441), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:05:55,692: <re.Match object; span=(2340, 2441), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:05:55,692: <re.Match object; span=(2340, 2441), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:05:55,692: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:05:55,692: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:05:55,692: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:05:55,692: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:05:55,692: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:05:55,692: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:05:55,692: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:05:55,692: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:05:55,692: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:05:55,692: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:05:55,692: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:05:55,692: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:05:55,692: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:05:55,692: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:05:55,692: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:05:55,693: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:05:55,693: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:05:55,693: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:05:55,693: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:05:55,693: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:05:55,693: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:05:55,693: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:05:55,693: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:05:55,693: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:05:55,693: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:05:55,693: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:05:55,693: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:05:55,693: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:05:55,693: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:05:55,693: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:05:55,694: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:05:55,694: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:05:55,694: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:05:55,694: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:05:55,694: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:05:55,694: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:05:55,694: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:05:55,694: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:05:55,694: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:05:55,694: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:05:55,694: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:05:55,694: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:05:55,694: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:05:55,694: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:05:55,694: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:05:55,694: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:05:55,695: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:05:55,695: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:05:55,695: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:05:55,695: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:05:55,695: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:05:55,695: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:05:55,695: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:05:55,695: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:05:55,695: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:05:55,695: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:05:55,695: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:05:55,695: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:05:55,695: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:05:55,695: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:05:55,695: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:05:55,695: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:05:55,695: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:05:55,695: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:05:55,695: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:05:55,695: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:05:55,695: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:05:55,695: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:05:55,695: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:05:55,695: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:05:55,695: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:05:55,695: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:05:55,695: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:05:55,695: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:05:55,695: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:05:55,695: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:05:55,695: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:05:55,695: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:05:55,696: None
[DEBUG]2024-04-10 06:05:55,696: None
[DEBUG]2024-04-10 06:05:55,696: None
[DEBUG]2024-04-10 06:05:55,696: None
[DEBUG]2024-04-10 06:05:55,696: None
[DEBUG]2024-04-10 06:05:55,696: None
[DEBUG]2024-04-10 06:05:55,696: None
[DEBUG]2024-04-10 06:05:55,696: None
[DEBUG]2024-04-10 06:05:55,696: None
[DEBUG]2024-04-10 06:05:55,696: None
[DEBUG]2024-04-10 06:05:55,696: None
[DEBUG]2024-04-10 06:05:55,696: None
[DEBUG]2024-04-10 06:05:55,696: None
[DEBUG]2024-04-10 06:05:55,696: None
[DEBUG]2024-04-10 06:05:55,696: None
[DEBUG]2024-04-10 06:05:55,696: None
[DEBUG]2024-04-10 06:05:55,696: None
[DEBUG]2024-04-10 06:05:55,697: None
[DEBUG]2024-04-10 06:05:55,697: None
[DEBUG]2024-04-10 06:05:55,697: None
[DEBUG]2024-04-10 06:05:55,697: None
[DEBUG]2024-04-10 06:05:55,697: None
[DEBUG]2024-04-10 06:05:55,697: None
[DEBUG]2024-04-10 06:05:55,697: None
[DEBUG]2024-04-10 06:05:55,697: None
[DEBUG]2024-04-10 06:05:55,697: None
[DEBUG]2024-04-10 06:05:55,697: None
[DEBUG]2024-04-10 06:05:55,697: None
[DEBUG]2024-04-10 06:05:55,697: None
[DEBUG]2024-04-10 06:05:55,697: None
[DEBUG]2024-04-10 06:05:55,697: None
[DEBUG]2024-04-10 06:05:55,697: None
[DEBUG]2024-04-10 06:05:55,697: None
[DEBUG]2024-04-10 06:05:55,697: None
[DEBUG]2024-04-10 06:05:55,697: None
[DEBUG]2024-04-10 06:06:20,291: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 06:06:20,291: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 06:06:20,291: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 06:06:20,293: None
[DEBUG]2024-04-10 06:06:20,293: None
[DEBUG]2024-04-10 06:06:20,293: None
[DEBUG]2024-04-10 06:06:20,293: None
[DEBUG]2024-04-10 06:06:20,293: None
[DEBUG]2024-04-10 06:06:20,294: None
[DEBUG]2024-04-10 06:06:20,294: None
[DEBUG]2024-04-10 06:06:20,294: None
[DEBUG]2024-04-10 06:06:20,294: None
[DEBUG]2024-04-10 06:06:20,294: None
[DEBUG]2024-04-10 06:06:20,294: None
[DEBUG]2024-04-10 06:06:20,294: None
[DEBUG]2024-04-10 06:06:20,294: None
[DEBUG]2024-04-10 06:06:20,294: None
[DEBUG]2024-04-10 06:06:20,295: None
[DEBUG]2024-04-10 06:06:20,295: None
[DEBUG]2024-04-10 06:06:20,295: None
[DEBUG]2024-04-10 06:06:20,295: None
[DEBUG]2024-04-10 06:06:20,295: None
[DEBUG]2024-04-10 06:06:20,295: None
[DEBUG]2024-04-10 06:06:20,296: None
[DEBUG]2024-04-10 06:06:20,296: None
[DEBUG]2024-04-10 06:06:20,296: None
[DEBUG]2024-04-10 06:06:20,296: None
[DEBUG]2024-04-10 06:06:20,296: None
[DEBUG]2024-04-10 06:06:20,296: None
[DEBUG]2024-04-10 06:06:20,296: None
[DEBUG]2024-04-10 06:06:20,296: None
[DEBUG]2024-04-10 06:06:20,296: None
[DEBUG]2024-04-10 06:06:20,296: None
[DEBUG]2024-04-10 06:06:20,296: None
[DEBUG]2024-04-10 06:06:20,296: None
[DEBUG]2024-04-10 06:06:20,296: None
[DEBUG]2024-04-10 06:06:20,296: None
[DEBUG]2024-04-10 06:06:20,296: None
[DEBUG]2024-04-10 06:06:20,297: None
[DEBUG]2024-04-10 06:06:20,297: None
[DEBUG]2024-04-10 06:06:20,297: None
[DEBUG]2024-04-10 06:06:20,297: None
[DEBUG]2024-04-10 06:06:20,297: None
[DEBUG]2024-04-10 06:06:20,297: None
[DEBUG]2024-04-10 06:06:20,297: None
[DEBUG]2024-04-10 06:06:20,297: None
[DEBUG]2024-04-10 06:06:20,297: None
[DEBUG]2024-04-10 06:06:20,298: None
[DEBUG]2024-04-10 06:06:20,298: None
[DEBUG]2024-04-10 06:06:20,298: None
[DEBUG]2024-04-10 06:06:20,298: None
[DEBUG]2024-04-10 06:06:20,298: None
[DEBUG]2024-04-10 06:06:20,298: None
[DEBUG]2024-04-10 06:06:20,298: None
[DEBUG]2024-04-10 06:06:20,298: None
[DEBUG]2024-04-10 06:06:20,298: None
[DEBUG]2024-04-10 06:06:20,298: None
[DEBUG]2024-04-10 06:06:20,299: None
[DEBUG]2024-04-10 06:06:20,299: None
[DEBUG]2024-04-10 06:06:20,299: None
[DEBUG]2024-04-10 06:06:20,299: None
[DEBUG]2024-04-10 06:06:20,299: None
[DEBUG]2024-04-10 06:06:20,299: None
[DEBUG]2024-04-10 06:06:20,299: None
[DEBUG]2024-04-10 06:06:20,299: None
[DEBUG]2024-04-10 06:06:20,299: None
[DEBUG]2024-04-10 06:06:20,299: None
[DEBUG]2024-04-10 06:06:20,299: None
[DEBUG]2024-04-10 06:06:20,300: None
[DEBUG]2024-04-10 06:06:20,300: None
[DEBUG]2024-04-10 06:06:20,300: None
[DEBUG]2024-04-10 06:06:20,300: None
[DEBUG]2024-04-10 06:06:20,300: None
[DEBUG]2024-04-10 06:06:20,300: None
[DEBUG]2024-04-10 06:06:20,300: None
[DEBUG]2024-04-10 06:06:20,300: None
[DEBUG]2024-04-10 06:06:20,300: None
[DEBUG]2024-04-10 06:06:20,300: None
[DEBUG]2024-04-10 06:06:20,300: None
[DEBUG]2024-04-10 06:06:20,300: None
[DEBUG]2024-04-10 06:06:20,300: None
[DEBUG]2024-04-10 06:06:20,300: None
[DEBUG]2024-04-10 06:06:20,300: None
[DEBUG]2024-04-10 06:06:20,300: None
[DEBUG]2024-04-10 06:06:20,300: None
[DEBUG]2024-04-10 06:06:20,300: None
[DEBUG]2024-04-10 06:06:20,300: None
[DEBUG]2024-04-10 06:06:20,300: None
[DEBUG]2024-04-10 06:06:20,300: None
[DEBUG]2024-04-10 06:06:20,300: None
[DEBUG]2024-04-10 06:06:20,300: None
[DEBUG]2024-04-10 06:06:20,300: None
[DEBUG]2024-04-10 06:06:20,300: None
[DEBUG]2024-04-10 06:06:20,301: None
[DEBUG]2024-04-10 06:06:20,301: None
[DEBUG]2024-04-10 06:06:20,301: None
[DEBUG]2024-04-10 06:06:20,301: None
[DEBUG]2024-04-10 06:06:20,301: None
[DEBUG]2024-04-10 06:06:20,301: None
[DEBUG]2024-04-10 06:06:20,301: None
[DEBUG]2024-04-10 06:06:20,301: None
[DEBUG]2024-04-10 06:06:20,301: None
[DEBUG]2024-04-10 06:06:20,301: None
[DEBUG]2024-04-10 06:06:20,301: None
[DEBUG]2024-04-10 06:06:20,301: None
[DEBUG]2024-04-10 06:06:20,301: None
[DEBUG]2024-04-10 06:06:20,301: None
[DEBUG]2024-04-10 06:06:20,302: <re.Match object; span=(2340, 2441), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:06:20,302: <re.Match object; span=(2340, 2441), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:06:20,302: <re.Match object; span=(2340, 2441), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:06:20,302: <re.Match object; span=(2340, 2441), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:06:20,302: <re.Match object; span=(2340, 2441), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:06:20,302: <re.Match object; span=(2340, 2441), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:06:20,302: <re.Match object; span=(2340, 2441), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:06:20,302: <re.Match object; span=(2340, 2441), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:06:20,302: <re.Match object; span=(2340, 2441), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:06:20,302: <re.Match object; span=(2340, 2441), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:06:20,302: <re.Match object; span=(2340, 2441), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:06:20,302: <re.Match object; span=(2340, 2441), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:06:20,302: <re.Match object; span=(2340, 2441), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:06:20,302: <re.Match object; span=(2340, 2441), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:06:20,302: <re.Match object; span=(2340, 2441), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:06:20,303: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:06:20,303: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:06:20,303: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:06:20,303: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:06:20,303: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:06:20,303: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:06:20,303: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:06:20,303: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:06:20,303: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:06:20,303: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:06:20,303: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:06:20,303: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:06:20,303: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:06:20,303: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:06:20,303: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:06:20,303: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:06:20,303: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:06:20,303: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:06:20,303: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:06:20,303: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:06:20,303: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:06:20,303: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:06:20,303: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:06:20,303: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:06:20,303: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:06:20,303: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:06:20,303: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:06:20,303: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:06:20,303: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:06:20,303: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:06:20,304: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:06:20,304: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:06:20,304: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:06:20,304: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:06:20,304: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:06:20,304: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:06:20,304: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:06:20,304: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:06:20,304: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:06:20,304: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:06:20,304: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:06:20,304: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:06:20,304: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:06:20,304: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:06:20,304: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:06:20,304: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:06:20,305: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:06:20,305: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:06:20,305: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:06:20,305: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:06:20,305: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:06:20,305: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:06:20,305: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:06:20,305: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:06:20,305: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:06:20,305: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:06:20,305: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:06:20,305: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:06:20,305: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:06:20,305: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:06:20,305: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:06:20,305: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:06:20,305: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:06:20,305: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:06:20,305: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:06:20,305: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:06:20,305: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:06:20,305: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:06:20,305: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:06:20,305: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:06:20,305: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:06:20,305: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:06:20,305: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:06:20,305: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:06:20,305: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:06:20,305: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:06:20,305: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:06:20,305: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:06:20,306: None
[DEBUG]2024-04-10 06:06:20,306: None
[DEBUG]2024-04-10 06:06:20,306: None
[DEBUG]2024-04-10 06:06:20,306: None
[DEBUG]2024-04-10 06:06:20,306: None
[DEBUG]2024-04-10 06:06:20,306: None
[DEBUG]2024-04-10 06:06:20,306: None
[DEBUG]2024-04-10 06:06:20,306: None
[DEBUG]2024-04-10 06:06:20,306: None
[DEBUG]2024-04-10 06:06:20,306: None
[DEBUG]2024-04-10 06:06:20,306: None
[DEBUG]2024-04-10 06:06:20,306: None
[DEBUG]2024-04-10 06:06:20,306: None
[DEBUG]2024-04-10 06:06:20,306: None
[DEBUG]2024-04-10 06:06:20,306: None
[DEBUG]2024-04-10 06:06:20,306: None
[DEBUG]2024-04-10 06:06:20,306: None
[DEBUG]2024-04-10 06:06:20,307: None
[DEBUG]2024-04-10 06:06:20,307: None
[DEBUG]2024-04-10 06:06:20,307: None
[DEBUG]2024-04-10 06:06:20,307: None
[DEBUG]2024-04-10 06:06:20,307: None
[DEBUG]2024-04-10 06:06:20,307: None
[DEBUG]2024-04-10 06:06:20,307: None
[DEBUG]2024-04-10 06:06:20,307: None
[DEBUG]2024-04-10 06:06:20,307: None
[DEBUG]2024-04-10 06:06:20,307: None
[DEBUG]2024-04-10 06:06:20,307: None
[DEBUG]2024-04-10 06:06:20,307: None
[DEBUG]2024-04-10 06:06:20,307: None
[DEBUG]2024-04-10 06:06:20,307: None
[DEBUG]2024-04-10 06:06:20,307: None
[DEBUG]2024-04-10 06:06:20,307: None
[DEBUG]2024-04-10 06:06:20,307: None
[DEBUG]2024-04-10 06:06:20,307: None
[DEBUG]2024-04-10 06:11:57,153: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 06:11:57,154: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 06:11:57,154: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 06:11:57,155: None
[DEBUG]2024-04-10 06:11:57,155: None
[DEBUG]2024-04-10 06:11:57,156: None
[DEBUG]2024-04-10 06:11:57,156: None
[DEBUG]2024-04-10 06:11:57,156: None
[DEBUG]2024-04-10 06:11:57,156: None
[DEBUG]2024-04-10 06:11:57,156: None
[DEBUG]2024-04-10 06:11:57,156: None
[DEBUG]2024-04-10 06:11:57,156: None
[DEBUG]2024-04-10 06:11:57,157: None
[DEBUG]2024-04-10 06:11:57,157: None
[DEBUG]2024-04-10 06:11:57,157: None
[DEBUG]2024-04-10 06:11:57,157: None
[DEBUG]2024-04-10 06:11:57,157: None
[DEBUG]2024-04-10 06:11:57,158: None
[DEBUG]2024-04-10 06:11:57,158: None
[DEBUG]2024-04-10 06:11:57,158: None
[DEBUG]2024-04-10 06:11:57,158: None
[DEBUG]2024-04-10 06:11:57,158: None
[DEBUG]2024-04-10 06:11:57,158: None
[DEBUG]2024-04-10 06:11:57,158: None
[DEBUG]2024-04-10 06:11:57,158: None
[DEBUG]2024-04-10 06:11:57,158: None
[DEBUG]2024-04-10 06:11:57,158: None
[DEBUG]2024-04-10 06:11:57,158: None
[DEBUG]2024-04-10 06:11:57,158: None
[DEBUG]2024-04-10 06:11:57,158: None
[DEBUG]2024-04-10 06:11:57,159: None
[DEBUG]2024-04-10 06:11:57,159: None
[DEBUG]2024-04-10 06:11:57,159: None
[DEBUG]2024-04-10 06:11:57,159: None
[DEBUG]2024-04-10 06:11:57,159: None
[DEBUG]2024-04-10 06:11:57,159: None
[DEBUG]2024-04-10 06:11:57,159: None
[DEBUG]2024-04-10 06:11:57,159: None
[DEBUG]2024-04-10 06:11:57,160: None
[DEBUG]2024-04-10 06:11:57,160: None
[DEBUG]2024-04-10 06:11:57,160: None
[DEBUG]2024-04-10 06:11:57,160: None
[DEBUG]2024-04-10 06:11:57,160: None
[DEBUG]2024-04-10 06:11:57,160: None
[DEBUG]2024-04-10 06:11:57,160: None
[DEBUG]2024-04-10 06:11:57,160: None
[DEBUG]2024-04-10 06:11:57,160: None
[DEBUG]2024-04-10 06:11:57,161: None
[DEBUG]2024-04-10 06:11:57,161: None
[DEBUG]2024-04-10 06:11:57,161: None
[DEBUG]2024-04-10 06:11:57,161: None
[DEBUG]2024-04-10 06:11:57,161: None
[DEBUG]2024-04-10 06:11:57,161: None
[DEBUG]2024-04-10 06:11:57,161: None
[DEBUG]2024-04-10 06:11:57,161: None
[DEBUG]2024-04-10 06:11:57,161: None
[DEBUG]2024-04-10 06:11:57,161: None
[DEBUG]2024-04-10 06:11:57,162: None
[DEBUG]2024-04-10 06:11:57,162: None
[DEBUG]2024-04-10 06:11:57,162: None
[DEBUG]2024-04-10 06:11:57,162: None
[DEBUG]2024-04-10 06:11:57,162: None
[DEBUG]2024-04-10 06:11:57,162: None
[DEBUG]2024-04-10 06:11:57,162: None
[DEBUG]2024-04-10 06:11:57,162: None
[DEBUG]2024-04-10 06:11:57,162: None
[DEBUG]2024-04-10 06:11:57,162: None
[DEBUG]2024-04-10 06:11:57,162: None
[DEBUG]2024-04-10 06:11:57,163: None
[DEBUG]2024-04-10 06:11:57,163: None
[DEBUG]2024-04-10 06:11:57,163: None
[DEBUG]2024-04-10 06:11:57,163: None
[DEBUG]2024-04-10 06:11:57,163: None
[DEBUG]2024-04-10 06:11:57,163: None
[DEBUG]2024-04-10 06:11:57,163: None
[DEBUG]2024-04-10 06:11:57,163: None
[DEBUG]2024-04-10 06:11:57,163: None
[DEBUG]2024-04-10 06:11:57,163: None
[DEBUG]2024-04-10 06:11:57,163: None
[DEBUG]2024-04-10 06:11:57,163: None
[DEBUG]2024-04-10 06:11:57,164: None
[DEBUG]2024-04-10 06:11:57,164: None
[DEBUG]2024-04-10 06:11:57,164: None
[DEBUG]2024-04-10 06:11:57,164: None
[DEBUG]2024-04-10 06:11:57,164: None
[DEBUG]2024-04-10 06:11:57,164: None
[DEBUG]2024-04-10 06:11:57,164: None
[DEBUG]2024-04-10 06:11:57,164: None
[DEBUG]2024-04-10 06:11:57,164: None
[DEBUG]2024-04-10 06:11:57,164: None
[DEBUG]2024-04-10 06:11:57,164: None
[DEBUG]2024-04-10 06:11:57,164: None
[DEBUG]2024-04-10 06:11:57,164: None
[DEBUG]2024-04-10 06:11:57,164: None
[DEBUG]2024-04-10 06:11:57,164: None
[DEBUG]2024-04-10 06:11:57,164: None
[DEBUG]2024-04-10 06:11:57,164: None
[DEBUG]2024-04-10 06:11:57,164: None
[DEBUG]2024-04-10 06:11:57,164: None
[DEBUG]2024-04-10 06:11:57,164: None
[DEBUG]2024-04-10 06:11:57,164: None
[DEBUG]2024-04-10 06:11:57,164: None
[DEBUG]2024-04-10 06:11:57,164: None
[DEBUG]2024-04-10 06:11:57,164: None
[DEBUG]2024-04-10 06:11:57,164: None
[DEBUG]2024-04-10 06:11:57,164: None
[DEBUG]2024-04-10 06:11:57,164: None
[DEBUG]2024-04-10 06:11:57,165: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:11:57,165: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:11:57,165: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:11:57,165: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:11:57,165: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:11:57,165: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:11:57,165: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:11:57,165: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:11:57,165: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:11:57,165: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:11:57,165: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:11:57,165: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:11:57,165: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:11:57,165: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:11:57,165: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:11:57,166: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:11:57,166: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:11:57,166: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:11:57,166: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:11:57,166: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:11:57,166: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:11:57,166: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:11:57,166: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:11:57,166: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:11:57,166: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:11:57,166: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:11:57,166: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:11:57,166: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:11:57,166: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:11:57,166: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:11:57,166: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:11:57,166: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:11:57,166: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:11:57,166: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:11:57,166: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:11:57,166: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:11:57,166: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:11:57,166: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:11:57,166: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:11:57,166: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:11:57,166: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:11:57,166: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:11:57,166: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:11:57,166: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:11:57,166: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:11:57,167: None
[DEBUG]2024-04-10 06:11:57,167: None
[DEBUG]2024-04-10 06:11:57,167: None
[DEBUG]2024-04-10 06:11:57,167: None
[DEBUG]2024-04-10 06:11:57,167: None
[DEBUG]2024-04-10 06:11:57,167: None
[DEBUG]2024-04-10 06:11:57,167: None
[DEBUG]2024-04-10 06:11:57,167: None
[DEBUG]2024-04-10 06:11:57,167: None
[DEBUG]2024-04-10 06:11:57,167: None
[DEBUG]2024-04-10 06:11:57,167: None
[DEBUG]2024-04-10 06:11:57,167: None
[DEBUG]2024-04-10 06:11:57,167: None
[DEBUG]2024-04-10 06:11:57,167: None
[DEBUG]2024-04-10 06:11:57,167: None
[DEBUG]2024-04-10 06:11:57,167: None
[DEBUG]2024-04-10 06:11:57,168: None
[DEBUG]2024-04-10 06:11:57,168: None
[DEBUG]2024-04-10 06:11:57,168: None
[DEBUG]2024-04-10 06:11:57,168: None
[DEBUG]2024-04-10 06:11:57,168: None
[DEBUG]2024-04-10 06:11:57,168: None
[DEBUG]2024-04-10 06:11:57,168: None
[DEBUG]2024-04-10 06:11:57,168: None
[DEBUG]2024-04-10 06:11:57,168: None
[DEBUG]2024-04-10 06:11:57,168: None
[DEBUG]2024-04-10 06:11:57,168: None
[DEBUG]2024-04-10 06:11:57,168: None
[DEBUG]2024-04-10 06:11:57,168: None
[DEBUG]2024-04-10 06:11:57,168: None
[DEBUG]2024-04-10 06:11:57,168: None
[DEBUG]2024-04-10 06:11:57,168: None
[DEBUG]2024-04-10 06:11:57,168: None
[DEBUG]2024-04-10 06:11:57,169: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:11:57,169: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:11:57,169: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:11:57,169: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:11:57,169: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:11:57,169: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:11:57,169: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:11:57,169: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:11:57,169: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:11:57,169: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:11:57,169: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:11:57,169: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:11:57,169: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:11:57,169: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:11:57,169: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:11:57,169: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:11:57,169: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:11:57,169: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:11:57,170: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:11:57,170: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:11:57,170: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:11:57,170: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:11:57,170: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:11:57,170: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:11:57,170: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:11:57,170: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:11:57,170: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:11:57,170: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:11:57,170: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:11:57,170: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:11:57,170: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:11:57,170: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:11:57,170: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:11:57,170: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:11:57,170: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:11:57,170: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:11:57,170: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:11:57,170: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:11:57,170: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:11:57,170: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:11:57,170: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:11:57,170: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:11:57,170: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:11:57,170: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:11:57,170: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:11:57,170: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:11:57,170: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:11:57,170: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:11:57,170: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:11:57,170: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:11:57,170: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:11:57,170: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:11:57,170: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:11:57,170: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:12:20,443: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 06:12:20,443: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 06:12:20,443: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 06:12:20,445: None
[DEBUG]2024-04-10 06:12:20,445: None
[DEBUG]2024-04-10 06:12:20,445: None
[DEBUG]2024-04-10 06:12:20,445: None
[DEBUG]2024-04-10 06:12:20,445: None
[DEBUG]2024-04-10 06:12:20,446: None
[DEBUG]2024-04-10 06:12:20,446: None
[DEBUG]2024-04-10 06:12:20,446: None
[DEBUG]2024-04-10 06:12:20,446: None
[DEBUG]2024-04-10 06:12:20,446: None
[DEBUG]2024-04-10 06:12:20,446: None
[DEBUG]2024-04-10 06:12:20,446: None
[DEBUG]2024-04-10 06:12:20,446: None
[DEBUG]2024-04-10 06:12:20,446: None
[DEBUG]2024-04-10 06:12:20,447: None
[DEBUG]2024-04-10 06:12:20,447: None
[DEBUG]2024-04-10 06:12:20,447: None
[DEBUG]2024-04-10 06:12:20,447: None
[DEBUG]2024-04-10 06:12:20,447: None
[DEBUG]2024-04-10 06:12:20,447: None
[DEBUG]2024-04-10 06:12:20,448: None
[DEBUG]2024-04-10 06:12:20,448: None
[DEBUG]2024-04-10 06:12:20,448: None
[DEBUG]2024-04-10 06:12:20,448: None
[DEBUG]2024-04-10 06:12:20,448: None
[DEBUG]2024-04-10 06:12:20,448: None
[DEBUG]2024-04-10 06:12:20,448: None
[DEBUG]2024-04-10 06:12:20,449: None
[DEBUG]2024-04-10 06:12:20,449: None
[DEBUG]2024-04-10 06:12:20,449: None
[DEBUG]2024-04-10 06:12:20,449: None
[DEBUG]2024-04-10 06:12:20,449: None
[DEBUG]2024-04-10 06:12:20,449: None
[DEBUG]2024-04-10 06:12:20,449: None
[DEBUG]2024-04-10 06:12:20,449: None
[DEBUG]2024-04-10 06:12:20,450: None
[DEBUG]2024-04-10 06:12:20,450: None
[DEBUG]2024-04-10 06:12:20,450: None
[DEBUG]2024-04-10 06:12:20,450: None
[DEBUG]2024-04-10 06:12:20,450: None
[DEBUG]2024-04-10 06:12:20,450: None
[DEBUG]2024-04-10 06:12:20,450: None
[DEBUG]2024-04-10 06:12:20,450: None
[DEBUG]2024-04-10 06:12:20,450: None
[DEBUG]2024-04-10 06:12:20,450: None
[DEBUG]2024-04-10 06:12:20,450: None
[DEBUG]2024-04-10 06:12:20,450: None
[DEBUG]2024-04-10 06:12:20,450: None
[DEBUG]2024-04-10 06:12:20,450: None
[DEBUG]2024-04-10 06:12:20,450: None
[DEBUG]2024-04-10 06:12:20,450: None
[DEBUG]2024-04-10 06:12:20,450: None
[DEBUG]2024-04-10 06:12:20,450: None
[DEBUG]2024-04-10 06:12:20,450: None
[DEBUG]2024-04-10 06:12:20,451: None
[DEBUG]2024-04-10 06:12:20,451: None
[DEBUG]2024-04-10 06:12:20,451: None
[DEBUG]2024-04-10 06:12:20,451: None
[DEBUG]2024-04-10 06:12:20,451: None
[DEBUG]2024-04-10 06:12:20,451: None
[DEBUG]2024-04-10 06:12:20,451: None
[DEBUG]2024-04-10 06:12:20,451: None
[DEBUG]2024-04-10 06:12:20,451: None
[DEBUG]2024-04-10 06:12:20,451: None
[DEBUG]2024-04-10 06:12:20,451: None
[DEBUG]2024-04-10 06:12:20,452: None
[DEBUG]2024-04-10 06:12:20,452: None
[DEBUG]2024-04-10 06:12:20,452: None
[DEBUG]2024-04-10 06:12:20,452: None
[DEBUG]2024-04-10 06:12:20,452: None
[DEBUG]2024-04-10 06:12:20,452: None
[DEBUG]2024-04-10 06:12:20,452: None
[DEBUG]2024-04-10 06:12:20,452: None
[DEBUG]2024-04-10 06:12:20,452: None
[DEBUG]2024-04-10 06:12:20,452: None
[DEBUG]2024-04-10 06:12:20,452: None
[DEBUG]2024-04-10 06:12:20,452: None
[DEBUG]2024-04-10 06:12:20,453: None
[DEBUG]2024-04-10 06:12:20,453: None
[DEBUG]2024-04-10 06:12:20,453: None
[DEBUG]2024-04-10 06:12:20,453: None
[DEBUG]2024-04-10 06:12:20,453: None
[DEBUG]2024-04-10 06:12:20,453: None
[DEBUG]2024-04-10 06:12:20,453: None
[DEBUG]2024-04-10 06:12:20,453: None
[DEBUG]2024-04-10 06:12:20,453: None
[DEBUG]2024-04-10 06:12:20,453: None
[DEBUG]2024-04-10 06:12:20,453: None
[DEBUG]2024-04-10 06:12:20,453: None
[DEBUG]2024-04-10 06:12:20,453: None
[DEBUG]2024-04-10 06:12:20,454: None
[DEBUG]2024-04-10 06:12:20,454: None
[DEBUG]2024-04-10 06:12:20,454: None
[DEBUG]2024-04-10 06:12:20,454: None
[DEBUG]2024-04-10 06:12:20,454: None
[DEBUG]2024-04-10 06:12:20,454: None
[DEBUG]2024-04-10 06:12:20,454: None
[DEBUG]2024-04-10 06:12:20,454: None
[DEBUG]2024-04-10 06:12:20,454: None
[DEBUG]2024-04-10 06:12:20,454: None
[DEBUG]2024-04-10 06:12:20,454: None
[DEBUG]2024-04-10 06:12:20,454: None
[DEBUG]2024-04-10 06:12:20,454: None
[DEBUG]2024-04-10 06:12:20,454: None
[DEBUG]2024-04-10 06:12:20,455: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:12:20,455: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:12:20,455: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:12:20,455: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:12:20,455: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:12:20,455: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:12:20,455: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:12:20,455: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:12:20,455: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:12:20,455: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:12:20,455: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:12:20,455: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:12:20,455: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:12:20,455: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:12:20,455: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:12:20,455: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:12:20,455: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:12:20,455: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:12:20,455: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:12:20,455: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:12:20,455: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:12:20,455: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:12:20,455: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:12:20,455: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:12:20,455: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:12:20,455: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:12:20,455: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:12:20,455: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:12:20,455: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:12:20,455: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:12:20,456: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:12:20,456: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:12:20,456: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:12:20,456: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:12:20,456: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:12:20,456: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:12:20,456: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:12:20,456: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:12:20,456: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:12:20,456: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:12:20,456: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:12:20,456: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:12:20,456: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:12:20,456: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:12:20,456: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:12:20,457: None
[DEBUG]2024-04-10 06:12:20,457: None
[DEBUG]2024-04-10 06:12:20,457: None
[DEBUG]2024-04-10 06:12:20,457: None
[DEBUG]2024-04-10 06:12:20,457: None
[DEBUG]2024-04-10 06:12:20,457: None
[DEBUG]2024-04-10 06:12:20,457: None
[DEBUG]2024-04-10 06:12:20,457: None
[DEBUG]2024-04-10 06:12:20,457: None
[DEBUG]2024-04-10 06:12:20,457: None
[DEBUG]2024-04-10 06:12:20,457: None
[DEBUG]2024-04-10 06:12:20,457: None
[DEBUG]2024-04-10 06:12:20,457: None
[DEBUG]2024-04-10 06:12:20,457: None
[DEBUG]2024-04-10 06:12:20,457: None
[DEBUG]2024-04-10 06:12:20,457: None
[DEBUG]2024-04-10 06:12:20,458: None
[DEBUG]2024-04-10 06:12:20,458: None
[DEBUG]2024-04-10 06:12:20,458: None
[DEBUG]2024-04-10 06:12:20,458: None
[DEBUG]2024-04-10 06:12:20,458: None
[DEBUG]2024-04-10 06:12:20,458: None
[DEBUG]2024-04-10 06:12:20,458: None
[DEBUG]2024-04-10 06:12:20,458: None
[DEBUG]2024-04-10 06:12:20,458: None
[DEBUG]2024-04-10 06:12:20,458: None
[DEBUG]2024-04-10 06:12:20,458: None
[DEBUG]2024-04-10 06:12:20,458: None
[DEBUG]2024-04-10 06:12:20,458: None
[DEBUG]2024-04-10 06:12:20,458: None
[DEBUG]2024-04-10 06:12:20,458: None
[DEBUG]2024-04-10 06:12:20,458: None
[DEBUG]2024-04-10 06:12:20,458: None
[DEBUG]2024-04-10 06:12:20,459: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:12:20,459: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:12:20,459: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:12:20,459: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:12:20,459: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:12:20,459: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:12:20,459: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:12:20,459: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:12:20,459: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:12:20,459: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:12:20,459: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:12:20,459: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:12:20,459: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:12:20,459: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:12:20,459: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:12:20,459: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:12:20,459: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:12:20,459: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:12:20,459: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:12:20,459: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:12:20,459: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:12:20,459: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:12:20,459: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:12:20,459: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:12:20,459: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:12:20,459: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:12:20,459: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:12:20,459: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:12:20,459: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:12:20,459: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:12:20,459: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:12:20,459: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:12:20,459: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:12:20,459: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:12:20,459: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:12:20,459: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:12:20,460: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:12:20,460: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:12:20,460: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:12:20,460: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:12:20,460: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:12:20,460: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:12:20,460: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:12:20,460: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:12:20,460: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:12:20,460: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:12:20,460: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:12:20,460: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:12:20,460: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:12:20,460: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:12:20,460: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:12:20,460: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:12:20,460: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:12:20,460: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:12:43,125: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 06:12:43,125: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 06:12:43,126: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 06:12:43,127: None
[DEBUG]2024-04-10 06:12:43,127: None
[DEBUG]2024-04-10 06:12:43,128: None
[DEBUG]2024-04-10 06:12:43,128: None
[DEBUG]2024-04-10 06:12:43,128: None
[DEBUG]2024-04-10 06:12:43,128: None
[DEBUG]2024-04-10 06:12:43,128: None
[DEBUG]2024-04-10 06:12:43,128: None
[DEBUG]2024-04-10 06:12:43,128: None
[DEBUG]2024-04-10 06:12:43,129: None
[DEBUG]2024-04-10 06:12:43,129: None
[DEBUG]2024-04-10 06:12:43,129: None
[DEBUG]2024-04-10 06:12:43,129: None
[DEBUG]2024-04-10 06:12:43,129: None
[DEBUG]2024-04-10 06:12:43,129: None
[DEBUG]2024-04-10 06:12:43,129: None
[DEBUG]2024-04-10 06:12:43,129: None
[DEBUG]2024-04-10 06:12:43,129: None
[DEBUG]2024-04-10 06:12:43,129: None
[DEBUG]2024-04-10 06:12:43,129: None
[DEBUG]2024-04-10 06:12:43,130: None
[DEBUG]2024-04-10 06:12:43,130: None
[DEBUG]2024-04-10 06:12:43,130: None
[DEBUG]2024-04-10 06:12:43,130: None
[DEBUG]2024-04-10 06:12:43,130: None
[DEBUG]2024-04-10 06:12:43,130: None
[DEBUG]2024-04-10 06:12:43,130: None
[DEBUG]2024-04-10 06:12:43,131: None
[DEBUG]2024-04-10 06:12:43,131: None
[DEBUG]2024-04-10 06:12:43,131: None
[DEBUG]2024-04-10 06:12:43,131: None
[DEBUG]2024-04-10 06:12:43,131: None
[DEBUG]2024-04-10 06:12:43,131: None
[DEBUG]2024-04-10 06:12:43,131: None
[DEBUG]2024-04-10 06:12:43,131: None
[DEBUG]2024-04-10 06:12:43,131: None
[DEBUG]2024-04-10 06:12:43,131: None
[DEBUG]2024-04-10 06:12:43,131: None
[DEBUG]2024-04-10 06:12:43,131: None
[DEBUG]2024-04-10 06:12:43,131: None
[DEBUG]2024-04-10 06:12:43,131: None
[DEBUG]2024-04-10 06:12:43,131: None
[DEBUG]2024-04-10 06:12:43,131: None
[DEBUG]2024-04-10 06:12:43,131: None
[DEBUG]2024-04-10 06:12:43,132: None
[DEBUG]2024-04-10 06:12:43,132: None
[DEBUG]2024-04-10 06:12:43,132: None
[DEBUG]2024-04-10 06:12:43,132: None
[DEBUG]2024-04-10 06:12:43,132: None
[DEBUG]2024-04-10 06:12:43,132: None
[DEBUG]2024-04-10 06:12:43,132: None
[DEBUG]2024-04-10 06:12:43,132: None
[DEBUG]2024-04-10 06:12:43,132: None
[DEBUG]2024-04-10 06:12:43,132: None
[DEBUG]2024-04-10 06:12:43,133: None
[DEBUG]2024-04-10 06:12:43,133: None
[DEBUG]2024-04-10 06:12:43,133: None
[DEBUG]2024-04-10 06:12:43,133: None
[DEBUG]2024-04-10 06:12:43,133: None
[DEBUG]2024-04-10 06:12:43,133: None
[DEBUG]2024-04-10 06:12:43,133: None
[DEBUG]2024-04-10 06:12:43,133: None
[DEBUG]2024-04-10 06:12:43,133: None
[DEBUG]2024-04-10 06:12:43,133: None
[DEBUG]2024-04-10 06:12:43,133: None
[DEBUG]2024-04-10 06:12:43,134: None
[DEBUG]2024-04-10 06:12:43,134: None
[DEBUG]2024-04-10 06:12:43,134: None
[DEBUG]2024-04-10 06:12:43,134: None
[DEBUG]2024-04-10 06:12:43,134: None
[DEBUG]2024-04-10 06:12:43,134: None
[DEBUG]2024-04-10 06:12:43,134: None
[DEBUG]2024-04-10 06:12:43,134: None
[DEBUG]2024-04-10 06:12:43,134: None
[DEBUG]2024-04-10 06:12:43,134: None
[DEBUG]2024-04-10 06:12:43,134: None
[DEBUG]2024-04-10 06:12:43,134: None
[DEBUG]2024-04-10 06:12:43,135: None
[DEBUG]2024-04-10 06:12:43,135: None
[DEBUG]2024-04-10 06:12:43,135: None
[DEBUG]2024-04-10 06:12:43,135: None
[DEBUG]2024-04-10 06:12:43,135: None
[DEBUG]2024-04-10 06:12:43,135: None
[DEBUG]2024-04-10 06:12:43,135: None
[DEBUG]2024-04-10 06:12:43,135: None
[DEBUG]2024-04-10 06:12:43,135: None
[DEBUG]2024-04-10 06:12:43,135: None
[DEBUG]2024-04-10 06:12:43,135: None
[DEBUG]2024-04-10 06:12:43,135: None
[DEBUG]2024-04-10 06:12:43,135: None
[DEBUG]2024-04-10 06:12:43,136: None
[DEBUG]2024-04-10 06:12:43,136: None
[DEBUG]2024-04-10 06:12:43,136: None
[DEBUG]2024-04-10 06:12:43,136: None
[DEBUG]2024-04-10 06:12:43,136: None
[DEBUG]2024-04-10 06:12:43,136: None
[DEBUG]2024-04-10 06:12:43,136: None
[DEBUG]2024-04-10 06:12:43,136: None
[DEBUG]2024-04-10 06:12:43,136: None
[DEBUG]2024-04-10 06:12:43,136: None
[DEBUG]2024-04-10 06:12:43,136: None
[DEBUG]2024-04-10 06:12:43,136: None
[DEBUG]2024-04-10 06:12:43,136: None
[DEBUG]2024-04-10 06:12:43,136: None
[DEBUG]2024-04-10 06:12:43,137: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:12:43,137: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:12:43,137: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:12:43,137: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:12:43,137: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:12:43,137: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:12:43,137: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:12:43,137: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:12:43,137: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:12:43,137: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:12:43,137: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:12:43,137: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:12:43,137: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:12:43,137: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:12:43,137: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:12:43,137: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:12:43,137: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:12:43,137: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:12:43,137: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:12:43,137: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:12:43,137: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:12:43,137: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:12:43,137: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:12:43,137: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:12:43,137: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:12:43,137: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:12:43,137: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:12:43,137: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:12:43,137: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:12:43,137: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:12:43,138: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:12:43,138: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:12:43,138: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:12:43,138: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:12:43,138: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:12:43,138: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:12:43,138: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:12:43,138: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:12:43,138: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:12:43,138: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:12:43,138: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:12:43,138: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:12:43,138: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:12:43,138: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:12:43,138: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:12:43,139: None
[DEBUG]2024-04-10 06:12:43,139: None
[DEBUG]2024-04-10 06:12:43,139: None
[DEBUG]2024-04-10 06:12:43,139: None
[DEBUG]2024-04-10 06:12:43,139: None
[DEBUG]2024-04-10 06:12:43,139: None
[DEBUG]2024-04-10 06:12:43,139: None
[DEBUG]2024-04-10 06:12:43,139: None
[DEBUG]2024-04-10 06:12:43,139: None
[DEBUG]2024-04-10 06:12:43,139: None
[DEBUG]2024-04-10 06:12:43,139: None
[DEBUG]2024-04-10 06:12:43,139: None
[DEBUG]2024-04-10 06:12:43,139: None
[DEBUG]2024-04-10 06:12:43,139: None
[DEBUG]2024-04-10 06:12:43,139: None
[DEBUG]2024-04-10 06:12:43,139: None
[DEBUG]2024-04-10 06:12:43,140: None
[DEBUG]2024-04-10 06:12:43,140: None
[DEBUG]2024-04-10 06:12:43,140: None
[DEBUG]2024-04-10 06:12:43,140: None
[DEBUG]2024-04-10 06:12:43,140: None
[DEBUG]2024-04-10 06:12:43,140: None
[DEBUG]2024-04-10 06:12:43,140: None
[DEBUG]2024-04-10 06:12:43,140: None
[DEBUG]2024-04-10 06:12:43,140: None
[DEBUG]2024-04-10 06:12:43,140: None
[DEBUG]2024-04-10 06:12:43,140: None
[DEBUG]2024-04-10 06:12:43,140: None
[DEBUG]2024-04-10 06:12:43,140: None
[DEBUG]2024-04-10 06:12:43,140: None
[DEBUG]2024-04-10 06:12:43,140: None
[DEBUG]2024-04-10 06:12:43,140: None
[DEBUG]2024-04-10 06:12:43,140: None
[DEBUG]2024-04-10 06:12:43,141: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:12:43,141: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:12:43,141: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:12:43,141: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:12:43,141: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:12:43,141: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:12:43,141: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:12:43,141: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:12:43,141: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:12:43,141: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:12:43,141: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:12:43,141: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:12:43,141: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:12:43,141: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:12:43,141: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:12:43,141: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:12:43,141: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:12:43,141: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:12:43,141: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:12:43,141: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:12:43,141: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:12:43,141: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:12:43,141: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:12:43,141: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:12:43,141: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:12:43,141: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:12:43,141: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:12:43,141: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:12:43,141: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:12:43,141: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:12:43,141: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:12:43,141: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:12:43,141: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:12:43,141: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:12:43,141: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:12:43,141: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:12:43,142: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:12:43,142: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:12:43,142: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:12:43,142: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:12:43,142: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:12:43,142: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:12:43,142: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:12:43,142: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:12:43,142: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:12:43,142: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:12:43,142: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:12:43,142: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:12:43,142: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:12:43,142: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:12:43,142: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:12:43,142: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:12:43,142: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:12:43,142: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:14:05,225: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 06:14:05,225: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 06:14:05,226: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 06:14:05,227: None
[DEBUG]2024-04-10 06:14:05,227: None
[DEBUG]2024-04-10 06:14:05,228: None
[DEBUG]2024-04-10 06:14:05,228: None
[DEBUG]2024-04-10 06:14:05,228: None
[DEBUG]2024-04-10 06:14:05,228: None
[DEBUG]2024-04-10 06:14:05,228: None
[DEBUG]2024-04-10 06:14:05,228: None
[DEBUG]2024-04-10 06:14:05,228: None
[DEBUG]2024-04-10 06:14:05,229: None
[DEBUG]2024-04-10 06:14:05,229: None
[DEBUG]2024-04-10 06:14:05,229: None
[DEBUG]2024-04-10 06:14:05,229: None
[DEBUG]2024-04-10 06:14:05,229: None
[DEBUG]2024-04-10 06:14:05,230: None
[DEBUG]2024-04-10 06:14:05,230: None
[DEBUG]2024-04-10 06:14:05,230: None
[DEBUG]2024-04-10 06:14:05,230: None
[DEBUG]2024-04-10 06:14:05,230: None
[DEBUG]2024-04-10 06:14:05,230: None
[DEBUG]2024-04-10 06:14:05,230: None
[DEBUG]2024-04-10 06:14:05,230: None
[DEBUG]2024-04-10 06:14:05,230: None
[DEBUG]2024-04-10 06:14:05,230: None
[DEBUG]2024-04-10 06:14:05,230: None
[DEBUG]2024-04-10 06:14:05,230: None
[DEBUG]2024-04-10 06:14:05,230: None
[DEBUG]2024-04-10 06:14:05,231: None
[DEBUG]2024-04-10 06:14:05,231: None
[DEBUG]2024-04-10 06:14:05,231: None
[DEBUG]2024-04-10 06:14:05,231: None
[DEBUG]2024-04-10 06:14:05,231: None
[DEBUG]2024-04-10 06:14:05,231: None
[DEBUG]2024-04-10 06:14:05,231: None
[DEBUG]2024-04-10 06:14:05,231: None
[DEBUG]2024-04-10 06:14:05,232: None
[DEBUG]2024-04-10 06:14:05,232: None
[DEBUG]2024-04-10 06:14:05,232: None
[DEBUG]2024-04-10 06:14:05,232: None
[DEBUG]2024-04-10 06:14:05,232: None
[DEBUG]2024-04-10 06:14:05,232: None
[DEBUG]2024-04-10 06:14:05,232: None
[DEBUG]2024-04-10 06:14:05,232: None
[DEBUG]2024-04-10 06:14:05,232: None
[DEBUG]2024-04-10 06:14:05,233: None
[DEBUG]2024-04-10 06:14:05,233: None
[DEBUG]2024-04-10 06:14:05,233: None
[DEBUG]2024-04-10 06:14:05,233: None
[DEBUG]2024-04-10 06:14:05,233: None
[DEBUG]2024-04-10 06:14:05,233: None
[DEBUG]2024-04-10 06:14:05,233: None
[DEBUG]2024-04-10 06:14:05,233: None
[DEBUG]2024-04-10 06:14:05,233: None
[DEBUG]2024-04-10 06:14:05,233: None
[DEBUG]2024-04-10 06:14:05,234: None
[DEBUG]2024-04-10 06:14:05,234: None
[DEBUG]2024-04-10 06:14:05,234: None
[DEBUG]2024-04-10 06:14:05,234: None
[DEBUG]2024-04-10 06:14:05,234: None
[DEBUG]2024-04-10 06:14:05,234: None
[DEBUG]2024-04-10 06:14:05,234: None
[DEBUG]2024-04-10 06:14:05,234: None
[DEBUG]2024-04-10 06:14:05,234: None
[DEBUG]2024-04-10 06:14:05,234: None
[DEBUG]2024-04-10 06:14:05,234: None
[DEBUG]2024-04-10 06:14:05,235: None
[DEBUG]2024-04-10 06:14:05,235: None
[DEBUG]2024-04-10 06:14:05,235: None
[DEBUG]2024-04-10 06:14:05,235: None
[DEBUG]2024-04-10 06:14:05,235: None
[DEBUG]2024-04-10 06:14:05,235: None
[DEBUG]2024-04-10 06:14:05,235: None
[DEBUG]2024-04-10 06:14:05,235: None
[DEBUG]2024-04-10 06:14:05,235: None
[DEBUG]2024-04-10 06:14:05,235: None
[DEBUG]2024-04-10 06:14:05,235: None
[DEBUG]2024-04-10 06:14:05,235: None
[DEBUG]2024-04-10 06:14:05,236: None
[DEBUG]2024-04-10 06:14:05,236: None
[DEBUG]2024-04-10 06:14:05,236: None
[DEBUG]2024-04-10 06:14:05,236: None
[DEBUG]2024-04-10 06:14:05,236: None
[DEBUG]2024-04-10 06:14:05,236: None
[DEBUG]2024-04-10 06:14:05,236: None
[DEBUG]2024-04-10 06:14:05,236: None
[DEBUG]2024-04-10 06:14:05,236: None
[DEBUG]2024-04-10 06:14:05,236: None
[DEBUG]2024-04-10 06:14:05,236: None
[DEBUG]2024-04-10 06:14:05,236: None
[DEBUG]2024-04-10 06:14:05,236: None
[DEBUG]2024-04-10 06:14:05,236: None
[DEBUG]2024-04-10 06:14:05,236: None
[DEBUG]2024-04-10 06:14:05,236: None
[DEBUG]2024-04-10 06:14:05,236: None
[DEBUG]2024-04-10 06:14:05,236: None
[DEBUG]2024-04-10 06:14:05,236: None
[DEBUG]2024-04-10 06:14:05,236: None
[DEBUG]2024-04-10 06:14:05,236: None
[DEBUG]2024-04-10 06:14:05,236: None
[DEBUG]2024-04-10 06:14:05,236: None
[DEBUG]2024-04-10 06:14:05,236: None
[DEBUG]2024-04-10 06:14:05,236: None
[DEBUG]2024-04-10 06:14:05,236: None
[DEBUG]2024-04-10 06:14:05,236: None
[DEBUG]2024-04-10 06:14:05,237: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:14:05,237: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:14:05,237: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:14:05,237: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:14:05,237: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:14:05,237: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:14:05,237: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:14:05,237: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:14:05,237: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:14:05,237: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:14:05,237: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:14:05,237: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:14:05,237: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:14:05,237: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:14:05,237: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:14:05,238: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:14:05,238: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:14:05,238: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:14:05,238: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:14:05,238: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:14:05,238: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:14:05,238: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:14:05,238: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:14:05,238: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:14:05,238: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:14:05,238: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:14:05,238: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:14:05,238: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:14:05,238: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:14:05,238: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:14:05,238: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:14:05,238: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:14:05,238: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:14:05,238: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:14:05,238: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:14:05,238: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:14:05,238: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:14:05,238: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:14:05,238: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:14:05,238: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:14:05,238: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:14:05,238: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:14:05,238: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:14:05,238: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:14:05,238: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:14:05,239: None
[DEBUG]2024-04-10 06:14:05,239: None
[DEBUG]2024-04-10 06:14:05,239: None
[DEBUG]2024-04-10 06:14:05,239: None
[DEBUG]2024-04-10 06:14:05,239: None
[DEBUG]2024-04-10 06:14:05,239: None
[DEBUG]2024-04-10 06:14:05,239: None
[DEBUG]2024-04-10 06:14:05,239: None
[DEBUG]2024-04-10 06:14:05,239: None
[DEBUG]2024-04-10 06:14:05,239: None
[DEBUG]2024-04-10 06:14:05,239: None
[DEBUG]2024-04-10 06:14:05,239: None
[DEBUG]2024-04-10 06:14:05,239: None
[DEBUG]2024-04-10 06:14:05,239: None
[DEBUG]2024-04-10 06:14:05,239: None
[DEBUG]2024-04-10 06:14:05,239: None
[DEBUG]2024-04-10 06:14:05,240: None
[DEBUG]2024-04-10 06:14:05,240: None
[DEBUG]2024-04-10 06:14:05,240: None
[DEBUG]2024-04-10 06:14:05,240: None
[DEBUG]2024-04-10 06:14:05,240: None
[DEBUG]2024-04-10 06:14:05,240: None
[DEBUG]2024-04-10 06:14:05,240: None
[DEBUG]2024-04-10 06:14:05,240: None
[DEBUG]2024-04-10 06:14:05,240: None
[DEBUG]2024-04-10 06:14:05,240: None
[DEBUG]2024-04-10 06:14:05,240: None
[DEBUG]2024-04-10 06:14:05,240: None
[DEBUG]2024-04-10 06:14:05,240: None
[DEBUG]2024-04-10 06:14:05,240: None
[DEBUG]2024-04-10 06:14:05,240: None
[DEBUG]2024-04-10 06:14:05,240: None
[DEBUG]2024-04-10 06:14:05,240: None
[DEBUG]2024-04-10 06:14:05,241: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:14:05,241: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:14:05,241: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:14:05,241: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:14:05,241: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:14:05,241: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:14:05,241: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:14:05,241: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:14:05,241: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:14:05,241: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:14:05,241: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:14:05,241: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:14:05,241: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:14:05,241: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:14:05,241: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:14:05,241: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:14:05,241: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:14:05,241: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:14:05,242: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:14:05,242: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:14:05,242: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:14:05,242: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:14:05,242: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:14:05,242: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:14:05,242: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:14:05,242: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:14:05,242: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:14:05,242: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:14:05,242: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:14:05,242: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:14:05,242: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:14:05,242: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:14:05,242: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:14:05,242: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:14:05,242: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:14:05,242: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:14:05,242: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:14:05,242: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:14:05,242: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:14:05,242: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:14:05,242: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:14:05,242: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:14:05,242: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:14:05,242: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:14:05,242: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:14:05,242: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:14:05,242: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:14:05,242: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:14:05,242: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:14:05,242: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:14:05,242: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:14:05,242: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:14:05,242: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:14:05,242: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:14:57,247: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 06:14:57,247: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 06:14:57,248: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 06:14:57,249: None
[DEBUG]2024-04-10 06:14:57,249: None
[DEBUG]2024-04-10 06:14:57,250: None
[DEBUG]2024-04-10 06:14:57,250: None
[DEBUG]2024-04-10 06:14:57,250: None
[DEBUG]2024-04-10 06:14:57,251: None
[DEBUG]2024-04-10 06:14:57,251: None
[DEBUG]2024-04-10 06:14:57,251: None
[DEBUG]2024-04-10 06:14:57,251: None
[DEBUG]2024-04-10 06:14:57,251: None
[DEBUG]2024-04-10 06:14:57,251: None
[DEBUG]2024-04-10 06:14:57,251: None
[DEBUG]2024-04-10 06:14:57,251: None
[DEBUG]2024-04-10 06:14:57,251: None
[DEBUG]2024-04-10 06:14:57,252: None
[DEBUG]2024-04-10 06:14:57,252: None
[DEBUG]2024-04-10 06:14:57,252: None
[DEBUG]2024-04-10 06:14:57,252: None
[DEBUG]2024-04-10 06:14:57,252: None
[DEBUG]2024-04-10 06:14:57,252: None
[DEBUG]2024-04-10 06:14:57,253: None
[DEBUG]2024-04-10 06:14:57,253: None
[DEBUG]2024-04-10 06:14:57,253: None
[DEBUG]2024-04-10 06:14:57,253: None
[DEBUG]2024-04-10 06:14:57,253: None
[DEBUG]2024-04-10 06:14:57,253: None
[DEBUG]2024-04-10 06:14:57,253: None
[DEBUG]2024-04-10 06:14:57,253: None
[DEBUG]2024-04-10 06:14:57,253: None
[DEBUG]2024-04-10 06:14:57,253: None
[DEBUG]2024-04-10 06:14:57,253: None
[DEBUG]2024-04-10 06:14:57,253: None
[DEBUG]2024-04-10 06:14:57,253: None
[DEBUG]2024-04-10 06:14:57,253: None
[DEBUG]2024-04-10 06:14:57,253: None
[DEBUG]2024-04-10 06:14:57,254: None
[DEBUG]2024-04-10 06:14:57,254: None
[DEBUG]2024-04-10 06:14:57,254: None
[DEBUG]2024-04-10 06:14:57,254: None
[DEBUG]2024-04-10 06:14:57,254: None
[DEBUG]2024-04-10 06:14:57,254: None
[DEBUG]2024-04-10 06:14:57,254: None
[DEBUG]2024-04-10 06:14:57,254: None
[DEBUG]2024-04-10 06:14:57,254: None
[DEBUG]2024-04-10 06:14:57,255: None
[DEBUG]2024-04-10 06:14:57,255: None
[DEBUG]2024-04-10 06:14:57,255: None
[DEBUG]2024-04-10 06:14:57,255: None
[DEBUG]2024-04-10 06:14:57,255: None
[DEBUG]2024-04-10 06:14:57,255: None
[DEBUG]2024-04-10 06:14:57,255: None
[DEBUG]2024-04-10 06:14:57,255: None
[DEBUG]2024-04-10 06:14:57,255: None
[DEBUG]2024-04-10 06:14:57,255: None
[DEBUG]2024-04-10 06:14:57,256: None
[DEBUG]2024-04-10 06:14:57,256: None
[DEBUG]2024-04-10 06:14:57,256: None
[DEBUG]2024-04-10 06:14:57,256: None
[DEBUG]2024-04-10 06:14:57,256: None
[DEBUG]2024-04-10 06:14:57,256: None
[DEBUG]2024-04-10 06:14:57,256: None
[DEBUG]2024-04-10 06:14:57,256: None
[DEBUG]2024-04-10 06:14:57,256: None
[DEBUG]2024-04-10 06:14:57,256: None
[DEBUG]2024-04-10 06:14:57,256: None
[DEBUG]2024-04-10 06:14:57,257: None
[DEBUG]2024-04-10 06:14:57,257: None
[DEBUG]2024-04-10 06:14:57,257: None
[DEBUG]2024-04-10 06:14:57,257: None
[DEBUG]2024-04-10 06:14:57,257: None
[DEBUG]2024-04-10 06:14:57,257: None
[DEBUG]2024-04-10 06:14:57,257: None
[DEBUG]2024-04-10 06:14:57,257: None
[DEBUG]2024-04-10 06:14:57,257: None
[DEBUG]2024-04-10 06:14:57,257: None
[DEBUG]2024-04-10 06:14:57,257: None
[DEBUG]2024-04-10 06:14:57,257: None
[DEBUG]2024-04-10 06:14:57,257: None
[DEBUG]2024-04-10 06:14:57,257: None
[DEBUG]2024-04-10 06:14:57,257: None
[DEBUG]2024-04-10 06:14:57,257: None
[DEBUG]2024-04-10 06:14:57,257: None
[DEBUG]2024-04-10 06:14:57,257: None
[DEBUG]2024-04-10 06:14:57,257: None
[DEBUG]2024-04-10 06:14:57,257: None
[DEBUG]2024-04-10 06:14:57,257: None
[DEBUG]2024-04-10 06:14:57,257: None
[DEBUG]2024-04-10 06:14:57,257: None
[DEBUG]2024-04-10 06:14:57,257: None
[DEBUG]2024-04-10 06:14:57,257: None
[DEBUG]2024-04-10 06:14:57,258: None
[DEBUG]2024-04-10 06:14:57,258: None
[DEBUG]2024-04-10 06:14:57,258: None
[DEBUG]2024-04-10 06:14:57,258: None
[DEBUG]2024-04-10 06:14:57,258: None
[DEBUG]2024-04-10 06:14:57,258: None
[DEBUG]2024-04-10 06:14:57,258: None
[DEBUG]2024-04-10 06:14:57,258: None
[DEBUG]2024-04-10 06:14:57,258: None
[DEBUG]2024-04-10 06:14:57,258: None
[DEBUG]2024-04-10 06:14:57,258: None
[DEBUG]2024-04-10 06:14:57,258: None
[DEBUG]2024-04-10 06:14:57,258: None
[DEBUG]2024-04-10 06:14:57,258: None
[DEBUG]2024-04-10 06:14:57,260: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:14:57,260: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:14:57,260: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:14:57,260: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:14:57,260: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:14:57,260: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:14:57,260: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:14:57,260: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:14:57,260: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:14:57,260: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:14:57,260: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:14:57,260: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:14:57,260: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:14:57,260: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:14:57,260: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:14:57,260: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:14:57,260: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:14:57,260: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:14:57,260: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:14:57,260: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:14:57,260: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:14:57,260: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:14:57,260: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:14:57,260: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:14:57,260: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:14:57,260: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:14:57,260: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:14:57,260: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:14:57,260: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:14:57,260: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:14:57,260: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:14:57,260: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:14:57,260: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:14:57,260: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:14:57,260: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:14:57,260: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:14:57,260: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:14:57,260: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:14:57,260: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:14:57,260: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:14:57,260: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:14:57,260: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:14:57,260: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:14:57,260: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:14:57,260: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:14:57,262: None
[DEBUG]2024-04-10 06:14:57,262: None
[DEBUG]2024-04-10 06:14:57,262: None
[DEBUG]2024-04-10 06:14:57,262: None
[DEBUG]2024-04-10 06:14:57,262: None
[DEBUG]2024-04-10 06:14:57,262: None
[DEBUG]2024-04-10 06:14:57,262: None
[DEBUG]2024-04-10 06:14:57,262: None
[DEBUG]2024-04-10 06:14:57,262: None
[DEBUG]2024-04-10 06:14:57,262: None
[DEBUG]2024-04-10 06:14:57,262: None
[DEBUG]2024-04-10 06:14:57,262: None
[DEBUG]2024-04-10 06:14:57,262: None
[DEBUG]2024-04-10 06:14:57,262: None
[DEBUG]2024-04-10 06:14:57,262: None
[DEBUG]2024-04-10 06:14:57,262: None
[DEBUG]2024-04-10 06:14:57,263: None
[DEBUG]2024-04-10 06:14:57,263: None
[DEBUG]2024-04-10 06:14:57,263: None
[DEBUG]2024-04-10 06:14:57,263: None
[DEBUG]2024-04-10 06:14:57,263: None
[DEBUG]2024-04-10 06:14:57,263: None
[DEBUG]2024-04-10 06:14:57,263: None
[DEBUG]2024-04-10 06:14:57,263: None
[DEBUG]2024-04-10 06:14:57,263: None
[DEBUG]2024-04-10 06:14:57,263: None
[DEBUG]2024-04-10 06:14:57,263: None
[DEBUG]2024-04-10 06:14:57,263: None
[DEBUG]2024-04-10 06:14:57,263: None
[DEBUG]2024-04-10 06:14:57,263: None
[DEBUG]2024-04-10 06:14:57,263: None
[DEBUG]2024-04-10 06:14:57,263: None
[DEBUG]2024-04-10 06:14:57,263: None
[DEBUG]2024-04-10 06:14:57,264: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:14:57,264: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:14:57,264: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:14:57,264: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:14:57,264: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:14:57,264: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:14:57,264: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:14:57,264: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:14:57,264: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:14:57,264: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:14:57,264: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:14:57,264: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:14:57,264: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:14:57,264: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:14:57,264: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:14:57,264: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:14:57,264: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:14:57,264: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:14:57,264: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:14:57,264: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:14:57,264: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:14:57,264: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:14:57,264: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:14:57,264: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:14:57,264: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:14:57,264: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:14:57,264: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:14:57,264: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:14:57,264: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:14:57,264: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:14:57,264: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:14:57,264: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:14:57,264: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:14:57,264: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:14:57,264: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:14:57,264: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:14:57,265: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:14:57,265: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:14:57,265: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:14:57,265: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:14:57,265: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:14:57,265: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:14:57,265: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:14:57,265: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:14:57,265: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:14:57,265: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:14:57,265: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:14:57,265: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:14:57,265: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:14:57,265: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:14:57,265: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:14:57,265: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:14:57,265: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:14:57,265: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:15:43,650: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 06:15:43,650: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 06:15:43,650: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 06:15:43,651: None
[DEBUG]2024-04-10 06:15:43,651: None
[DEBUG]2024-04-10 06:15:43,652: None
[DEBUG]2024-04-10 06:15:43,652: None
[DEBUG]2024-04-10 06:15:43,652: None
[DEBUG]2024-04-10 06:15:43,653: None
[DEBUG]2024-04-10 06:15:43,653: None
[DEBUG]2024-04-10 06:15:43,653: None
[DEBUG]2024-04-10 06:15:43,653: None
[DEBUG]2024-04-10 06:15:43,653: None
[DEBUG]2024-04-10 06:15:43,653: None
[DEBUG]2024-04-10 06:15:43,653: None
[DEBUG]2024-04-10 06:15:43,653: None
[DEBUG]2024-04-10 06:15:43,653: None
[DEBUG]2024-04-10 06:15:43,654: None
[DEBUG]2024-04-10 06:15:43,654: None
[DEBUG]2024-04-10 06:15:43,654: None
[DEBUG]2024-04-10 06:15:43,654: None
[DEBUG]2024-04-10 06:15:43,654: None
[DEBUG]2024-04-10 06:15:43,654: None
[DEBUG]2024-04-10 06:15:43,654: None
[DEBUG]2024-04-10 06:15:43,654: None
[DEBUG]2024-04-10 06:15:43,654: None
[DEBUG]2024-04-10 06:15:43,654: None
[DEBUG]2024-04-10 06:15:43,654: None
[DEBUG]2024-04-10 06:15:43,654: None
[DEBUG]2024-04-10 06:15:43,654: None
[DEBUG]2024-04-10 06:15:43,655: None
[DEBUG]2024-04-10 06:15:43,655: None
[DEBUG]2024-04-10 06:15:43,655: None
[DEBUG]2024-04-10 06:15:43,655: None
[DEBUG]2024-04-10 06:15:43,655: None
[DEBUG]2024-04-10 06:15:43,655: None
[DEBUG]2024-04-10 06:15:43,655: None
[DEBUG]2024-04-10 06:15:43,655: None
[DEBUG]2024-04-10 06:15:43,656: None
[DEBUG]2024-04-10 06:15:43,656: None
[DEBUG]2024-04-10 06:15:43,656: None
[DEBUG]2024-04-10 06:15:43,656: None
[DEBUG]2024-04-10 06:15:43,656: None
[DEBUG]2024-04-10 06:15:43,656: None
[DEBUG]2024-04-10 06:15:43,656: None
[DEBUG]2024-04-10 06:15:43,656: None
[DEBUG]2024-04-10 06:15:43,656: None
[DEBUG]2024-04-10 06:15:43,657: None
[DEBUG]2024-04-10 06:15:43,657: None
[DEBUG]2024-04-10 06:15:43,657: None
[DEBUG]2024-04-10 06:15:43,657: None
[DEBUG]2024-04-10 06:15:43,657: None
[DEBUG]2024-04-10 06:15:43,657: None
[DEBUG]2024-04-10 06:15:43,657: None
[DEBUG]2024-04-10 06:15:43,657: None
[DEBUG]2024-04-10 06:15:43,657: None
[DEBUG]2024-04-10 06:15:43,657: None
[DEBUG]2024-04-10 06:15:43,658: None
[DEBUG]2024-04-10 06:15:43,658: None
[DEBUG]2024-04-10 06:15:43,658: None
[DEBUG]2024-04-10 06:15:43,658: None
[DEBUG]2024-04-10 06:15:43,658: None
[DEBUG]2024-04-10 06:15:43,658: None
[DEBUG]2024-04-10 06:15:43,658: None
[DEBUG]2024-04-10 06:15:43,658: None
[DEBUG]2024-04-10 06:15:43,658: None
[DEBUG]2024-04-10 06:15:43,658: None
[DEBUG]2024-04-10 06:15:43,658: None
[DEBUG]2024-04-10 06:15:43,659: None
[DEBUG]2024-04-10 06:15:43,659: None
[DEBUG]2024-04-10 06:15:43,659: None
[DEBUG]2024-04-10 06:15:43,659: None
[DEBUG]2024-04-10 06:15:43,659: None
[DEBUG]2024-04-10 06:15:43,659: None
[DEBUG]2024-04-10 06:15:43,659: None
[DEBUG]2024-04-10 06:15:43,659: None
[DEBUG]2024-04-10 06:15:43,659: None
[DEBUG]2024-04-10 06:15:43,659: None
[DEBUG]2024-04-10 06:15:43,659: None
[DEBUG]2024-04-10 06:15:43,659: None
[DEBUG]2024-04-10 06:15:43,660: None
[DEBUG]2024-04-10 06:15:43,660: None
[DEBUG]2024-04-10 06:15:43,660: None
[DEBUG]2024-04-10 06:15:43,660: None
[DEBUG]2024-04-10 06:15:43,660: None
[DEBUG]2024-04-10 06:15:43,660: None
[DEBUG]2024-04-10 06:15:43,660: None
[DEBUG]2024-04-10 06:15:43,660: None
[DEBUG]2024-04-10 06:15:43,660: None
[DEBUG]2024-04-10 06:15:43,660: None
[DEBUG]2024-04-10 06:15:43,660: None
[DEBUG]2024-04-10 06:15:43,660: None
[DEBUG]2024-04-10 06:15:43,660: None
[DEBUG]2024-04-10 06:15:43,660: None
[DEBUG]2024-04-10 06:15:43,660: None
[DEBUG]2024-04-10 06:15:43,660: None
[DEBUG]2024-04-10 06:15:43,660: None
[DEBUG]2024-04-10 06:15:43,660: None
[DEBUG]2024-04-10 06:15:43,660: None
[DEBUG]2024-04-10 06:15:43,660: None
[DEBUG]2024-04-10 06:15:43,660: None
[DEBUG]2024-04-10 06:15:43,660: None
[DEBUG]2024-04-10 06:15:43,660: None
[DEBUG]2024-04-10 06:15:43,660: None
[DEBUG]2024-04-10 06:15:43,660: None
[DEBUG]2024-04-10 06:15:43,660: None
[DEBUG]2024-04-10 06:15:43,660: None
[DEBUG]2024-04-10 06:15:43,661: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:15:43,661: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:15:43,661: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:15:43,661: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:15:43,661: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:15:43,661: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:15:43,661: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:15:43,661: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:15:43,661: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:15:43,661: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:15:43,661: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:15:43,661: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:15:43,661: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:15:43,661: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:15:43,661: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:15:43,662: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:15:43,662: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:15:43,662: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:15:43,662: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:15:43,662: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:15:43,662: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:15:43,662: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:15:43,662: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:15:43,662: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:15:43,662: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:15:43,662: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:15:43,662: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:15:43,662: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:15:43,662: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:15:43,662: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:15:43,662: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:15:43,662: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:15:43,662: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:15:43,662: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:15:43,662: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:15:43,662: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:15:43,662: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:15:43,662: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:15:43,662: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:15:43,662: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:15:43,662: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:15:43,662: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:15:43,662: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:15:43,662: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:15:43,662: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:15:43,663: None
[DEBUG]2024-04-10 06:15:43,663: None
[DEBUG]2024-04-10 06:15:43,663: None
[DEBUG]2024-04-10 06:15:43,663: None
[DEBUG]2024-04-10 06:15:43,663: None
[DEBUG]2024-04-10 06:15:43,663: None
[DEBUG]2024-04-10 06:15:43,663: None
[DEBUG]2024-04-10 06:15:43,663: None
[DEBUG]2024-04-10 06:15:43,663: None
[DEBUG]2024-04-10 06:15:43,663: None
[DEBUG]2024-04-10 06:15:43,663: None
[DEBUG]2024-04-10 06:15:43,663: None
[DEBUG]2024-04-10 06:15:43,663: None
[DEBUG]2024-04-10 06:15:43,663: None
[DEBUG]2024-04-10 06:15:43,663: None
[DEBUG]2024-04-10 06:15:43,663: None
[DEBUG]2024-04-10 06:15:43,664: None
[DEBUG]2024-04-10 06:15:43,664: None
[DEBUG]2024-04-10 06:15:43,664: None
[DEBUG]2024-04-10 06:15:43,664: None
[DEBUG]2024-04-10 06:15:43,664: None
[DEBUG]2024-04-10 06:15:43,664: None
[DEBUG]2024-04-10 06:15:43,664: None
[DEBUG]2024-04-10 06:15:43,664: None
[DEBUG]2024-04-10 06:15:43,664: None
[DEBUG]2024-04-10 06:15:43,664: None
[DEBUG]2024-04-10 06:15:43,664: None
[DEBUG]2024-04-10 06:15:43,664: None
[DEBUG]2024-04-10 06:15:43,664: None
[DEBUG]2024-04-10 06:15:43,664: None
[DEBUG]2024-04-10 06:15:43,664: None
[DEBUG]2024-04-10 06:15:43,664: None
[DEBUG]2024-04-10 06:15:43,664: None
[DEBUG]2024-04-10 06:15:43,665: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:15:43,665: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:15:43,665: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:15:43,665: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:15:43,665: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:15:43,665: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:15:43,665: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:15:43,665: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:15:43,665: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:15:43,665: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:15:43,665: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:15:43,665: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:15:43,665: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:15:43,665: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:15:43,665: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:15:43,665: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:15:43,665: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:15:43,665: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:15:43,666: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:15:43,666: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:15:43,666: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:15:43,666: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:15:43,666: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:15:43,666: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:15:43,666: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:15:43,666: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:15:43,666: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:15:43,666: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:15:43,666: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:15:43,666: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:15:43,666: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:15:43,666: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:15:43,666: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:15:43,666: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:15:43,666: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:15:43,666: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:15:43,666: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:15:43,666: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:15:43,666: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:15:43,666: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:15:43,666: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:15:43,666: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:15:43,666: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:15:43,666: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:15:43,666: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:15:43,666: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:15:43,666: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:15:43,666: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:15:43,666: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:15:43,666: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:15:43,666: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:15:43,666: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:15:43,666: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:15:43,666: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:16:22,519: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 06:16:22,519: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 06:16:22,519: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 06:16:22,520: None
[DEBUG]2024-04-10 06:16:22,520: None
[DEBUG]2024-04-10 06:16:22,521: None
[DEBUG]2024-04-10 06:16:22,521: None
[DEBUG]2024-04-10 06:16:22,521: None
[DEBUG]2024-04-10 06:16:22,522: None
[DEBUG]2024-04-10 06:16:22,522: None
[DEBUG]2024-04-10 06:16:22,522: None
[DEBUG]2024-04-10 06:16:22,522: None
[DEBUG]2024-04-10 06:16:22,522: None
[DEBUG]2024-04-10 06:16:22,522: None
[DEBUG]2024-04-10 06:16:22,522: None
[DEBUG]2024-04-10 06:16:22,522: None
[DEBUG]2024-04-10 06:16:22,522: None
[DEBUG]2024-04-10 06:16:22,523: None
[DEBUG]2024-04-10 06:16:22,523: None
[DEBUG]2024-04-10 06:16:22,523: None
[DEBUG]2024-04-10 06:16:22,523: None
[DEBUG]2024-04-10 06:16:22,523: None
[DEBUG]2024-04-10 06:16:22,523: None
[DEBUG]2024-04-10 06:16:22,524: None
[DEBUG]2024-04-10 06:16:22,524: None
[DEBUG]2024-04-10 06:16:22,524: None
[DEBUG]2024-04-10 06:16:22,524: None
[DEBUG]2024-04-10 06:16:22,524: None
[DEBUG]2024-04-10 06:16:22,524: None
[DEBUG]2024-04-10 06:16:22,524: None
[DEBUG]2024-04-10 06:16:22,524: None
[DEBUG]2024-04-10 06:16:22,524: None
[DEBUG]2024-04-10 06:16:22,524: None
[DEBUG]2024-04-10 06:16:22,524: None
[DEBUG]2024-04-10 06:16:22,524: None
[DEBUG]2024-04-10 06:16:22,524: None
[DEBUG]2024-04-10 06:16:22,524: None
[DEBUG]2024-04-10 06:16:22,524: None
[DEBUG]2024-04-10 06:16:22,525: None
[DEBUG]2024-04-10 06:16:22,525: None
[DEBUG]2024-04-10 06:16:22,525: None
[DEBUG]2024-04-10 06:16:22,525: None
[DEBUG]2024-04-10 06:16:22,525: None
[DEBUG]2024-04-10 06:16:22,525: None
[DEBUG]2024-04-10 06:16:22,525: None
[DEBUG]2024-04-10 06:16:22,525: None
[DEBUG]2024-04-10 06:16:22,525: None
[DEBUG]2024-04-10 06:16:22,526: None
[DEBUG]2024-04-10 06:16:22,526: None
[DEBUG]2024-04-10 06:16:22,526: None
[DEBUG]2024-04-10 06:16:22,526: None
[DEBUG]2024-04-10 06:16:22,526: None
[DEBUG]2024-04-10 06:16:22,526: None
[DEBUG]2024-04-10 06:16:22,526: None
[DEBUG]2024-04-10 06:16:22,526: None
[DEBUG]2024-04-10 06:16:22,526: None
[DEBUG]2024-04-10 06:16:22,526: None
[DEBUG]2024-04-10 06:16:22,527: None
[DEBUG]2024-04-10 06:16:22,527: None
[DEBUG]2024-04-10 06:16:22,527: None
[DEBUG]2024-04-10 06:16:22,527: None
[DEBUG]2024-04-10 06:16:22,527: None
[DEBUG]2024-04-10 06:16:22,527: None
[DEBUG]2024-04-10 06:16:22,527: None
[DEBUG]2024-04-10 06:16:22,527: None
[DEBUG]2024-04-10 06:16:22,527: None
[DEBUG]2024-04-10 06:16:22,527: None
[DEBUG]2024-04-10 06:16:22,527: None
[DEBUG]2024-04-10 06:16:22,528: None
[DEBUG]2024-04-10 06:16:22,528: None
[DEBUG]2024-04-10 06:16:22,528: None
[DEBUG]2024-04-10 06:16:22,528: None
[DEBUG]2024-04-10 06:16:22,528: None
[DEBUG]2024-04-10 06:16:22,528: None
[DEBUG]2024-04-10 06:16:22,528: None
[DEBUG]2024-04-10 06:16:22,528: None
[DEBUG]2024-04-10 06:16:22,528: None
[DEBUG]2024-04-10 06:16:22,528: None
[DEBUG]2024-04-10 06:16:22,528: None
[DEBUG]2024-04-10 06:16:22,528: None
[DEBUG]2024-04-10 06:16:22,529: None
[DEBUG]2024-04-10 06:16:22,529: None
[DEBUG]2024-04-10 06:16:22,529: None
[DEBUG]2024-04-10 06:16:22,529: None
[DEBUG]2024-04-10 06:16:22,529: None
[DEBUG]2024-04-10 06:16:22,529: None
[DEBUG]2024-04-10 06:16:22,529: None
[DEBUG]2024-04-10 06:16:22,529: None
[DEBUG]2024-04-10 06:16:22,529: None
[DEBUG]2024-04-10 06:16:22,529: None
[DEBUG]2024-04-10 06:16:22,529: None
[DEBUG]2024-04-10 06:16:22,529: None
[DEBUG]2024-04-10 06:16:22,529: None
[DEBUG]2024-04-10 06:16:22,530: None
[DEBUG]2024-04-10 06:16:22,530: None
[DEBUG]2024-04-10 06:16:22,530: None
[DEBUG]2024-04-10 06:16:22,530: None
[DEBUG]2024-04-10 06:16:22,530: None
[DEBUG]2024-04-10 06:16:22,530: None
[DEBUG]2024-04-10 06:16:22,530: None
[DEBUG]2024-04-10 06:16:22,530: None
[DEBUG]2024-04-10 06:16:22,530: None
[DEBUG]2024-04-10 06:16:22,530: None
[DEBUG]2024-04-10 06:16:22,530: None
[DEBUG]2024-04-10 06:16:22,530: None
[DEBUG]2024-04-10 06:16:22,530: None
[DEBUG]2024-04-10 06:16:22,530: None
[DEBUG]2024-04-10 06:16:22,531: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:16:22,531: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:16:22,531: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:16:22,531: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:16:22,531: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:16:22,531: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:16:22,531: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:16:22,531: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:16:22,531: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:16:22,531: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:16:22,531: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:16:22,531: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:16:22,531: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:16:22,531: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:16:22,531: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:16:22,531: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:16:22,531: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:16:22,531: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:16:22,531: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:16:22,531: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:16:22,531: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:16:22,531: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:16:22,531: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:16:22,531: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:16:22,531: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:16:22,531: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:16:22,531: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:16:22,531: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:16:22,531: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:16:22,531: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:16:22,531: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:16:22,531: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:16:22,531: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:16:22,531: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:16:22,531: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:16:22,531: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:16:22,531: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:16:22,531: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:16:22,531: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:16:22,531: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:16:22,531: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:16:22,531: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:16:22,531: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:16:22,531: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:16:22,531: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:16:22,533: None
[DEBUG]2024-04-10 06:16:22,533: None
[DEBUG]2024-04-10 06:16:22,533: None
[DEBUG]2024-04-10 06:16:22,533: None
[DEBUG]2024-04-10 06:16:22,533: None
[DEBUG]2024-04-10 06:16:22,533: None
[DEBUG]2024-04-10 06:16:22,533: None
[DEBUG]2024-04-10 06:16:22,533: None
[DEBUG]2024-04-10 06:16:22,533: None
[DEBUG]2024-04-10 06:16:22,533: None
[DEBUG]2024-04-10 06:16:22,533: None
[DEBUG]2024-04-10 06:16:22,533: None
[DEBUG]2024-04-10 06:16:22,533: None
[DEBUG]2024-04-10 06:16:22,533: None
[DEBUG]2024-04-10 06:16:22,533: None
[DEBUG]2024-04-10 06:16:22,533: None
[DEBUG]2024-04-10 06:16:22,534: None
[DEBUG]2024-04-10 06:16:22,534: None
[DEBUG]2024-04-10 06:16:22,534: None
[DEBUG]2024-04-10 06:16:22,534: None
[DEBUG]2024-04-10 06:16:22,534: None
[DEBUG]2024-04-10 06:16:22,534: None
[DEBUG]2024-04-10 06:16:22,534: None
[DEBUG]2024-04-10 06:16:22,534: None
[DEBUG]2024-04-10 06:16:22,534: None
[DEBUG]2024-04-10 06:16:22,534: None
[DEBUG]2024-04-10 06:16:22,534: None
[DEBUG]2024-04-10 06:16:22,534: None
[DEBUG]2024-04-10 06:16:22,534: None
[DEBUG]2024-04-10 06:16:22,534: None
[DEBUG]2024-04-10 06:16:22,534: None
[DEBUG]2024-04-10 06:16:22,534: None
[DEBUG]2024-04-10 06:16:22,534: None
[DEBUG]2024-04-10 06:16:22,535: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:16:22,535: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:16:22,535: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:16:22,535: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:16:22,535: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:16:22,535: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:16:22,535: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:16:22,535: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:16:22,535: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:16:22,535: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:16:22,535: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:16:22,535: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:16:22,535: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:16:22,535: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:16:22,535: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:16:22,535: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:16:22,535: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:16:22,535: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:16:22,535: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:16:22,535: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:16:22,535: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:16:22,535: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:16:22,535: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:16:22,535: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:16:22,535: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:16:22,535: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:16:22,535: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:16:22,535: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:16:22,535: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:16:22,535: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:16:22,535: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:16:22,535: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:16:22,535: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:16:22,535: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:16:22,535: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:16:22,535: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:16:22,536: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:16:22,536: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:16:22,536: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:16:22,536: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:16:22,536: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:16:22,536: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:16:22,536: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:16:22,536: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:16:22,536: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:16:22,536: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:16:22,536: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:16:22,536: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:16:22,536: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:16:22,536: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:16:22,536: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:16:22,536: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:16:22,536: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:16:22,536: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:16:41,655: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 06:16:41,655: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 06:16:41,655: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 06:16:41,657: None
[DEBUG]2024-04-10 06:16:41,657: None
[DEBUG]2024-04-10 06:16:41,658: None
[DEBUG]2024-04-10 06:16:41,658: None
[DEBUG]2024-04-10 06:16:41,658: None
[DEBUG]2024-04-10 06:16:41,658: None
[DEBUG]2024-04-10 06:16:41,658: None
[DEBUG]2024-04-10 06:16:41,658: None
[DEBUG]2024-04-10 06:16:41,658: None
[DEBUG]2024-04-10 06:16:41,659: None
[DEBUG]2024-04-10 06:16:41,659: None
[DEBUG]2024-04-10 06:16:41,659: None
[DEBUG]2024-04-10 06:16:41,659: None
[DEBUG]2024-04-10 06:16:41,659: None
[DEBUG]2024-04-10 06:16:41,659: None
[DEBUG]2024-04-10 06:16:41,659: None
[DEBUG]2024-04-10 06:16:41,659: None
[DEBUG]2024-04-10 06:16:41,659: None
[DEBUG]2024-04-10 06:16:41,659: None
[DEBUG]2024-04-10 06:16:41,659: None
[DEBUG]2024-04-10 06:16:41,660: None
[DEBUG]2024-04-10 06:16:41,660: None
[DEBUG]2024-04-10 06:16:41,660: None
[DEBUG]2024-04-10 06:16:41,660: None
[DEBUG]2024-04-10 06:16:41,660: None
[DEBUG]2024-04-10 06:16:41,660: None
[DEBUG]2024-04-10 06:16:41,660: None
[DEBUG]2024-04-10 06:16:41,661: None
[DEBUG]2024-04-10 06:16:41,661: None
[DEBUG]2024-04-10 06:16:41,661: None
[DEBUG]2024-04-10 06:16:41,661: None
[DEBUG]2024-04-10 06:16:41,661: None
[DEBUG]2024-04-10 06:16:41,661: None
[DEBUG]2024-04-10 06:16:41,661: None
[DEBUG]2024-04-10 06:16:41,661: None
[DEBUG]2024-04-10 06:16:41,662: None
[DEBUG]2024-04-10 06:16:41,662: None
[DEBUG]2024-04-10 06:16:41,662: None
[DEBUG]2024-04-10 06:16:41,662: None
[DEBUG]2024-04-10 06:16:41,662: None
[DEBUG]2024-04-10 06:16:41,662: None
[DEBUG]2024-04-10 06:16:41,662: None
[DEBUG]2024-04-10 06:16:41,662: None
[DEBUG]2024-04-10 06:16:41,662: None
[DEBUG]2024-04-10 06:16:41,662: None
[DEBUG]2024-04-10 06:16:41,662: None
[DEBUG]2024-04-10 06:16:41,662: None
[DEBUG]2024-04-10 06:16:41,662: None
[DEBUG]2024-04-10 06:16:41,662: None
[DEBUG]2024-04-10 06:16:41,662: None
[DEBUG]2024-04-10 06:16:41,662: None
[DEBUG]2024-04-10 06:16:41,662: None
[DEBUG]2024-04-10 06:16:41,662: None
[DEBUG]2024-04-10 06:16:41,662: None
[DEBUG]2024-04-10 06:16:41,663: None
[DEBUG]2024-04-10 06:16:41,663: None
[DEBUG]2024-04-10 06:16:41,663: None
[DEBUG]2024-04-10 06:16:41,663: None
[DEBUG]2024-04-10 06:16:41,663: None
[DEBUG]2024-04-10 06:16:41,663: None
[DEBUG]2024-04-10 06:16:41,663: None
[DEBUG]2024-04-10 06:16:41,663: None
[DEBUG]2024-04-10 06:16:41,663: None
[DEBUG]2024-04-10 06:16:41,663: None
[DEBUG]2024-04-10 06:16:41,663: None
[DEBUG]2024-04-10 06:16:41,664: None
[DEBUG]2024-04-10 06:16:41,664: None
[DEBUG]2024-04-10 06:16:41,664: None
[DEBUG]2024-04-10 06:16:41,664: None
[DEBUG]2024-04-10 06:16:41,664: None
[DEBUG]2024-04-10 06:16:41,664: None
[DEBUG]2024-04-10 06:16:41,664: None
[DEBUG]2024-04-10 06:16:41,664: None
[DEBUG]2024-04-10 06:16:41,664: None
[DEBUG]2024-04-10 06:16:41,664: None
[DEBUG]2024-04-10 06:16:41,664: None
[DEBUG]2024-04-10 06:16:41,664: None
[DEBUG]2024-04-10 06:16:41,665: None
[DEBUG]2024-04-10 06:16:41,665: None
[DEBUG]2024-04-10 06:16:41,665: None
[DEBUG]2024-04-10 06:16:41,665: None
[DEBUG]2024-04-10 06:16:41,665: None
[DEBUG]2024-04-10 06:16:41,665: None
[DEBUG]2024-04-10 06:16:41,665: None
[DEBUG]2024-04-10 06:16:41,665: None
[DEBUG]2024-04-10 06:16:41,665: None
[DEBUG]2024-04-10 06:16:41,665: None
[DEBUG]2024-04-10 06:16:41,665: None
[DEBUG]2024-04-10 06:16:41,665: None
[DEBUG]2024-04-10 06:16:41,665: None
[DEBUG]2024-04-10 06:16:41,666: None
[DEBUG]2024-04-10 06:16:41,666: None
[DEBUG]2024-04-10 06:16:41,666: None
[DEBUG]2024-04-10 06:16:41,666: None
[DEBUG]2024-04-10 06:16:41,666: None
[DEBUG]2024-04-10 06:16:41,666: None
[DEBUG]2024-04-10 06:16:41,666: None
[DEBUG]2024-04-10 06:16:41,666: None
[DEBUG]2024-04-10 06:16:41,666: None
[DEBUG]2024-04-10 06:16:41,666: None
[DEBUG]2024-04-10 06:16:41,666: None
[DEBUG]2024-04-10 06:16:41,666: None
[DEBUG]2024-04-10 06:16:41,666: None
[DEBUG]2024-04-10 06:16:41,666: None
[DEBUG]2024-04-10 06:16:41,667: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:16:41,667: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:16:41,667: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:16:41,667: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:16:41,667: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:16:41,667: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:16:41,667: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:16:41,667: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:16:41,667: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:16:41,667: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:16:41,667: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:16:41,667: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:16:41,667: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:16:41,667: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:16:41,667: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:16:41,668: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:16:41,668: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:16:41,668: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:16:41,668: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:16:41,668: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:16:41,668: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:16:41,668: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:16:41,668: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:16:41,668: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:16:41,668: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:16:41,668: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:16:41,668: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:16:41,668: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:16:41,668: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:16:41,668: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:16:41,668: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:16:41,668: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:16:41,668: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:16:41,668: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:16:41,668: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:16:41,668: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:16:41,668: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:16:41,668: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:16:41,668: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:16:41,668: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:16:41,668: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:16:41,668: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:16:41,668: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:16:41,668: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:16:41,668: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:16:41,669: None
[DEBUG]2024-04-10 06:16:41,669: None
[DEBUG]2024-04-10 06:16:41,669: None
[DEBUG]2024-04-10 06:16:41,669: None
[DEBUG]2024-04-10 06:16:41,669: None
[DEBUG]2024-04-10 06:16:41,669: None
[DEBUG]2024-04-10 06:16:41,669: None
[DEBUG]2024-04-10 06:16:41,669: None
[DEBUG]2024-04-10 06:16:41,669: None
[DEBUG]2024-04-10 06:16:41,669: None
[DEBUG]2024-04-10 06:16:41,669: None
[DEBUG]2024-04-10 06:16:41,669: None
[DEBUG]2024-04-10 06:16:41,669: None
[DEBUG]2024-04-10 06:16:41,669: None
[DEBUG]2024-04-10 06:16:41,669: None
[DEBUG]2024-04-10 06:16:41,669: None
[DEBUG]2024-04-10 06:16:41,670: None
[DEBUG]2024-04-10 06:16:41,670: None
[DEBUG]2024-04-10 06:16:41,670: None
[DEBUG]2024-04-10 06:16:41,670: None
[DEBUG]2024-04-10 06:16:41,670: None
[DEBUG]2024-04-10 06:16:41,670: None
[DEBUG]2024-04-10 06:16:41,670: None
[DEBUG]2024-04-10 06:16:41,670: None
[DEBUG]2024-04-10 06:16:41,670: None
[DEBUG]2024-04-10 06:16:41,670: None
[DEBUG]2024-04-10 06:16:41,670: None
[DEBUG]2024-04-10 06:16:41,670: None
[DEBUG]2024-04-10 06:16:41,670: None
[DEBUG]2024-04-10 06:16:41,670: None
[DEBUG]2024-04-10 06:16:41,670: None
[DEBUG]2024-04-10 06:16:41,670: None
[DEBUG]2024-04-10 06:16:41,670: None
[DEBUG]2024-04-10 06:16:41,671: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:16:41,671: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:16:41,671: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:16:41,671: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:16:41,671: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:16:41,671: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:16:41,671: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:16:41,671: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:16:41,671: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:16:41,671: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:16:41,671: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:16:41,671: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:16:41,671: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:16:41,671: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:16:41,671: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:16:41,671: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:16:41,671: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:16:41,671: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:16:41,672: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:16:41,672: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:16:41,672: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:16:41,672: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:16:41,672: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:16:41,672: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:16:41,672: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:16:41,672: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:16:41,672: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:16:41,672: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:16:41,672: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:16:41,672: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:16:41,672: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:16:41,672: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:16:41,672: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:16:41,672: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:16:41,672: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:16:41,672: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:16:41,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:16:41,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:16:41,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:16:41,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:16:41,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:16:41,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:16:41,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:16:41,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:16:41,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:16:41,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:16:41,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:16:41,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:16:41,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:16:41,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:16:41,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:16:41,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:16:41,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:16:41,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:18:15,312: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 06:18:15,312: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 06:18:15,312: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 06:18:15,314: None
[DEBUG]2024-04-10 06:18:15,314: None
[DEBUG]2024-04-10 06:18:15,314: None
[DEBUG]2024-04-10 06:18:15,314: None
[DEBUG]2024-04-10 06:18:15,314: None
[DEBUG]2024-04-10 06:18:15,315: None
[DEBUG]2024-04-10 06:18:15,315: None
[DEBUG]2024-04-10 06:18:15,315: None
[DEBUG]2024-04-10 06:18:15,315: None
[DEBUG]2024-04-10 06:18:15,316: None
[DEBUG]2024-04-10 06:18:15,316: None
[DEBUG]2024-04-10 06:18:15,316: None
[DEBUG]2024-04-10 06:18:15,316: None
[DEBUG]2024-04-10 06:18:15,316: None
[DEBUG]2024-04-10 06:18:15,316: None
[DEBUG]2024-04-10 06:18:15,316: None
[DEBUG]2024-04-10 06:18:15,316: None
[DEBUG]2024-04-10 06:18:15,316: None
[DEBUG]2024-04-10 06:18:15,316: None
[DEBUG]2024-04-10 06:18:15,316: None
[DEBUG]2024-04-10 06:18:15,317: None
[DEBUG]2024-04-10 06:18:15,317: None
[DEBUG]2024-04-10 06:18:15,317: None
[DEBUG]2024-04-10 06:18:15,317: None
[DEBUG]2024-04-10 06:18:15,317: None
[DEBUG]2024-04-10 06:18:15,317: None
[DEBUG]2024-04-10 06:18:15,317: None
[DEBUG]2024-04-10 06:18:15,318: None
[DEBUG]2024-04-10 06:18:15,318: None
[DEBUG]2024-04-10 06:18:15,318: None
[DEBUG]2024-04-10 06:18:15,318: None
[DEBUG]2024-04-10 06:18:15,318: None
[DEBUG]2024-04-10 06:18:15,318: None
[DEBUG]2024-04-10 06:18:15,318: None
[DEBUG]2024-04-10 06:18:15,318: None
[DEBUG]2024-04-10 06:18:15,319: None
[DEBUG]2024-04-10 06:18:15,319: None
[DEBUG]2024-04-10 06:18:15,319: None
[DEBUG]2024-04-10 06:18:15,319: None
[DEBUG]2024-04-10 06:18:15,319: None
[DEBUG]2024-04-10 06:18:15,319: None
[DEBUG]2024-04-10 06:18:15,319: None
[DEBUG]2024-04-10 06:18:15,319: None
[DEBUG]2024-04-10 06:18:15,319: None
[DEBUG]2024-04-10 06:18:15,320: None
[DEBUG]2024-04-10 06:18:15,320: None
[DEBUG]2024-04-10 06:18:15,320: None
[DEBUG]2024-04-10 06:18:15,320: None
[DEBUG]2024-04-10 06:18:15,320: None
[DEBUG]2024-04-10 06:18:15,320: None
[DEBUG]2024-04-10 06:18:15,320: None
[DEBUG]2024-04-10 06:18:15,320: None
[DEBUG]2024-04-10 06:18:15,320: None
[DEBUG]2024-04-10 06:18:15,320: None
[DEBUG]2024-04-10 06:18:15,320: None
[DEBUG]2024-04-10 06:18:15,320: None
[DEBUG]2024-04-10 06:18:15,320: None
[DEBUG]2024-04-10 06:18:15,320: None
[DEBUG]2024-04-10 06:18:15,320: None
[DEBUG]2024-04-10 06:18:15,320: None
[DEBUG]2024-04-10 06:18:15,320: None
[DEBUG]2024-04-10 06:18:15,320: None
[DEBUG]2024-04-10 06:18:15,320: None
[DEBUG]2024-04-10 06:18:15,320: None
[DEBUG]2024-04-10 06:18:15,320: None
[DEBUG]2024-04-10 06:18:15,321: None
[DEBUG]2024-04-10 06:18:15,321: None
[DEBUG]2024-04-10 06:18:15,321: None
[DEBUG]2024-04-10 06:18:15,321: None
[DEBUG]2024-04-10 06:18:15,321: None
[DEBUG]2024-04-10 06:18:15,321: None
[DEBUG]2024-04-10 06:18:15,321: None
[DEBUG]2024-04-10 06:18:15,321: None
[DEBUG]2024-04-10 06:18:15,321: None
[DEBUG]2024-04-10 06:18:15,321: None
[DEBUG]2024-04-10 06:18:15,321: None
[DEBUG]2024-04-10 06:18:15,321: None
[DEBUG]2024-04-10 06:18:15,323: None
[DEBUG]2024-04-10 06:18:15,323: None
[DEBUG]2024-04-10 06:18:15,323: None
[DEBUG]2024-04-10 06:18:15,323: None
[DEBUG]2024-04-10 06:18:15,323: None
[DEBUG]2024-04-10 06:18:15,323: None
[DEBUG]2024-04-10 06:18:15,323: None
[DEBUG]2024-04-10 06:18:15,323: None
[DEBUG]2024-04-10 06:18:15,323: None
[DEBUG]2024-04-10 06:18:15,323: None
[DEBUG]2024-04-10 06:18:15,323: None
[DEBUG]2024-04-10 06:18:15,323: None
[DEBUG]2024-04-10 06:18:15,323: None
[DEBUG]2024-04-10 06:18:15,324: None
[DEBUG]2024-04-10 06:18:15,324: None
[DEBUG]2024-04-10 06:18:15,324: None
[DEBUG]2024-04-10 06:18:15,324: None
[DEBUG]2024-04-10 06:18:15,324: None
[DEBUG]2024-04-10 06:18:15,324: None
[DEBUG]2024-04-10 06:18:15,324: None
[DEBUG]2024-04-10 06:18:15,324: None
[DEBUG]2024-04-10 06:18:15,324: None
[DEBUG]2024-04-10 06:18:15,324: None
[DEBUG]2024-04-10 06:18:15,324: None
[DEBUG]2024-04-10 06:18:15,324: None
[DEBUG]2024-04-10 06:18:15,324: None
[DEBUG]2024-04-10 06:18:15,324: None
[DEBUG]2024-04-10 06:18:15,325: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:18:15,325: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:18:15,325: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:18:15,325: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:18:15,325: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:18:15,325: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:18:15,325: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:18:15,325: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:18:15,325: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:18:15,325: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:18:15,325: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:18:15,325: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:18:15,325: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:18:15,325: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:18:15,325: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:18:15,326: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:18:15,326: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:18:15,326: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:18:15,326: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:18:15,326: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:18:15,326: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:18:15,326: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:18:15,326: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:18:15,326: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:18:15,326: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:18:15,326: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:18:15,326: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:18:15,326: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:18:15,326: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:18:15,326: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:18:15,326: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:18:15,326: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:18:15,326: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:18:15,326: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:18:15,326: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:18:15,326: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:18:15,326: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:18:15,326: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:18:15,326: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:18:15,326: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:18:15,326: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:18:15,326: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:18:15,326: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:18:15,326: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:18:15,326: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:18:15,327: None
[DEBUG]2024-04-10 06:18:15,327: None
[DEBUG]2024-04-10 06:18:15,327: None
[DEBUG]2024-04-10 06:18:15,327: None
[DEBUG]2024-04-10 06:18:15,327: None
[DEBUG]2024-04-10 06:18:15,327: None
[DEBUG]2024-04-10 06:18:15,327: None
[DEBUG]2024-04-10 06:18:15,327: None
[DEBUG]2024-04-10 06:18:15,327: None
[DEBUG]2024-04-10 06:18:15,327: None
[DEBUG]2024-04-10 06:18:15,327: None
[DEBUG]2024-04-10 06:18:15,327: None
[DEBUG]2024-04-10 06:18:15,327: None
[DEBUG]2024-04-10 06:18:15,327: None
[DEBUG]2024-04-10 06:18:15,327: None
[DEBUG]2024-04-10 06:18:15,327: None
[DEBUG]2024-04-10 06:18:15,328: None
[DEBUG]2024-04-10 06:18:15,328: None
[DEBUG]2024-04-10 06:18:15,328: None
[DEBUG]2024-04-10 06:18:15,328: None
[DEBUG]2024-04-10 06:18:15,328: None
[DEBUG]2024-04-10 06:18:15,328: None
[DEBUG]2024-04-10 06:18:15,328: None
[DEBUG]2024-04-10 06:18:15,328: None
[DEBUG]2024-04-10 06:18:15,328: None
[DEBUG]2024-04-10 06:18:15,328: None
[DEBUG]2024-04-10 06:18:15,328: None
[DEBUG]2024-04-10 06:18:15,328: None
[DEBUG]2024-04-10 06:18:15,328: None
[DEBUG]2024-04-10 06:18:15,328: None
[DEBUG]2024-04-10 06:18:15,328: None
[DEBUG]2024-04-10 06:18:15,328: None
[DEBUG]2024-04-10 06:18:15,328: None
[DEBUG]2024-04-10 06:18:15,329: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:18:15,329: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:18:15,329: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:18:15,329: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:18:15,329: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:18:15,329: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:18:15,329: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:18:15,329: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:18:15,329: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:18:15,329: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:18:15,329: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:18:15,329: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:18:15,329: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:18:15,329: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:18:15,329: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:18:15,329: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:18:15,329: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:18:15,329: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:18:15,330: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:18:15,330: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:18:15,330: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:18:15,330: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:18:15,330: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:18:15,330: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:18:15,330: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:18:15,330: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:18:15,330: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:18:15,330: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:18:15,330: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:18:15,330: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:18:15,330: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:18:15,330: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:18:15,330: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:18:15,330: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:18:15,330: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:18:15,330: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:18:15,330: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:18:15,330: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:18:15,330: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:18:15,330: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:18:15,330: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:18:15,330: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:18:15,330: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:18:15,330: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:18:15,330: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:18:15,330: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:18:15,330: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:18:15,330: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:18:15,330: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:18:15,330: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:18:15,330: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:18:15,330: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:18:15,330: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:18:15,330: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:18:56,112: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 06:18:56,113: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 06:18:56,113: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 06:18:56,114: None
[DEBUG]2024-04-10 06:18:56,114: None
[DEBUG]2024-04-10 06:18:56,115: None
[DEBUG]2024-04-10 06:18:56,115: None
[DEBUG]2024-04-10 06:18:56,115: None
[DEBUG]2024-04-10 06:18:56,115: None
[DEBUG]2024-04-10 06:18:56,115: None
[DEBUG]2024-04-10 06:18:56,115: None
[DEBUG]2024-04-10 06:18:56,115: None
[DEBUG]2024-04-10 06:18:56,116: None
[DEBUG]2024-04-10 06:18:56,116: None
[DEBUG]2024-04-10 06:18:56,116: None
[DEBUG]2024-04-10 06:18:56,116: None
[DEBUG]2024-04-10 06:18:56,116: None
[DEBUG]2024-04-10 06:18:56,117: None
[DEBUG]2024-04-10 06:18:56,117: None
[DEBUG]2024-04-10 06:18:56,117: None
[DEBUG]2024-04-10 06:18:56,117: None
[DEBUG]2024-04-10 06:18:56,117: None
[DEBUG]2024-04-10 06:18:56,117: None
[DEBUG]2024-04-10 06:18:56,117: None
[DEBUG]2024-04-10 06:18:56,117: None
[DEBUG]2024-04-10 06:18:56,117: None
[DEBUG]2024-04-10 06:18:56,117: None
[DEBUG]2024-04-10 06:18:56,117: None
[DEBUG]2024-04-10 06:18:56,117: None
[DEBUG]2024-04-10 06:18:56,117: None
[DEBUG]2024-04-10 06:18:56,118: None
[DEBUG]2024-04-10 06:18:56,118: None
[DEBUG]2024-04-10 06:18:56,118: None
[DEBUG]2024-04-10 06:18:56,118: None
[DEBUG]2024-04-10 06:18:56,118: None
[DEBUG]2024-04-10 06:18:56,118: None
[DEBUG]2024-04-10 06:18:56,118: None
[DEBUG]2024-04-10 06:18:56,118: None
[DEBUG]2024-04-10 06:18:56,119: None
[DEBUG]2024-04-10 06:18:56,119: None
[DEBUG]2024-04-10 06:18:56,119: None
[DEBUG]2024-04-10 06:18:56,119: None
[DEBUG]2024-04-10 06:18:56,119: None
[DEBUG]2024-04-10 06:18:56,119: None
[DEBUG]2024-04-10 06:18:56,119: None
[DEBUG]2024-04-10 06:18:56,119: None
[DEBUG]2024-04-10 06:18:56,119: None
[DEBUG]2024-04-10 06:18:56,120: None
[DEBUG]2024-04-10 06:18:56,120: None
[DEBUG]2024-04-10 06:18:56,120: None
[DEBUG]2024-04-10 06:18:56,120: None
[DEBUG]2024-04-10 06:18:56,120: None
[DEBUG]2024-04-10 06:18:56,120: None
[DEBUG]2024-04-10 06:18:56,120: None
[DEBUG]2024-04-10 06:18:56,120: None
[DEBUG]2024-04-10 06:18:56,120: None
[DEBUG]2024-04-10 06:18:56,120: None
[DEBUG]2024-04-10 06:18:56,121: None
[DEBUG]2024-04-10 06:18:56,121: None
[DEBUG]2024-04-10 06:18:56,121: None
[DEBUG]2024-04-10 06:18:56,121: None
[DEBUG]2024-04-10 06:18:56,121: None
[DEBUG]2024-04-10 06:18:56,121: None
[DEBUG]2024-04-10 06:18:56,121: None
[DEBUG]2024-04-10 06:18:56,121: None
[DEBUG]2024-04-10 06:18:56,121: None
[DEBUG]2024-04-10 06:18:56,121: None
[DEBUG]2024-04-10 06:18:56,121: None
[DEBUG]2024-04-10 06:18:56,122: None
[DEBUG]2024-04-10 06:18:56,122: None
[DEBUG]2024-04-10 06:18:56,122: None
[DEBUG]2024-04-10 06:18:56,122: None
[DEBUG]2024-04-10 06:18:56,122: None
[DEBUG]2024-04-10 06:18:56,122: None
[DEBUG]2024-04-10 06:18:56,122: None
[DEBUG]2024-04-10 06:18:56,122: None
[DEBUG]2024-04-10 06:18:56,122: None
[DEBUG]2024-04-10 06:18:56,122: None
[DEBUG]2024-04-10 06:18:56,122: None
[DEBUG]2024-04-10 06:18:56,122: None
[DEBUG]2024-04-10 06:18:56,123: None
[DEBUG]2024-04-10 06:18:56,123: None
[DEBUG]2024-04-10 06:18:56,123: None
[DEBUG]2024-04-10 06:18:56,123: None
[DEBUG]2024-04-10 06:18:56,123: None
[DEBUG]2024-04-10 06:18:56,123: None
[DEBUG]2024-04-10 06:18:56,123: None
[DEBUG]2024-04-10 06:18:56,123: None
[DEBUG]2024-04-10 06:18:56,123: None
[DEBUG]2024-04-10 06:18:56,123: None
[DEBUG]2024-04-10 06:18:56,123: None
[DEBUG]2024-04-10 06:18:56,123: None
[DEBUG]2024-04-10 06:18:56,123: None
[DEBUG]2024-04-10 06:18:56,124: None
[DEBUG]2024-04-10 06:18:56,124: None
[DEBUG]2024-04-10 06:18:56,124: None
[DEBUG]2024-04-10 06:18:56,124: None
[DEBUG]2024-04-10 06:18:56,124: None
[DEBUG]2024-04-10 06:18:56,124: None
[DEBUG]2024-04-10 06:18:56,124: None
[DEBUG]2024-04-10 06:18:56,124: None
[DEBUG]2024-04-10 06:18:56,124: None
[DEBUG]2024-04-10 06:18:56,124: None
[DEBUG]2024-04-10 06:18:56,124: None
[DEBUG]2024-04-10 06:18:56,124: None
[DEBUG]2024-04-10 06:18:56,124: None
[DEBUG]2024-04-10 06:18:56,124: None
[DEBUG]2024-04-10 06:18:56,125: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:18:56,125: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:18:56,125: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:18:56,125: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:18:56,125: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:18:56,125: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:18:56,125: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:18:56,125: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:18:56,125: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:18:56,125: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:18:56,125: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:18:56,125: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:18:56,125: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:18:56,125: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:18:56,125: <re.Match object; span=(2344, 2445), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:18:56,125: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:18:56,125: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:18:56,125: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:18:56,125: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:18:56,125: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:18:56,125: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:18:56,125: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:18:56,125: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:18:56,125: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:18:56,125: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:18:56,125: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:18:56,125: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:18:56,125: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:18:56,125: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:18:56,125: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:18:56,126: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:18:56,126: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:18:56,126: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:18:56,126: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:18:56,126: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:18:56,126: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:18:56,126: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:18:56,126: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:18:56,126: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:18:56,126: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:18:56,126: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:18:56,126: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:18:56,126: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:18:56,126: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:18:56,126: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:18:56,127: None
[DEBUG]2024-04-10 06:18:56,127: None
[DEBUG]2024-04-10 06:18:56,127: None
[DEBUG]2024-04-10 06:18:56,127: None
[DEBUG]2024-04-10 06:18:56,127: None
[DEBUG]2024-04-10 06:18:56,127: None
[DEBUG]2024-04-10 06:18:56,127: None
[DEBUG]2024-04-10 06:18:56,127: None
[DEBUG]2024-04-10 06:18:56,127: None
[DEBUG]2024-04-10 06:18:56,127: None
[DEBUG]2024-04-10 06:18:56,127: None
[DEBUG]2024-04-10 06:18:56,127: None
[DEBUG]2024-04-10 06:18:56,127: None
[DEBUG]2024-04-10 06:18:56,127: None
[DEBUG]2024-04-10 06:18:56,127: None
[DEBUG]2024-04-10 06:18:56,127: None
[DEBUG]2024-04-10 06:18:56,128: None
[DEBUG]2024-04-10 06:18:56,128: None
[DEBUG]2024-04-10 06:18:56,128: None
[DEBUG]2024-04-10 06:18:56,128: None
[DEBUG]2024-04-10 06:18:56,128: None
[DEBUG]2024-04-10 06:18:56,128: None
[DEBUG]2024-04-10 06:18:56,128: None
[DEBUG]2024-04-10 06:18:56,128: None
[DEBUG]2024-04-10 06:18:56,128: None
[DEBUG]2024-04-10 06:18:56,128: None
[DEBUG]2024-04-10 06:18:56,128: None
[DEBUG]2024-04-10 06:18:56,128: None
[DEBUG]2024-04-10 06:18:56,128: None
[DEBUG]2024-04-10 06:18:56,128: None
[DEBUG]2024-04-10 06:18:56,128: None
[DEBUG]2024-04-10 06:18:56,128: None
[DEBUG]2024-04-10 06:18:56,128: None
[DEBUG]2024-04-10 06:18:56,129: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:18:56,129: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:18:56,129: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:18:56,129: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:18:56,129: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:18:56,129: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:18:56,129: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:18:56,129: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:18:56,129: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:18:56,129: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:18:56,129: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:18:56,129: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:18:56,129: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:18:56,129: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:18:56,129: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:18:56,129: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:18:56,129: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:18:56,129: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:18:56,130: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:18:56,130: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:18:56,130: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:18:56,130: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:18:56,130: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:18:56,130: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:18:56,130: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:18:56,130: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:18:56,130: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:18:56,130: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:18:56,130: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:18:56,130: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:18:56,130: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:18:56,130: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:18:56,130: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:18:56,130: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:18:56,130: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:18:56,130: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:18:56,130: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:18:56,130: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:18:56,130: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:18:56,130: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:18:56,130: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:18:56,130: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:18:56,130: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:18:56,130: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:18:56,130: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:18:56,130: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:18:56,130: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:18:56,130: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:18:56,130: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:18:56,130: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:18:56,130: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:18:56,130: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:18:56,130: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:18:56,130: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:25:53,623: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 06:25:53,623: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 06:25:53,623: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 06:25:53,625: None
[DEBUG]2024-04-10 06:25:53,625: None
[DEBUG]2024-04-10 06:25:53,625: None
[DEBUG]2024-04-10 06:25:53,625: None
[DEBUG]2024-04-10 06:25:53,625: None
[DEBUG]2024-04-10 06:25:53,626: None
[DEBUG]2024-04-10 06:25:53,626: None
[DEBUG]2024-04-10 06:25:53,626: None
[DEBUG]2024-04-10 06:25:53,626: None
[DEBUG]2024-04-10 06:25:53,627: None
[DEBUG]2024-04-10 06:25:53,627: None
[DEBUG]2024-04-10 06:25:53,627: None
[DEBUG]2024-04-10 06:25:53,627: None
[DEBUG]2024-04-10 06:25:53,627: None
[DEBUG]2024-04-10 06:25:53,628: None
[DEBUG]2024-04-10 06:25:53,628: None
[DEBUG]2024-04-10 06:25:53,628: None
[DEBUG]2024-04-10 06:25:53,628: None
[DEBUG]2024-04-10 06:25:53,628: None
[DEBUG]2024-04-10 06:25:53,628: None
[DEBUG]2024-04-10 06:25:53,628: None
[DEBUG]2024-04-10 06:25:53,628: None
[DEBUG]2024-04-10 06:25:53,628: None
[DEBUG]2024-04-10 06:25:53,628: None
[DEBUG]2024-04-10 06:25:53,628: None
[DEBUG]2024-04-10 06:25:53,628: None
[DEBUG]2024-04-10 06:25:53,628: None
[DEBUG]2024-04-10 06:25:53,629: None
[DEBUG]2024-04-10 06:25:53,629: None
[DEBUG]2024-04-10 06:25:53,629: None
[DEBUG]2024-04-10 06:25:53,629: None
[DEBUG]2024-04-10 06:25:53,629: None
[DEBUG]2024-04-10 06:25:53,629: None
[DEBUG]2024-04-10 06:25:53,629: None
[DEBUG]2024-04-10 06:25:53,629: None
[DEBUG]2024-04-10 06:25:53,630: None
[DEBUG]2024-04-10 06:25:53,630: None
[DEBUG]2024-04-10 06:25:53,630: None
[DEBUG]2024-04-10 06:25:53,630: None
[DEBUG]2024-04-10 06:25:53,630: None
[DEBUG]2024-04-10 06:25:53,630: None
[DEBUG]2024-04-10 06:25:53,630: None
[DEBUG]2024-04-10 06:25:53,630: None
[DEBUG]2024-04-10 06:25:53,630: None
[DEBUG]2024-04-10 06:25:53,631: None
[DEBUG]2024-04-10 06:25:53,631: None
[DEBUG]2024-04-10 06:25:53,631: None
[DEBUG]2024-04-10 06:25:53,631: None
[DEBUG]2024-04-10 06:25:53,631: None
[DEBUG]2024-04-10 06:25:53,631: None
[DEBUG]2024-04-10 06:25:53,631: None
[DEBUG]2024-04-10 06:25:53,631: None
[DEBUG]2024-04-10 06:25:53,631: None
[DEBUG]2024-04-10 06:25:53,631: None
[DEBUG]2024-04-10 06:25:53,632: None
[DEBUG]2024-04-10 06:25:53,632: None
[DEBUG]2024-04-10 06:25:53,632: None
[DEBUG]2024-04-10 06:25:53,632: None
[DEBUG]2024-04-10 06:25:53,632: None
[DEBUG]2024-04-10 06:25:53,632: None
[DEBUG]2024-04-10 06:25:53,632: None
[DEBUG]2024-04-10 06:25:53,632: None
[DEBUG]2024-04-10 06:25:53,632: None
[DEBUG]2024-04-10 06:25:53,632: None
[DEBUG]2024-04-10 06:25:53,632: None
[DEBUG]2024-04-10 06:25:53,633: None
[DEBUG]2024-04-10 06:25:53,633: None
[DEBUG]2024-04-10 06:25:53,633: None
[DEBUG]2024-04-10 06:25:53,633: None
[DEBUG]2024-04-10 06:25:53,633: None
[DEBUG]2024-04-10 06:25:53,633: None
[DEBUG]2024-04-10 06:25:53,633: None
[DEBUG]2024-04-10 06:25:53,633: None
[DEBUG]2024-04-10 06:25:53,633: None
[DEBUG]2024-04-10 06:25:53,633: None
[DEBUG]2024-04-10 06:25:53,633: None
[DEBUG]2024-04-10 06:25:53,633: None
[DEBUG]2024-04-10 06:25:53,634: None
[DEBUG]2024-04-10 06:25:53,634: None
[DEBUG]2024-04-10 06:25:53,634: None
[DEBUG]2024-04-10 06:25:53,634: None
[DEBUG]2024-04-10 06:25:53,634: None
[DEBUG]2024-04-10 06:25:53,634: None
[DEBUG]2024-04-10 06:25:53,634: None
[DEBUG]2024-04-10 06:25:53,634: None
[DEBUG]2024-04-10 06:25:53,634: None
[DEBUG]2024-04-10 06:25:53,634: None
[DEBUG]2024-04-10 06:25:53,634: None
[DEBUG]2024-04-10 06:25:53,634: None
[DEBUG]2024-04-10 06:25:53,634: None
[DEBUG]2024-04-10 06:25:53,635: None
[DEBUG]2024-04-10 06:25:53,635: None
[DEBUG]2024-04-10 06:25:53,635: None
[DEBUG]2024-04-10 06:25:53,635: None
[DEBUG]2024-04-10 06:25:53,635: None
[DEBUG]2024-04-10 06:25:53,635: None
[DEBUG]2024-04-10 06:25:53,635: None
[DEBUG]2024-04-10 06:25:53,635: None
[DEBUG]2024-04-10 06:25:53,635: None
[DEBUG]2024-04-10 06:25:53,635: None
[DEBUG]2024-04-10 06:25:53,635: None
[DEBUG]2024-04-10 06:25:53,635: None
[DEBUG]2024-04-10 06:25:53,635: None
[DEBUG]2024-04-10 06:25:53,635: None
[DEBUG]2024-04-10 06:25:53,636: <re.Match object; span=(2374, 2475), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:25:53,636: <re.Match object; span=(2374, 2475), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:25:53,636: <re.Match object; span=(2374, 2475), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:25:53,636: <re.Match object; span=(2374, 2475), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:25:53,636: <re.Match object; span=(2374, 2475), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:25:53,636: <re.Match object; span=(2374, 2475), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:25:53,636: <re.Match object; span=(2374, 2475), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:25:53,636: <re.Match object; span=(2374, 2475), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:25:53,636: <re.Match object; span=(2374, 2475), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:25:53,636: <re.Match object; span=(2374, 2475), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:25:53,636: <re.Match object; span=(2374, 2475), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:25:53,636: <re.Match object; span=(2374, 2475), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:25:53,636: <re.Match object; span=(2374, 2475), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:25:53,636: <re.Match object; span=(2374, 2475), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:25:53,636: <re.Match object; span=(2374, 2475), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:25:53,636: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:25:53,636: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:25:53,636: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:25:53,636: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:25:53,636: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:25:53,636: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:25:53,636: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:25:53,636: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:25:53,636: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:25:53,636: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:25:53,636: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:25:53,636: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:25:53,636: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:25:53,636: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:25:53,636: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:25:53,637: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:25:53,637: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:25:53,637: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:25:53,637: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:25:53,637: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:25:53,637: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:25:53,637: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:25:53,637: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:25:53,637: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:25:53,637: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:25:53,637: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:25:53,637: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:25:53,637: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:25:53,637: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:25:53,637: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:25:53,638: None
[DEBUG]2024-04-10 06:25:53,638: None
[DEBUG]2024-04-10 06:25:53,638: None
[DEBUG]2024-04-10 06:25:53,638: None
[DEBUG]2024-04-10 06:25:53,638: None
[DEBUG]2024-04-10 06:25:53,638: None
[DEBUG]2024-04-10 06:25:53,638: None
[DEBUG]2024-04-10 06:25:53,638: None
[DEBUG]2024-04-10 06:25:53,638: None
[DEBUG]2024-04-10 06:25:53,638: None
[DEBUG]2024-04-10 06:25:53,638: None
[DEBUG]2024-04-10 06:25:53,638: None
[DEBUG]2024-04-10 06:25:53,638: None
[DEBUG]2024-04-10 06:25:53,638: None
[DEBUG]2024-04-10 06:25:53,638: None
[DEBUG]2024-04-10 06:25:53,638: None
[DEBUG]2024-04-10 06:25:53,639: None
[DEBUG]2024-04-10 06:25:53,639: None
[DEBUG]2024-04-10 06:25:53,639: None
[DEBUG]2024-04-10 06:25:53,639: None
[DEBUG]2024-04-10 06:25:53,639: None
[DEBUG]2024-04-10 06:25:53,639: None
[DEBUG]2024-04-10 06:25:53,639: None
[DEBUG]2024-04-10 06:25:53,639: None
[DEBUG]2024-04-10 06:25:53,639: None
[DEBUG]2024-04-10 06:25:53,639: None
[DEBUG]2024-04-10 06:25:53,639: None
[DEBUG]2024-04-10 06:25:53,639: None
[DEBUG]2024-04-10 06:25:53,639: None
[DEBUG]2024-04-10 06:25:53,639: None
[DEBUG]2024-04-10 06:25:53,639: None
[DEBUG]2024-04-10 06:25:53,639: None
[DEBUG]2024-04-10 06:25:53,639: None
[DEBUG]2024-04-10 06:25:53,640: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:25:53,640: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:25:53,640: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:25:53,640: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:25:53,640: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:25:53,640: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:25:53,640: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:25:53,640: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:25:53,640: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:25:53,640: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:25:53,640: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:25:53,640: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:25:53,640: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:25:53,640: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:25:53,640: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:25:53,640: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:25:53,640: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:25:53,640: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:25:53,641: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:25:53,641: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:25:53,641: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:25:53,641: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:25:53,641: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:25:53,641: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:25:53,641: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:25:53,641: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:25:53,641: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:25:53,641: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:25:53,641: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:25:53,641: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:25:53,641: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:25:53,641: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:25:53,641: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:25:53,641: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:25:53,641: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:25:53,641: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:25:53,641: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:25:53,641: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:25:53,641: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:25:53,641: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:25:53,641: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:25:53,641: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:25:53,641: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:25:53,641: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:25:53,641: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:25:53,641: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:25:53,641: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:25:53,641: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:25:53,641: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:25:53,641: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:25:53,641: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:25:53,641: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:25:53,641: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:25:53,641: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:25:53,642: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:25:53,642: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:25:53,642: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:25:53,642: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:25:53,642: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:25:53,642: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:25:53,642: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:25:53,642: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:25:53,642: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:25:53,642: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:25:53,642: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:25:53,642: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:25:53,642: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:25:53,642: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:25:53,642: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:25:53,642: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:25:53,642: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:25:53,642: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:25:53,642: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:25:53,643: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:25:53,643: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:25:53,643: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:25:53,643: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:25:53,643: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:25:53,643: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:25:53,643: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:25:53,643: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:25:53,643: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:25:53,643: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:25:53,643: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:25:53,643: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:25:53,643: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:25:53,643: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:25:53,643: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:25:53,643: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:25:53,643: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:25:53,643: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:25:53,643: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:25:53,644: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:25:53,644: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:25:53,644: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:25:53,644: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:25:53,644: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:25:53,644: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:25:53,644: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:25:53,644: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:25:53,644: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:25:53,644: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:25:53,644: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:25:53,644: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:25:53,644: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:25:53,644: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:25:53,644: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:25:53,644: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:25:53,644: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:25:53,644: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:25:53,644: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:26:59,962: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 06:26:59,962: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 06:26:59,962: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 06:26:59,964: None
[DEBUG]2024-04-10 06:26:59,964: None
[DEBUG]2024-04-10 06:26:59,964: None
[DEBUG]2024-04-10 06:26:59,964: None
[DEBUG]2024-04-10 06:26:59,964: None
[DEBUG]2024-04-10 06:26:59,965: None
[DEBUG]2024-04-10 06:26:59,965: None
[DEBUG]2024-04-10 06:26:59,965: None
[DEBUG]2024-04-10 06:26:59,965: None
[DEBUG]2024-04-10 06:26:59,965: None
[DEBUG]2024-04-10 06:26:59,965: None
[DEBUG]2024-04-10 06:26:59,965: None
[DEBUG]2024-04-10 06:26:59,965: None
[DEBUG]2024-04-10 06:26:59,965: None
[DEBUG]2024-04-10 06:26:59,966: None
[DEBUG]2024-04-10 06:26:59,966: None
[DEBUG]2024-04-10 06:26:59,966: None
[DEBUG]2024-04-10 06:26:59,966: None
[DEBUG]2024-04-10 06:26:59,966: None
[DEBUG]2024-04-10 06:26:59,966: None
[DEBUG]2024-04-10 06:26:59,967: None
[DEBUG]2024-04-10 06:26:59,967: None
[DEBUG]2024-04-10 06:26:59,967: None
[DEBUG]2024-04-10 06:26:59,967: None
[DEBUG]2024-04-10 06:26:59,967: None
[DEBUG]2024-04-10 06:26:59,967: None
[DEBUG]2024-04-10 06:26:59,967: None
[DEBUG]2024-04-10 06:26:59,968: None
[DEBUG]2024-04-10 06:26:59,968: None
[DEBUG]2024-04-10 06:26:59,968: None
[DEBUG]2024-04-10 06:26:59,968: None
[DEBUG]2024-04-10 06:26:59,968: None
[DEBUG]2024-04-10 06:26:59,968: None
[DEBUG]2024-04-10 06:26:59,968: None
[DEBUG]2024-04-10 06:26:59,968: None
[DEBUG]2024-04-10 06:26:59,968: None
[DEBUG]2024-04-10 06:26:59,968: None
[DEBUG]2024-04-10 06:26:59,968: None
[DEBUG]2024-04-10 06:26:59,968: None
[DEBUG]2024-04-10 06:26:59,968: None
[DEBUG]2024-04-10 06:26:59,968: None
[DEBUG]2024-04-10 06:26:59,968: None
[DEBUG]2024-04-10 06:26:59,968: None
[DEBUG]2024-04-10 06:26:59,968: None
[DEBUG]2024-04-10 06:26:59,969: None
[DEBUG]2024-04-10 06:26:59,969: None
[DEBUG]2024-04-10 06:26:59,969: None
[DEBUG]2024-04-10 06:26:59,969: None
[DEBUG]2024-04-10 06:26:59,969: None
[DEBUG]2024-04-10 06:26:59,969: None
[DEBUG]2024-04-10 06:26:59,969: None
[DEBUG]2024-04-10 06:26:59,969: None
[DEBUG]2024-04-10 06:26:59,969: None
[DEBUG]2024-04-10 06:26:59,969: None
[DEBUG]2024-04-10 06:26:59,970: None
[DEBUG]2024-04-10 06:26:59,970: None
[DEBUG]2024-04-10 06:26:59,970: None
[DEBUG]2024-04-10 06:26:59,970: None
[DEBUG]2024-04-10 06:26:59,970: None
[DEBUG]2024-04-10 06:26:59,970: None
[DEBUG]2024-04-10 06:26:59,970: None
[DEBUG]2024-04-10 06:26:59,970: None
[DEBUG]2024-04-10 06:26:59,970: None
[DEBUG]2024-04-10 06:26:59,970: None
[DEBUG]2024-04-10 06:26:59,970: None
[DEBUG]2024-04-10 06:26:59,971: None
[DEBUG]2024-04-10 06:26:59,971: None
[DEBUG]2024-04-10 06:26:59,971: None
[DEBUG]2024-04-10 06:26:59,971: None
[DEBUG]2024-04-10 06:26:59,971: None
[DEBUG]2024-04-10 06:26:59,971: None
[DEBUG]2024-04-10 06:26:59,971: None
[DEBUG]2024-04-10 06:26:59,971: None
[DEBUG]2024-04-10 06:26:59,971: None
[DEBUG]2024-04-10 06:26:59,971: None
[DEBUG]2024-04-10 06:26:59,971: None
[DEBUG]2024-04-10 06:26:59,971: None
[DEBUG]2024-04-10 06:26:59,972: None
[DEBUG]2024-04-10 06:26:59,972: None
[DEBUG]2024-04-10 06:26:59,972: None
[DEBUG]2024-04-10 06:26:59,972: None
[DEBUG]2024-04-10 06:26:59,972: None
[DEBUG]2024-04-10 06:26:59,972: None
[DEBUG]2024-04-10 06:26:59,972: None
[DEBUG]2024-04-10 06:26:59,972: None
[DEBUG]2024-04-10 06:26:59,972: None
[DEBUG]2024-04-10 06:26:59,972: None
[DEBUG]2024-04-10 06:26:59,972: None
[DEBUG]2024-04-10 06:26:59,972: None
[DEBUG]2024-04-10 06:26:59,972: None
[DEBUG]2024-04-10 06:26:59,973: None
[DEBUG]2024-04-10 06:26:59,973: None
[DEBUG]2024-04-10 06:26:59,973: None
[DEBUG]2024-04-10 06:26:59,973: None
[DEBUG]2024-04-10 06:26:59,973: None
[DEBUG]2024-04-10 06:26:59,973: None
[DEBUG]2024-04-10 06:26:59,973: None
[DEBUG]2024-04-10 06:26:59,973: None
[DEBUG]2024-04-10 06:26:59,973: None
[DEBUG]2024-04-10 06:26:59,973: None
[DEBUG]2024-04-10 06:26:59,973: None
[DEBUG]2024-04-10 06:26:59,973: None
[DEBUG]2024-04-10 06:26:59,973: None
[DEBUG]2024-04-10 06:26:59,973: None
[DEBUG]2024-04-10 06:26:59,974: <re.Match object; span=(2374, 2475), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:26:59,974: <re.Match object; span=(2374, 2475), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:26:59,974: <re.Match object; span=(2374, 2475), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:26:59,974: <re.Match object; span=(2374, 2475), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:26:59,974: <re.Match object; span=(2374, 2475), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:26:59,974: <re.Match object; span=(2374, 2475), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:26:59,974: <re.Match object; span=(2374, 2475), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:26:59,974: <re.Match object; span=(2374, 2475), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:26:59,974: <re.Match object; span=(2374, 2475), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:26:59,974: <re.Match object; span=(2374, 2475), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:26:59,974: <re.Match object; span=(2374, 2475), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:26:59,974: <re.Match object; span=(2374, 2475), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:26:59,974: <re.Match object; span=(2374, 2475), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:26:59,974: <re.Match object; span=(2374, 2475), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:26:59,974: <re.Match object; span=(2374, 2475), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:26:59,974: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:26:59,974: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:26:59,974: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:26:59,974: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:26:59,974: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:26:59,974: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:26:59,974: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:26:59,974: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:26:59,974: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:26:59,974: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:26:59,974: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:26:59,974: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:26:59,974: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:26:59,974: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:26:59,974: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:26:59,975: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:26:59,975: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:26:59,975: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:26:59,975: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:26:59,975: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:26:59,975: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:26:59,975: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:26:59,975: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:26:59,975: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:26:59,975: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:26:59,975: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:26:59,975: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:26:59,975: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:26:59,975: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:26:59,975: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:26:59,976: None
[DEBUG]2024-04-10 06:26:59,976: None
[DEBUG]2024-04-10 06:26:59,976: None
[DEBUG]2024-04-10 06:26:59,976: None
[DEBUG]2024-04-10 06:26:59,976: None
[DEBUG]2024-04-10 06:26:59,976: None
[DEBUG]2024-04-10 06:26:59,976: None
[DEBUG]2024-04-10 06:26:59,976: None
[DEBUG]2024-04-10 06:26:59,976: None
[DEBUG]2024-04-10 06:26:59,976: None
[DEBUG]2024-04-10 06:26:59,976: None
[DEBUG]2024-04-10 06:26:59,976: None
[DEBUG]2024-04-10 06:26:59,976: None
[DEBUG]2024-04-10 06:26:59,976: None
[DEBUG]2024-04-10 06:26:59,976: None
[DEBUG]2024-04-10 06:26:59,976: None
[DEBUG]2024-04-10 06:26:59,977: None
[DEBUG]2024-04-10 06:26:59,977: None
[DEBUG]2024-04-10 06:26:59,977: None
[DEBUG]2024-04-10 06:26:59,977: None
[DEBUG]2024-04-10 06:26:59,977: None
[DEBUG]2024-04-10 06:26:59,977: None
[DEBUG]2024-04-10 06:26:59,977: None
[DEBUG]2024-04-10 06:26:59,977: None
[DEBUG]2024-04-10 06:26:59,977: None
[DEBUG]2024-04-10 06:26:59,977: None
[DEBUG]2024-04-10 06:26:59,977: None
[DEBUG]2024-04-10 06:26:59,977: None
[DEBUG]2024-04-10 06:26:59,977: None
[DEBUG]2024-04-10 06:26:59,977: None
[DEBUG]2024-04-10 06:26:59,977: None
[DEBUG]2024-04-10 06:26:59,977: None
[DEBUG]2024-04-10 06:26:59,977: None
[DEBUG]2024-04-10 06:26:59,978: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:26:59,978: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:26:59,978: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:26:59,978: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:26:59,978: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:26:59,978: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:26:59,978: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:26:59,978: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:26:59,978: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:26:59,978: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:26:59,978: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:26:59,978: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:26:59,978: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:26:59,978: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:26:59,978: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:26:59,978: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:26:59,978: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:26:59,978: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:26:59,978: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:26:59,978: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:26:59,978: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:26:59,978: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:26:59,978: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:26:59,978: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:26:59,978: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:26:59,978: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:26:59,978: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:26:59,978: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:26:59,978: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:26:59,978: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:26:59,978: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:26:59,978: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:26:59,978: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:26:59,978: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:26:59,978: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:26:59,978: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:26:59,979: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:26:59,979: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:26:59,979: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:26:59,979: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:26:59,979: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:26:59,979: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:26:59,979: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:26:59,979: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:26:59,979: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:26:59,979: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:26:59,979: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:26:59,979: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:26:59,979: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:26:59,979: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:26:59,979: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:26:59,979: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:26:59,979: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:26:59,979: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:26:59,980: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:26:59,980: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:26:59,980: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:26:59,980: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:26:59,980: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:26:59,980: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:26:59,980: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:26:59,980: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:26:59,980: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:26:59,980: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:26:59,980: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:26:59,980: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:26:59,980: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:26:59,980: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:26:59,980: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:26:59,980: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:26:59,980: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:26:59,980: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:26:59,980: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:26:59,980: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:26:59,980: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:26:59,980: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:26:59,980: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:26:59,980: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:26:59,980: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:26:59,980: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:26:59,980: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:26:59,980: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:26:59,980: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:26:59,980: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:26:59,980: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:26:59,980: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:26:59,980: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:26:59,980: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:26:59,980: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:26:59,980: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:26:59,980: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:26:59,980: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:26:59,981: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:26:59,981: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:26:59,981: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:26:59,981: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:26:59,981: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:26:59,981: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:26:59,981: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:26:59,981: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:26:59,981: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:26:59,981: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:26:59,981: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:26:59,981: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:26:59,981: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:26:59,981: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:26:59,981: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:26:59,981: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:26:59,981: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:26:59,981: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:26:59,981: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:29:28,166: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 06:29:28,166: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 06:29:28,166: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 06:29:28,168: None
[DEBUG]2024-04-10 06:29:28,168: None
[DEBUG]2024-04-10 06:29:28,168: None
[DEBUG]2024-04-10 06:29:28,168: None
[DEBUG]2024-04-10 06:29:28,168: None
[DEBUG]2024-04-10 06:29:28,169: None
[DEBUG]2024-04-10 06:29:28,169: None
[DEBUG]2024-04-10 06:29:28,169: None
[DEBUG]2024-04-10 06:29:28,169: None
[DEBUG]2024-04-10 06:29:28,170: None
[DEBUG]2024-04-10 06:29:28,170: None
[DEBUG]2024-04-10 06:29:28,170: None
[DEBUG]2024-04-10 06:29:28,170: None
[DEBUG]2024-04-10 06:29:28,170: None
[DEBUG]2024-04-10 06:29:28,171: None
[DEBUG]2024-04-10 06:29:28,171: None
[DEBUG]2024-04-10 06:29:28,171: None
[DEBUG]2024-04-10 06:29:28,171: None
[DEBUG]2024-04-10 06:29:28,171: None
[DEBUG]2024-04-10 06:29:28,171: None
[DEBUG]2024-04-10 06:29:28,171: None
[DEBUG]2024-04-10 06:29:28,171: None
[DEBUG]2024-04-10 06:29:28,171: None
[DEBUG]2024-04-10 06:29:28,171: None
[DEBUG]2024-04-10 06:29:28,171: None
[DEBUG]2024-04-10 06:29:28,171: None
[DEBUG]2024-04-10 06:29:28,171: None
[DEBUG]2024-04-10 06:29:28,172: None
[DEBUG]2024-04-10 06:29:28,172: None
[DEBUG]2024-04-10 06:29:28,172: None
[DEBUG]2024-04-10 06:29:28,172: None
[DEBUG]2024-04-10 06:29:28,172: None
[DEBUG]2024-04-10 06:29:28,172: None
[DEBUG]2024-04-10 06:29:28,172: None
[DEBUG]2024-04-10 06:29:28,172: None
[DEBUG]2024-04-10 06:29:28,173: None
[DEBUG]2024-04-10 06:29:28,173: None
[DEBUG]2024-04-10 06:29:28,173: None
[DEBUG]2024-04-10 06:29:28,173: None
[DEBUG]2024-04-10 06:29:28,173: None
[DEBUG]2024-04-10 06:29:28,173: None
[DEBUG]2024-04-10 06:29:28,173: None
[DEBUG]2024-04-10 06:29:28,173: None
[DEBUG]2024-04-10 06:29:28,173: None
[DEBUG]2024-04-10 06:29:28,174: None
[DEBUG]2024-04-10 06:29:28,174: None
[DEBUG]2024-04-10 06:29:28,174: None
[DEBUG]2024-04-10 06:29:28,174: None
[DEBUG]2024-04-10 06:29:28,174: None
[DEBUG]2024-04-10 06:29:28,174: None
[DEBUG]2024-04-10 06:29:28,174: None
[DEBUG]2024-04-10 06:29:28,174: None
[DEBUG]2024-04-10 06:29:28,174: None
[DEBUG]2024-04-10 06:29:28,174: None
[DEBUG]2024-04-10 06:29:28,175: None
[DEBUG]2024-04-10 06:29:28,175: None
[DEBUG]2024-04-10 06:29:28,175: None
[DEBUG]2024-04-10 06:29:28,175: None
[DEBUG]2024-04-10 06:29:28,175: None
[DEBUG]2024-04-10 06:29:28,175: None
[DEBUG]2024-04-10 06:29:28,175: None
[DEBUG]2024-04-10 06:29:28,175: None
[DEBUG]2024-04-10 06:29:28,175: None
[DEBUG]2024-04-10 06:29:28,175: None
[DEBUG]2024-04-10 06:29:28,175: None
[DEBUG]2024-04-10 06:29:28,175: None
[DEBUG]2024-04-10 06:29:28,175: None
[DEBUG]2024-04-10 06:29:28,175: None
[DEBUG]2024-04-10 06:29:28,175: None
[DEBUG]2024-04-10 06:29:28,175: None
[DEBUG]2024-04-10 06:29:28,175: None
[DEBUG]2024-04-10 06:29:28,175: None
[DEBUG]2024-04-10 06:29:28,175: None
[DEBUG]2024-04-10 06:29:28,175: None
[DEBUG]2024-04-10 06:29:28,175: None
[DEBUG]2024-04-10 06:29:28,175: None
[DEBUG]2024-04-10 06:29:28,175: None
[DEBUG]2024-04-10 06:29:28,176: None
[DEBUG]2024-04-10 06:29:28,176: None
[DEBUG]2024-04-10 06:29:28,176: None
[DEBUG]2024-04-10 06:29:28,176: None
[DEBUG]2024-04-10 06:29:28,176: None
[DEBUG]2024-04-10 06:29:28,176: None
[DEBUG]2024-04-10 06:29:28,176: None
[DEBUG]2024-04-10 06:29:28,176: None
[DEBUG]2024-04-10 06:29:28,176: None
[DEBUG]2024-04-10 06:29:28,176: None
[DEBUG]2024-04-10 06:29:28,176: None
[DEBUG]2024-04-10 06:29:28,176: None
[DEBUG]2024-04-10 06:29:28,176: None
[DEBUG]2024-04-10 06:29:28,177: None
[DEBUG]2024-04-10 06:29:28,177: None
[DEBUG]2024-04-10 06:29:28,177: None
[DEBUG]2024-04-10 06:29:28,177: None
[DEBUG]2024-04-10 06:29:28,177: None
[DEBUG]2024-04-10 06:29:28,177: None
[DEBUG]2024-04-10 06:29:28,177: None
[DEBUG]2024-04-10 06:29:28,177: None
[DEBUG]2024-04-10 06:29:28,177: None
[DEBUG]2024-04-10 06:29:28,177: None
[DEBUG]2024-04-10 06:29:28,177: None
[DEBUG]2024-04-10 06:29:28,177: None
[DEBUG]2024-04-10 06:29:28,177: None
[DEBUG]2024-04-10 06:29:28,177: None
[DEBUG]2024-04-10 06:29:28,178: <re.Match object; span=(2375, 2476), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:29:28,178: <re.Match object; span=(2375, 2476), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:29:28,178: <re.Match object; span=(2375, 2476), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:29:28,178: <re.Match object; span=(2375, 2476), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:29:28,178: <re.Match object; span=(2375, 2476), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:29:28,178: <re.Match object; span=(2375, 2476), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:29:28,178: <re.Match object; span=(2375, 2476), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:29:28,178: <re.Match object; span=(2375, 2476), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:29:28,178: <re.Match object; span=(2375, 2476), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:29:28,178: <re.Match object; span=(2375, 2476), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:29:28,178: <re.Match object; span=(2375, 2476), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:29:28,178: <re.Match object; span=(2375, 2476), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:29:28,178: <re.Match object; span=(2375, 2476), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:29:28,178: <re.Match object; span=(2375, 2476), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:29:28,178: <re.Match object; span=(2375, 2476), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:29:28,179: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:29:28,179: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:29:28,179: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:29:28,179: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:29:28,179: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:29:28,179: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:29:28,179: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:29:28,179: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:29:28,179: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:29:28,179: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:29:28,179: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:29:28,179: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:29:28,179: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:29:28,179: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:29:28,179: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:29:28,179: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:29:28,179: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:29:28,179: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:29:28,179: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:29:28,179: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:29:28,179: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:29:28,179: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:29:28,179: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:29:28,179: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:29:28,179: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:29:28,179: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:29:28,179: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:29:28,179: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:29:28,179: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:29:28,179: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:29:28,181: None
[DEBUG]2024-04-10 06:29:28,181: None
[DEBUG]2024-04-10 06:29:28,181: None
[DEBUG]2024-04-10 06:29:28,181: None
[DEBUG]2024-04-10 06:29:28,181: None
[DEBUG]2024-04-10 06:29:28,181: None
[DEBUG]2024-04-10 06:29:28,181: None
[DEBUG]2024-04-10 06:29:28,181: None
[DEBUG]2024-04-10 06:29:28,181: None
[DEBUG]2024-04-10 06:29:28,181: None
[DEBUG]2024-04-10 06:29:28,181: None
[DEBUG]2024-04-10 06:29:28,181: None
[DEBUG]2024-04-10 06:29:28,181: None
[DEBUG]2024-04-10 06:29:28,181: None
[DEBUG]2024-04-10 06:29:28,181: None
[DEBUG]2024-04-10 06:29:28,181: None
[DEBUG]2024-04-10 06:29:28,182: None
[DEBUG]2024-04-10 06:29:28,182: None
[DEBUG]2024-04-10 06:29:28,182: None
[DEBUG]2024-04-10 06:29:28,182: None
[DEBUG]2024-04-10 06:29:28,182: None
[DEBUG]2024-04-10 06:29:28,182: None
[DEBUG]2024-04-10 06:29:28,182: None
[DEBUG]2024-04-10 06:29:28,182: None
[DEBUG]2024-04-10 06:29:28,182: None
[DEBUG]2024-04-10 06:29:28,182: None
[DEBUG]2024-04-10 06:29:28,182: None
[DEBUG]2024-04-10 06:29:28,182: None
[DEBUG]2024-04-10 06:29:28,182: None
[DEBUG]2024-04-10 06:29:28,182: None
[DEBUG]2024-04-10 06:29:28,182: None
[DEBUG]2024-04-10 06:29:28,182: None
[DEBUG]2024-04-10 06:29:28,182: None
[DEBUG]2024-04-10 06:29:28,183: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:29:28,183: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:29:28,183: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:29:28,183: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:29:28,183: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:29:28,183: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:29:28,183: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:29:28,183: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:29:28,183: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:29:28,183: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:29:28,183: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:29:28,183: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:29:28,183: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:29:28,183: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:29:28,183: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:29:28,183: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:29:28,183: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:29:28,183: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:29:28,183: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:29:28,183: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:29:28,183: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:29:28,183: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:29:28,183: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:29:28,183: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:29:28,183: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:29:28,183: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:29:28,183: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:29:28,183: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:29:28,183: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:29:28,183: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:29:28,183: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:29:28,183: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:29:28,183: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:29:28,183: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:29:28,183: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:29:28,183: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:29:28,184: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:29:28,184: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:29:28,184: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:29:28,184: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:29:28,184: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:29:28,184: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:29:28,184: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:29:28,184: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:29:28,184: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:29:28,184: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:29:28,184: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:29:28,184: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:29:28,184: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:29:28,184: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:29:28,184: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:29:28,184: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:29:28,184: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:29:28,184: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:29:28,185: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:29:28,185: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:29:28,185: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:29:28,185: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:29:28,185: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:29:28,185: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:29:28,185: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:29:28,185: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:29:28,185: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:29:28,185: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:29:28,185: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:29:28,185: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:29:28,185: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:29:28,185: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:29:28,185: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:29:28,185: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:29:28,185: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:29:28,185: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:29:28,185: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:29:28,185: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:29:28,185: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:29:28,185: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:29:28,185: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:29:28,185: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:29:28,185: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:29:28,185: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:29:28,185: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:29:28,185: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:29:28,185: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:29:28,185: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:29:28,185: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:29:28,185: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:29:28,185: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:29:28,185: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:29:28,185: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:29:28,185: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:29:28,185: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:29:28,185: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:29:28,186: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:29:28,186: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:29:28,186: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:29:28,186: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:29:28,186: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:29:28,186: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:29:28,186: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:29:28,186: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:29:28,186: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:29:28,186: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:29:28,186: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:29:28,186: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:29:28,186: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:29:28,186: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:29:28,186: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:29:28,186: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:29:28,186: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:29:28,186: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:29:28,186: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:32:01,160: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 06:32:01,160: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 06:32:01,160: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 06:32:01,162: None
[DEBUG]2024-04-10 06:32:01,162: None
[DEBUG]2024-04-10 06:32:01,162: None
[DEBUG]2024-04-10 06:32:01,162: None
[DEBUG]2024-04-10 06:32:01,162: None
[DEBUG]2024-04-10 06:32:01,163: None
[DEBUG]2024-04-10 06:32:01,163: None
[DEBUG]2024-04-10 06:32:01,163: None
[DEBUG]2024-04-10 06:32:01,163: None
[DEBUG]2024-04-10 06:32:01,164: None
[DEBUG]2024-04-10 06:32:01,164: None
[DEBUG]2024-04-10 06:32:01,164: None
[DEBUG]2024-04-10 06:32:01,164: None
[DEBUG]2024-04-10 06:32:01,164: None
[DEBUG]2024-04-10 06:32:01,164: None
[DEBUG]2024-04-10 06:32:01,164: None
[DEBUG]2024-04-10 06:32:01,164: None
[DEBUG]2024-04-10 06:32:01,164: None
[DEBUG]2024-04-10 06:32:01,164: None
[DEBUG]2024-04-10 06:32:01,164: None
[DEBUG]2024-04-10 06:32:01,165: None
[DEBUG]2024-04-10 06:32:01,165: None
[DEBUG]2024-04-10 06:32:01,165: None
[DEBUG]2024-04-10 06:32:01,165: None
[DEBUG]2024-04-10 06:32:01,165: None
[DEBUG]2024-04-10 06:32:01,165: None
[DEBUG]2024-04-10 06:32:01,165: None
[DEBUG]2024-04-10 06:32:01,166: None
[DEBUG]2024-04-10 06:32:01,166: None
[DEBUG]2024-04-10 06:32:01,166: None
[DEBUG]2024-04-10 06:32:01,166: None
[DEBUG]2024-04-10 06:32:01,166: None
[DEBUG]2024-04-10 06:32:01,166: None
[DEBUG]2024-04-10 06:32:01,166: None
[DEBUG]2024-04-10 06:32:01,166: None
[DEBUG]2024-04-10 06:32:01,167: None
[DEBUG]2024-04-10 06:32:01,167: None
[DEBUG]2024-04-10 06:32:01,167: None
[DEBUG]2024-04-10 06:32:01,167: None
[DEBUG]2024-04-10 06:32:01,167: None
[DEBUG]2024-04-10 06:32:01,167: None
[DEBUG]2024-04-10 06:32:01,167: None
[DEBUG]2024-04-10 06:32:01,167: None
[DEBUG]2024-04-10 06:32:01,167: None
[DEBUG]2024-04-10 06:32:01,168: None
[DEBUG]2024-04-10 06:32:01,168: None
[DEBUG]2024-04-10 06:32:01,168: None
[DEBUG]2024-04-10 06:32:01,168: None
[DEBUG]2024-04-10 06:32:01,168: None
[DEBUG]2024-04-10 06:32:01,168: None
[DEBUG]2024-04-10 06:32:01,168: None
[DEBUG]2024-04-10 06:32:01,168: None
[DEBUG]2024-04-10 06:32:01,168: None
[DEBUG]2024-04-10 06:32:01,168: None
[DEBUG]2024-04-10 06:32:01,169: None
[DEBUG]2024-04-10 06:32:01,169: None
[DEBUG]2024-04-10 06:32:01,169: None
[DEBUG]2024-04-10 06:32:01,169: None
[DEBUG]2024-04-10 06:32:01,169: None
[DEBUG]2024-04-10 06:32:01,169: None
[DEBUG]2024-04-10 06:32:01,169: None
[DEBUG]2024-04-10 06:32:01,169: None
[DEBUG]2024-04-10 06:32:01,169: None
[DEBUG]2024-04-10 06:32:01,169: None
[DEBUG]2024-04-10 06:32:01,169: None
[DEBUG]2024-04-10 06:32:01,170: None
[DEBUG]2024-04-10 06:32:01,170: None
[DEBUG]2024-04-10 06:32:01,170: None
[DEBUG]2024-04-10 06:32:01,170: None
[DEBUG]2024-04-10 06:32:01,170: None
[DEBUG]2024-04-10 06:32:01,170: None
[DEBUG]2024-04-10 06:32:01,170: None
[DEBUG]2024-04-10 06:32:01,170: None
[DEBUG]2024-04-10 06:32:01,170: None
[DEBUG]2024-04-10 06:32:01,170: None
[DEBUG]2024-04-10 06:32:01,170: None
[DEBUG]2024-04-10 06:32:01,170: None
[DEBUG]2024-04-10 06:32:01,170: None
[DEBUG]2024-04-10 06:32:01,170: None
[DEBUG]2024-04-10 06:32:01,170: None
[DEBUG]2024-04-10 06:32:01,170: None
[DEBUG]2024-04-10 06:32:01,170: None
[DEBUG]2024-04-10 06:32:01,170: None
[DEBUG]2024-04-10 06:32:01,170: None
[DEBUG]2024-04-10 06:32:01,170: None
[DEBUG]2024-04-10 06:32:01,170: None
[DEBUG]2024-04-10 06:32:01,170: None
[DEBUG]2024-04-10 06:32:01,170: None
[DEBUG]2024-04-10 06:32:01,170: None
[DEBUG]2024-04-10 06:32:01,170: None
[DEBUG]2024-04-10 06:32:01,171: None
[DEBUG]2024-04-10 06:32:01,171: None
[DEBUG]2024-04-10 06:32:01,171: None
[DEBUG]2024-04-10 06:32:01,171: None
[DEBUG]2024-04-10 06:32:01,171: None
[DEBUG]2024-04-10 06:32:01,171: None
[DEBUG]2024-04-10 06:32:01,171: None
[DEBUG]2024-04-10 06:32:01,171: None
[DEBUG]2024-04-10 06:32:01,171: None
[DEBUG]2024-04-10 06:32:01,171: None
[DEBUG]2024-04-10 06:32:01,171: None
[DEBUG]2024-04-10 06:32:01,171: None
[DEBUG]2024-04-10 06:32:01,171: None
[DEBUG]2024-04-10 06:32:01,171: None
[DEBUG]2024-04-10 06:32:01,172: <re.Match object; span=(2375, 2476), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:32:01,172: <re.Match object; span=(2375, 2476), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:32:01,172: <re.Match object; span=(2375, 2476), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:32:01,172: <re.Match object; span=(2375, 2476), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:32:01,172: <re.Match object; span=(2375, 2476), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:32:01,172: <re.Match object; span=(2375, 2476), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:32:01,172: <re.Match object; span=(2375, 2476), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:32:01,172: <re.Match object; span=(2375, 2476), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:32:01,172: <re.Match object; span=(2375, 2476), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:32:01,172: <re.Match object; span=(2375, 2476), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:32:01,172: <re.Match object; span=(2375, 2476), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:32:01,172: <re.Match object; span=(2375, 2476), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:32:01,172: <re.Match object; span=(2375, 2476), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:32:01,172: <re.Match object; span=(2375, 2476), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:32:01,172: <re.Match object; span=(2375, 2476), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:32:01,173: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:32:01,173: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:32:01,173: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:32:01,173: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:32:01,173: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:32:01,173: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:32:01,173: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:32:01,173: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:32:01,173: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:32:01,173: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:32:01,173: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:32:01,173: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:32:01,173: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:32:01,173: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:32:01,173: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:32:01,173: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:32:01,173: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:32:01,173: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:32:01,173: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:32:01,173: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:32:01,173: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:32:01,173: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:32:01,173: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:32:01,173: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:32:01,173: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:32:01,173: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:32:01,173: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:32:01,173: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:32:01,173: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:32:01,173: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:32:01,175: None
[DEBUG]2024-04-10 06:32:01,175: None
[DEBUG]2024-04-10 06:32:01,175: None
[DEBUG]2024-04-10 06:32:01,175: None
[DEBUG]2024-04-10 06:32:01,175: None
[DEBUG]2024-04-10 06:32:01,175: None
[DEBUG]2024-04-10 06:32:01,175: None
[DEBUG]2024-04-10 06:32:01,175: None
[DEBUG]2024-04-10 06:32:01,175: None
[DEBUG]2024-04-10 06:32:01,175: None
[DEBUG]2024-04-10 06:32:01,175: None
[DEBUG]2024-04-10 06:32:01,175: None
[DEBUG]2024-04-10 06:32:01,175: None
[DEBUG]2024-04-10 06:32:01,175: None
[DEBUG]2024-04-10 06:32:01,175: None
[DEBUG]2024-04-10 06:32:01,175: None
[DEBUG]2024-04-10 06:32:01,175: None
[DEBUG]2024-04-10 06:32:01,175: None
[DEBUG]2024-04-10 06:32:01,175: None
[DEBUG]2024-04-10 06:32:01,175: None
[DEBUG]2024-04-10 06:32:01,175: None
[DEBUG]2024-04-10 06:32:01,175: None
[DEBUG]2024-04-10 06:32:01,175: None
[DEBUG]2024-04-10 06:32:01,175: None
[DEBUG]2024-04-10 06:32:01,175: None
[DEBUG]2024-04-10 06:32:01,175: None
[DEBUG]2024-04-10 06:32:01,175: None
[DEBUG]2024-04-10 06:32:01,175: None
[DEBUG]2024-04-10 06:32:01,175: None
[DEBUG]2024-04-10 06:32:01,175: None
[DEBUG]2024-04-10 06:32:01,175: None
[DEBUG]2024-04-10 06:32:01,175: None
[DEBUG]2024-04-10 06:32:01,175: None
[DEBUG]2024-04-10 06:32:01,176: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:32:01,176: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:32:01,176: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:32:01,176: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:32:01,176: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:32:01,176: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:32:01,176: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:32:01,176: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:32:01,176: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:32:01,176: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:32:01,176: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:32:01,176: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:32:01,176: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:32:01,176: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:32:01,176: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:32:01,176: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:32:01,176: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:32:01,176: <re.Match object; span=(1572, 1649), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:32:01,177: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:32:01,177: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:32:01,177: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:32:01,177: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:32:01,177: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:32:01,177: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:32:01,177: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:32:01,177: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:32:01,177: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:32:01,177: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:32:01,177: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:32:01,177: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:32:01,177: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:32:01,177: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:32:01,177: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:32:01,177: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:32:01,177: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:32:01,177: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:32:01,178: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:32:01,178: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:32:01,178: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:32:01,178: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:32:01,178: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:32:01,178: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:32:01,178: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:32:01,178: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:32:01,178: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:32:01,178: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:32:01,178: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:32:01,178: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:32:01,178: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:32:01,178: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:32:01,178: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:32:01,178: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:32:01,178: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:32:01,178: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:32:01,179: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:32:01,179: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:32:01,179: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:32:01,179: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:32:01,179: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:32:01,179: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:32:01,179: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:32:01,179: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:32:01,179: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:32:01,179: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:32:01,179: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:32:01,179: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:32:01,179: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:32:01,179: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:32:01,179: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:32:01,179: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:32:01,179: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:32:01,179: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:32:01,179: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:32:01,179: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:32:01,179: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:32:01,179: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:32:01,179: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:32:01,179: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:32:01,179: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:32:01,179: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:32:01,179: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:32:01,179: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:32:01,179: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:32:01,179: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:32:01,179: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:32:01,179: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:32:01,179: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:32:01,179: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:32:01,179: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:32:01,179: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:32:01,179: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:32:01,179: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:32:01,180: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:32:01,180: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:32:01,180: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:32:01,180: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:32:01,180: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:32:01,180: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:32:01,180: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:32:01,180: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:32:01,180: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:32:01,180: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:32:01,180: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:32:01,180: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:32:01,180: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:32:01,180: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:32:01,180: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:32:01,180: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:32:01,180: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:32:01,180: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:32:01,180: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:50:39,896: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 06:50:39,897: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 06:50:39,897: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 06:50:39,898: None
[DEBUG]2024-04-10 06:50:39,898: None
[DEBUG]2024-04-10 06:50:39,899: None
[DEBUG]2024-04-10 06:50:39,899: None
[DEBUG]2024-04-10 06:50:39,899: None
[DEBUG]2024-04-10 06:50:39,900: None
[DEBUG]2024-04-10 06:50:39,900: None
[DEBUG]2024-04-10 06:50:39,900: None
[DEBUG]2024-04-10 06:50:39,900: None
[DEBUG]2024-04-10 06:50:39,900: None
[DEBUG]2024-04-10 06:50:39,900: None
[DEBUG]2024-04-10 06:50:39,900: None
[DEBUG]2024-04-10 06:50:39,900: None
[DEBUG]2024-04-10 06:50:39,900: None
[DEBUG]2024-04-10 06:50:39,901: None
[DEBUG]2024-04-10 06:50:39,901: None
[DEBUG]2024-04-10 06:50:39,901: None
[DEBUG]2024-04-10 06:50:39,901: None
[DEBUG]2024-04-10 06:50:39,901: None
[DEBUG]2024-04-10 06:50:39,901: None
[DEBUG]2024-04-10 06:50:39,902: None
[DEBUG]2024-04-10 06:50:39,902: None
[DEBUG]2024-04-10 06:50:39,902: None
[DEBUG]2024-04-10 06:50:39,902: None
[DEBUG]2024-04-10 06:50:39,902: None
[DEBUG]2024-04-10 06:50:39,902: None
[DEBUG]2024-04-10 06:50:39,902: None
[DEBUG]2024-04-10 06:50:39,903: None
[DEBUG]2024-04-10 06:50:39,903: None
[DEBUG]2024-04-10 06:50:39,903: None
[DEBUG]2024-04-10 06:50:39,903: None
[DEBUG]2024-04-10 06:50:39,903: None
[DEBUG]2024-04-10 06:50:39,903: None
[DEBUG]2024-04-10 06:50:39,903: None
[DEBUG]2024-04-10 06:50:39,903: None
[DEBUG]2024-04-10 06:50:39,903: None
[DEBUG]2024-04-10 06:50:39,903: None
[DEBUG]2024-04-10 06:50:39,903: None
[DEBUG]2024-04-10 06:50:39,903: None
[DEBUG]2024-04-10 06:50:39,903: None
[DEBUG]2024-04-10 06:50:39,903: None
[DEBUG]2024-04-10 06:50:39,903: None
[DEBUG]2024-04-10 06:50:39,903: None
[DEBUG]2024-04-10 06:50:39,903: None
[DEBUG]2024-04-10 06:50:39,904: None
[DEBUG]2024-04-10 06:50:39,904: None
[DEBUG]2024-04-10 06:50:39,904: None
[DEBUG]2024-04-10 06:50:39,904: None
[DEBUG]2024-04-10 06:50:39,904: None
[DEBUG]2024-04-10 06:50:39,904: None
[DEBUG]2024-04-10 06:50:39,904: None
[DEBUG]2024-04-10 06:50:39,904: None
[DEBUG]2024-04-10 06:50:39,904: None
[DEBUG]2024-04-10 06:50:39,904: None
[DEBUG]2024-04-10 06:50:39,905: None
[DEBUG]2024-04-10 06:50:39,905: None
[DEBUG]2024-04-10 06:50:39,905: None
[DEBUG]2024-04-10 06:50:39,905: None
[DEBUG]2024-04-10 06:50:39,905: None
[DEBUG]2024-04-10 06:50:39,905: None
[DEBUG]2024-04-10 06:50:39,905: None
[DEBUG]2024-04-10 06:50:39,905: None
[DEBUG]2024-04-10 06:50:39,905: None
[DEBUG]2024-04-10 06:50:39,905: None
[DEBUG]2024-04-10 06:50:39,905: None
[DEBUG]2024-04-10 06:50:39,906: None
[DEBUG]2024-04-10 06:50:39,906: None
[DEBUG]2024-04-10 06:50:39,906: None
[DEBUG]2024-04-10 06:50:39,906: None
[DEBUG]2024-04-10 06:50:39,906: None
[DEBUG]2024-04-10 06:50:39,906: None
[DEBUG]2024-04-10 06:50:39,906: None
[DEBUG]2024-04-10 06:50:39,906: None
[DEBUG]2024-04-10 06:50:39,906: None
[DEBUG]2024-04-10 06:50:39,906: None
[DEBUG]2024-04-10 06:50:39,906: None
[DEBUG]2024-04-10 06:50:39,906: None
[DEBUG]2024-04-10 06:50:39,907: None
[DEBUG]2024-04-10 06:50:39,907: None
[DEBUG]2024-04-10 06:50:39,907: None
[DEBUG]2024-04-10 06:50:39,907: None
[DEBUG]2024-04-10 06:50:39,907: None
[DEBUG]2024-04-10 06:50:39,907: None
[DEBUG]2024-04-10 06:50:39,907: None
[DEBUG]2024-04-10 06:50:39,907: None
[DEBUG]2024-04-10 06:50:39,907: None
[DEBUG]2024-04-10 06:50:39,907: None
[DEBUG]2024-04-10 06:50:39,907: None
[DEBUG]2024-04-10 06:50:39,907: None
[DEBUG]2024-04-10 06:50:39,907: None
[DEBUG]2024-04-10 06:50:39,908: None
[DEBUG]2024-04-10 06:50:39,908: None
[DEBUG]2024-04-10 06:50:39,908: None
[DEBUG]2024-04-10 06:50:39,908: None
[DEBUG]2024-04-10 06:50:39,908: None
[DEBUG]2024-04-10 06:50:39,908: None
[DEBUG]2024-04-10 06:50:39,908: None
[DEBUG]2024-04-10 06:50:39,908: None
[DEBUG]2024-04-10 06:50:39,908: None
[DEBUG]2024-04-10 06:50:39,908: None
[DEBUG]2024-04-10 06:50:39,908: None
[DEBUG]2024-04-10 06:50:39,908: None
[DEBUG]2024-04-10 06:50:39,908: None
[DEBUG]2024-04-10 06:50:39,908: None
[DEBUG]2024-04-10 06:50:39,909: <re.Match object; span=(2375, 2476), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:50:39,909: <re.Match object; span=(2375, 2476), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:50:39,909: <re.Match object; span=(2375, 2476), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:50:39,909: <re.Match object; span=(2375, 2476), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:50:39,909: <re.Match object; span=(2375, 2476), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:50:39,909: <re.Match object; span=(2375, 2476), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:50:39,909: <re.Match object; span=(2375, 2476), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:50:39,909: <re.Match object; span=(2375, 2476), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:50:39,909: <re.Match object; span=(2375, 2476), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:50:39,909: <re.Match object; span=(2375, 2476), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:50:39,909: <re.Match object; span=(2375, 2476), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:50:39,909: <re.Match object; span=(2375, 2476), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:50:39,909: <re.Match object; span=(2375, 2476), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:50:39,909: <re.Match object; span=(2375, 2476), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:50:39,909: <re.Match object; span=(2375, 2476), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:50:39,909: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:50:39,909: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:50:39,909: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:50:39,909: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:50:39,909: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:50:39,909: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:50:39,909: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:50:39,909: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:50:39,909: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:50:39,909: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:50:39,909: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:50:39,909: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:50:39,909: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:50:39,909: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:50:39,909: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:50:39,910: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:50:39,910: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:50:39,910: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:50:39,910: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:50:39,910: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:50:39,910: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:50:39,910: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:50:39,910: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:50:39,910: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:50:39,910: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:50:39,910: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:50:39,910: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:50:39,910: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:50:39,910: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:50:39,910: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:50:39,911: None
[DEBUG]2024-04-10 06:50:39,911: None
[DEBUG]2024-04-10 06:50:39,911: None
[DEBUG]2024-04-10 06:50:39,911: None
[DEBUG]2024-04-10 06:50:39,911: None
[DEBUG]2024-04-10 06:50:39,911: None
[DEBUG]2024-04-10 06:50:39,911: None
[DEBUG]2024-04-10 06:50:39,911: None
[DEBUG]2024-04-10 06:50:39,911: None
[DEBUG]2024-04-10 06:50:39,911: None
[DEBUG]2024-04-10 06:50:39,911: None
[DEBUG]2024-04-10 06:50:39,911: None
[DEBUG]2024-04-10 06:50:39,911: None
[DEBUG]2024-04-10 06:50:39,911: None
[DEBUG]2024-04-10 06:50:39,911: None
[DEBUG]2024-04-10 06:50:39,911: None
[DEBUG]2024-04-10 06:50:39,912: None
[DEBUG]2024-04-10 06:50:39,912: None
[DEBUG]2024-04-10 06:50:39,912: None
[DEBUG]2024-04-10 06:50:39,912: None
[DEBUG]2024-04-10 06:50:39,912: None
[DEBUG]2024-04-10 06:50:39,912: None
[DEBUG]2024-04-10 06:50:39,912: None
[DEBUG]2024-04-10 06:50:39,912: None
[DEBUG]2024-04-10 06:50:39,912: None
[DEBUG]2024-04-10 06:50:39,912: None
[DEBUG]2024-04-10 06:50:39,912: None
[DEBUG]2024-04-10 06:50:39,912: None
[DEBUG]2024-04-10 06:50:39,912: None
[DEBUG]2024-04-10 06:50:39,912: None
[DEBUG]2024-04-10 06:50:39,912: None
[DEBUG]2024-04-10 06:50:39,912: None
[DEBUG]2024-04-10 06:50:39,912: None
[DEBUG]2024-04-10 06:50:39,913: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:50:39,913: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:50:39,913: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:50:39,913: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:50:39,913: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:50:39,913: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:50:39,913: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:50:39,913: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:50:39,913: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:50:39,913: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:50:39,913: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:50:39,913: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:50:39,913: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:50:39,913: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:50:39,913: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:50:39,913: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:50:39,913: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:50:39,913: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:50:39,913: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:50:39,913: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:50:39,913: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:50:39,913: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:50:39,913: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:50:39,913: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:50:39,913: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:50:39,913: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:50:39,913: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:50:39,913: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:50:39,913: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:50:39,913: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:50:39,913: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:50:39,913: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:50:39,913: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:50:39,913: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:50:39,913: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:50:39,913: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:50:39,914: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:50:39,914: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:50:39,914: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:50:39,914: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:50:39,914: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:50:39,914: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:50:39,914: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:50:39,914: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:50:39,914: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:50:39,914: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:50:39,914: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:50:39,914: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:50:39,914: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:50:39,914: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:50:39,914: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:50:39,914: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:50:39,914: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:50:39,914: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:50:39,915: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:50:39,915: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:50:39,915: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:50:39,915: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:50:39,915: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:50:39,915: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:50:39,915: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:50:39,915: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:50:39,915: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:50:39,915: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:50:39,915: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:50:39,915: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:50:39,915: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:50:39,915: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:50:39,915: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:50:39,915: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:50:39,915: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:50:39,915: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:50:39,915: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:50:39,916: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:50:39,916: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:50:39,916: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:50:39,916: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:50:39,916: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:50:39,916: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:50:39,916: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:50:39,916: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:50:39,916: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:50:39,916: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:50:39,916: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:50:39,916: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:50:39,916: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:50:39,916: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:50:39,916: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:50:39,916: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:50:39,916: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:50:39,916: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:50:39,916: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:50:39,917: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:50:39,917: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:50:39,917: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:50:39,917: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:50:39,917: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:50:39,917: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:50:39,917: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:50:39,917: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:50:39,917: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:50:39,917: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:50:39,917: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:50:39,917: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:50:39,917: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:50:39,917: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:50:39,917: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:50:39,917: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:50:39,917: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:50:39,917: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:50:39,917: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:51:46,076: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 06:51:46,076: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 06:51:46,076: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 06:51:46,078: None
[DEBUG]2024-04-10 06:51:46,078: None
[DEBUG]2024-04-10 06:51:46,078: None
[DEBUG]2024-04-10 06:51:46,078: None
[DEBUG]2024-04-10 06:51:46,078: None
[DEBUG]2024-04-10 06:51:46,079: None
[DEBUG]2024-04-10 06:51:46,079: None
[DEBUG]2024-04-10 06:51:46,079: None
[DEBUG]2024-04-10 06:51:46,079: None
[DEBUG]2024-04-10 06:51:46,080: None
[DEBUG]2024-04-10 06:51:46,080: None
[DEBUG]2024-04-10 06:51:46,080: None
[DEBUG]2024-04-10 06:51:46,080: None
[DEBUG]2024-04-10 06:51:46,080: None
[DEBUG]2024-04-10 06:51:46,080: None
[DEBUG]2024-04-10 06:51:46,080: None
[DEBUG]2024-04-10 06:51:46,080: None
[DEBUG]2024-04-10 06:51:46,080: None
[DEBUG]2024-04-10 06:51:46,080: None
[DEBUG]2024-04-10 06:51:46,080: None
[DEBUG]2024-04-10 06:51:46,081: None
[DEBUG]2024-04-10 06:51:46,081: None
[DEBUG]2024-04-10 06:51:46,081: None
[DEBUG]2024-04-10 06:51:46,081: None
[DEBUG]2024-04-10 06:51:46,081: None
[DEBUG]2024-04-10 06:51:46,081: None
[DEBUG]2024-04-10 06:51:46,081: None
[DEBUG]2024-04-10 06:51:46,082: None
[DEBUG]2024-04-10 06:51:46,082: None
[DEBUG]2024-04-10 06:51:46,082: None
[DEBUG]2024-04-10 06:51:46,082: None
[DEBUG]2024-04-10 06:51:46,082: None
[DEBUG]2024-04-10 06:51:46,082: None
[DEBUG]2024-04-10 06:51:46,082: None
[DEBUG]2024-04-10 06:51:46,082: None
[DEBUG]2024-04-10 06:51:46,082: None
[DEBUG]2024-04-10 06:51:46,082: None
[DEBUG]2024-04-10 06:51:46,082: None
[DEBUG]2024-04-10 06:51:46,082: None
[DEBUG]2024-04-10 06:51:46,082: None
[DEBUG]2024-04-10 06:51:46,082: None
[DEBUG]2024-04-10 06:51:46,082: None
[DEBUG]2024-04-10 06:51:46,082: None
[DEBUG]2024-04-10 06:51:46,082: None
[DEBUG]2024-04-10 06:51:46,083: None
[DEBUG]2024-04-10 06:51:46,083: None
[DEBUG]2024-04-10 06:51:46,083: None
[DEBUG]2024-04-10 06:51:46,083: None
[DEBUG]2024-04-10 06:51:46,083: None
[DEBUG]2024-04-10 06:51:46,083: None
[DEBUG]2024-04-10 06:51:46,083: None
[DEBUG]2024-04-10 06:51:46,083: None
[DEBUG]2024-04-10 06:51:46,083: None
[DEBUG]2024-04-10 06:51:46,083: None
[DEBUG]2024-04-10 06:51:46,084: None
[DEBUG]2024-04-10 06:51:46,084: None
[DEBUG]2024-04-10 06:51:46,084: None
[DEBUG]2024-04-10 06:51:46,084: None
[DEBUG]2024-04-10 06:51:46,084: None
[DEBUG]2024-04-10 06:51:46,084: None
[DEBUG]2024-04-10 06:51:46,084: None
[DEBUG]2024-04-10 06:51:46,084: None
[DEBUG]2024-04-10 06:51:46,084: None
[DEBUG]2024-04-10 06:51:46,084: None
[DEBUG]2024-04-10 06:51:46,084: None
[DEBUG]2024-04-10 06:51:46,085: None
[DEBUG]2024-04-10 06:51:46,085: None
[DEBUG]2024-04-10 06:51:46,085: None
[DEBUG]2024-04-10 06:51:46,085: None
[DEBUG]2024-04-10 06:51:46,085: None
[DEBUG]2024-04-10 06:51:46,085: None
[DEBUG]2024-04-10 06:51:46,085: None
[DEBUG]2024-04-10 06:51:46,085: None
[DEBUG]2024-04-10 06:51:46,085: None
[DEBUG]2024-04-10 06:51:46,085: None
[DEBUG]2024-04-10 06:51:46,085: None
[DEBUG]2024-04-10 06:51:46,085: None
[DEBUG]2024-04-10 06:51:46,086: None
[DEBUG]2024-04-10 06:51:46,086: None
[DEBUG]2024-04-10 06:51:46,086: None
[DEBUG]2024-04-10 06:51:46,086: None
[DEBUG]2024-04-10 06:51:46,086: None
[DEBUG]2024-04-10 06:51:46,086: None
[DEBUG]2024-04-10 06:51:46,086: None
[DEBUG]2024-04-10 06:51:46,086: None
[DEBUG]2024-04-10 06:51:46,086: None
[DEBUG]2024-04-10 06:51:46,086: None
[DEBUG]2024-04-10 06:51:46,086: None
[DEBUG]2024-04-10 06:51:46,086: None
[DEBUG]2024-04-10 06:51:46,086: None
[DEBUG]2024-04-10 06:51:46,087: None
[DEBUG]2024-04-10 06:51:46,087: None
[DEBUG]2024-04-10 06:51:46,087: None
[DEBUG]2024-04-10 06:51:46,087: None
[DEBUG]2024-04-10 06:51:46,087: None
[DEBUG]2024-04-10 06:51:46,087: None
[DEBUG]2024-04-10 06:51:46,087: None
[DEBUG]2024-04-10 06:51:46,087: None
[DEBUG]2024-04-10 06:51:46,087: None
[DEBUG]2024-04-10 06:51:46,087: None
[DEBUG]2024-04-10 06:51:46,087: None
[DEBUG]2024-04-10 06:51:46,087: None
[DEBUG]2024-04-10 06:51:46,087: None
[DEBUG]2024-04-10 06:51:46,087: None
[DEBUG]2024-04-10 06:51:46,088: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:51:46,088: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:51:46,088: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:51:46,088: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:51:46,088: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:51:46,088: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:51:46,088: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:51:46,088: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:51:46,088: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:51:46,088: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:51:46,088: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:51:46,088: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:51:46,088: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:51:46,088: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:51:46,088: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:51:46,088: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:51:46,088: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:51:46,088: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:51:46,088: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:51:46,088: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:51:46,088: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:51:46,088: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:51:46,088: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:51:46,088: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:51:46,088: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:51:46,088: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:51:46,088: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:51:46,088: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:51:46,088: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:51:46,088: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:51:46,089: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:51:46,089: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:51:46,089: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:51:46,089: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:51:46,089: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:51:46,089: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:51:46,089: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:51:46,089: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:51:46,089: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:51:46,089: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:51:46,089: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:51:46,089: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:51:46,089: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:51:46,089: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:51:46,089: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:51:46,090: None
[DEBUG]2024-04-10 06:51:46,090: None
[DEBUG]2024-04-10 06:51:46,090: None
[DEBUG]2024-04-10 06:51:46,090: None
[DEBUG]2024-04-10 06:51:46,090: None
[DEBUG]2024-04-10 06:51:46,090: None
[DEBUG]2024-04-10 06:51:46,090: None
[DEBUG]2024-04-10 06:51:46,090: None
[DEBUG]2024-04-10 06:51:46,090: None
[DEBUG]2024-04-10 06:51:46,090: None
[DEBUG]2024-04-10 06:51:46,090: None
[DEBUG]2024-04-10 06:51:46,090: None
[DEBUG]2024-04-10 06:51:46,090: None
[DEBUG]2024-04-10 06:51:46,090: None
[DEBUG]2024-04-10 06:51:46,090: None
[DEBUG]2024-04-10 06:51:46,090: None
[DEBUG]2024-04-10 06:51:46,091: None
[DEBUG]2024-04-10 06:51:46,091: None
[DEBUG]2024-04-10 06:51:46,091: None
[DEBUG]2024-04-10 06:51:46,091: None
[DEBUG]2024-04-10 06:51:46,091: None
[DEBUG]2024-04-10 06:51:46,091: None
[DEBUG]2024-04-10 06:51:46,091: None
[DEBUG]2024-04-10 06:51:46,091: None
[DEBUG]2024-04-10 06:51:46,091: None
[DEBUG]2024-04-10 06:51:46,091: None
[DEBUG]2024-04-10 06:51:46,091: None
[DEBUG]2024-04-10 06:51:46,091: None
[DEBUG]2024-04-10 06:51:46,091: None
[DEBUG]2024-04-10 06:51:46,091: None
[DEBUG]2024-04-10 06:51:46,091: None
[DEBUG]2024-04-10 06:51:46,091: None
[DEBUG]2024-04-10 06:51:46,091: None
[DEBUG]2024-04-10 06:51:46,092: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:51:46,092: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:51:46,092: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:51:46,092: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:51:46,092: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:51:46,092: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:51:46,092: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:51:46,092: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:51:46,092: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:51:46,092: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:51:46,092: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:51:46,092: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:51:46,092: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:51:46,092: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:51:46,092: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:51:46,092: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:51:46,092: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:51:46,092: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:51:46,093: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:51:46,093: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:51:46,093: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:51:46,093: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:51:46,093: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:51:46,093: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:51:46,093: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:51:46,093: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:51:46,093: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:51:46,093: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:51:46,093: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:51:46,093: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:51:46,093: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:51:46,093: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:51:46,093: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:51:46,093: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:51:46,093: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:51:46,093: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:51:46,093: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:51:46,093: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:51:46,093: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:51:46,093: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:51:46,093: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:51:46,093: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:51:46,093: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:51:46,093: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:51:46,093: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:51:46,093: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:51:46,093: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:51:46,093: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:51:46,093: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:51:46,093: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:51:46,093: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:51:46,093: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:51:46,093: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:51:46,093: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:51:46,095: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:51:46,095: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:51:46,095: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:51:46,095: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:51:46,095: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:51:46,095: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:51:46,095: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:51:46,095: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:51:46,095: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:51:46,095: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:51:46,095: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:51:46,095: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:51:46,095: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:51:46,095: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:51:46,095: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:51:46,095: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:51:46,095: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:51:46,095: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:51:46,095: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:51:46,095: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:51:46,095: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:51:46,095: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:51:46,095: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:51:46,095: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:51:46,095: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:51:46,095: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:51:46,095: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:51:46,095: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:51:46,095: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:51:46,095: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:51:46,095: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:51:46,095: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:51:46,095: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:51:46,095: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:51:46,095: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:51:46,095: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:51:46,095: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:51:46,095: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:51:46,096: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:51:46,096: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:51:46,096: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:51:46,096: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:51:46,096: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:51:46,096: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:51:46,096: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:51:46,096: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:51:46,096: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:51:46,096: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:51:46,096: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:51:46,096: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:51:46,096: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:51:46,096: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:51:46,096: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:51:46,096: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:51:46,096: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:51:46,096: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:51:46,096: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:52:55,477: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 06:52:55,477: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 06:52:55,477: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 06:52:55,478: None
[DEBUG]2024-04-10 06:52:55,478: None
[DEBUG]2024-04-10 06:52:55,479: None
[DEBUG]2024-04-10 06:52:55,479: None
[DEBUG]2024-04-10 06:52:55,479: None
[DEBUG]2024-04-10 06:52:55,480: None
[DEBUG]2024-04-10 06:52:55,480: None
[DEBUG]2024-04-10 06:52:55,480: None
[DEBUG]2024-04-10 06:52:55,480: None
[DEBUG]2024-04-10 06:52:55,480: None
[DEBUG]2024-04-10 06:52:55,480: None
[DEBUG]2024-04-10 06:52:55,480: None
[DEBUG]2024-04-10 06:52:55,480: None
[DEBUG]2024-04-10 06:52:55,480: None
[DEBUG]2024-04-10 06:52:55,481: None
[DEBUG]2024-04-10 06:52:55,481: None
[DEBUG]2024-04-10 06:52:55,481: None
[DEBUG]2024-04-10 06:52:55,481: None
[DEBUG]2024-04-10 06:52:55,481: None
[DEBUG]2024-04-10 06:52:55,481: None
[DEBUG]2024-04-10 06:52:55,482: None
[DEBUG]2024-04-10 06:52:55,482: None
[DEBUG]2024-04-10 06:52:55,482: None
[DEBUG]2024-04-10 06:52:55,482: None
[DEBUG]2024-04-10 06:52:55,482: None
[DEBUG]2024-04-10 06:52:55,482: None
[DEBUG]2024-04-10 06:52:55,482: None
[DEBUG]2024-04-10 06:52:55,483: None
[DEBUG]2024-04-10 06:52:55,483: None
[DEBUG]2024-04-10 06:52:55,483: None
[DEBUG]2024-04-10 06:52:55,483: None
[DEBUG]2024-04-10 06:52:55,483: None
[DEBUG]2024-04-10 06:52:55,483: None
[DEBUG]2024-04-10 06:52:55,483: None
[DEBUG]2024-04-10 06:52:55,483: None
[DEBUG]2024-04-10 06:52:55,484: None
[DEBUG]2024-04-10 06:52:55,484: None
[DEBUG]2024-04-10 06:52:55,484: None
[DEBUG]2024-04-10 06:52:55,484: None
[DEBUG]2024-04-10 06:52:55,484: None
[DEBUG]2024-04-10 06:52:55,484: None
[DEBUG]2024-04-10 06:52:55,484: None
[DEBUG]2024-04-10 06:52:55,484: None
[DEBUG]2024-04-10 06:52:55,484: None
[DEBUG]2024-04-10 06:52:55,485: None
[DEBUG]2024-04-10 06:52:55,485: None
[DEBUG]2024-04-10 06:52:55,485: None
[DEBUG]2024-04-10 06:52:55,485: None
[DEBUG]2024-04-10 06:52:55,485: None
[DEBUG]2024-04-10 06:52:55,485: None
[DEBUG]2024-04-10 06:52:55,485: None
[DEBUG]2024-04-10 06:52:55,485: None
[DEBUG]2024-04-10 06:52:55,485: None
[DEBUG]2024-04-10 06:52:55,485: None
[DEBUG]2024-04-10 06:52:55,486: None
[DEBUG]2024-04-10 06:52:55,486: None
[DEBUG]2024-04-10 06:52:55,486: None
[DEBUG]2024-04-10 06:52:55,486: None
[DEBUG]2024-04-10 06:52:55,486: None
[DEBUG]2024-04-10 06:52:55,486: None
[DEBUG]2024-04-10 06:52:55,486: None
[DEBUG]2024-04-10 06:52:55,486: None
[DEBUG]2024-04-10 06:52:55,486: None
[DEBUG]2024-04-10 06:52:55,486: None
[DEBUG]2024-04-10 06:52:55,486: None
[DEBUG]2024-04-10 06:52:55,487: None
[DEBUG]2024-04-10 06:52:55,487: None
[DEBUG]2024-04-10 06:52:55,487: None
[DEBUG]2024-04-10 06:52:55,487: None
[DEBUG]2024-04-10 06:52:55,487: None
[DEBUG]2024-04-10 06:52:55,487: None
[DEBUG]2024-04-10 06:52:55,487: None
[DEBUG]2024-04-10 06:52:55,487: None
[DEBUG]2024-04-10 06:52:55,487: None
[DEBUG]2024-04-10 06:52:55,487: None
[DEBUG]2024-04-10 06:52:55,487: None
[DEBUG]2024-04-10 06:52:55,487: None
[DEBUG]2024-04-10 06:52:55,488: None
[DEBUG]2024-04-10 06:52:55,488: None
[DEBUG]2024-04-10 06:52:55,488: None
[DEBUG]2024-04-10 06:52:55,488: None
[DEBUG]2024-04-10 06:52:55,488: None
[DEBUG]2024-04-10 06:52:55,488: None
[DEBUG]2024-04-10 06:52:55,488: None
[DEBUG]2024-04-10 06:52:55,488: None
[DEBUG]2024-04-10 06:52:55,488: None
[DEBUG]2024-04-10 06:52:55,488: None
[DEBUG]2024-04-10 06:52:55,488: None
[DEBUG]2024-04-10 06:52:55,488: None
[DEBUG]2024-04-10 06:52:55,488: None
[DEBUG]2024-04-10 06:52:55,488: None
[DEBUG]2024-04-10 06:52:55,488: None
[DEBUG]2024-04-10 06:52:55,488: None
[DEBUG]2024-04-10 06:52:55,488: None
[DEBUG]2024-04-10 06:52:55,488: None
[DEBUG]2024-04-10 06:52:55,488: None
[DEBUG]2024-04-10 06:52:55,488: None
[DEBUG]2024-04-10 06:52:55,488: None
[DEBUG]2024-04-10 06:52:55,488: None
[DEBUG]2024-04-10 06:52:55,488: None
[DEBUG]2024-04-10 06:52:55,488: None
[DEBUG]2024-04-10 06:52:55,488: None
[DEBUG]2024-04-10 06:52:55,488: None
[DEBUG]2024-04-10 06:52:55,488: None
[DEBUG]2024-04-10 06:52:55,489: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:52:55,489: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:52:55,489: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:52:55,489: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:52:55,489: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:52:55,489: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:52:55,489: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:52:55,489: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:52:55,489: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:52:55,489: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:52:55,489: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:52:55,489: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:52:55,489: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:52:55,489: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:52:55,489: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 06:52:55,490: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:52:55,490: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:52:55,490: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:52:55,490: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:52:55,490: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:52:55,490: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:52:55,490: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:52:55,490: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:52:55,490: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:52:55,490: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:52:55,490: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:52:55,490: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:52:55,490: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:52:55,490: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:52:55,490: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 06:52:55,490: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:52:55,490: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:52:55,490: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:52:55,490: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:52:55,490: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:52:55,490: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:52:55,490: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:52:55,490: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:52:55,490: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:52:55,490: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:52:55,490: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:52:55,490: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:52:55,490: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:52:55,490: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:52:55,490: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 06:52:55,491: None
[DEBUG]2024-04-10 06:52:55,491: None
[DEBUG]2024-04-10 06:52:55,491: None
[DEBUG]2024-04-10 06:52:55,491: None
[DEBUG]2024-04-10 06:52:55,491: None
[DEBUG]2024-04-10 06:52:55,491: None
[DEBUG]2024-04-10 06:52:55,491: None
[DEBUG]2024-04-10 06:52:55,491: None
[DEBUG]2024-04-10 06:52:55,491: None
[DEBUG]2024-04-10 06:52:55,491: None
[DEBUG]2024-04-10 06:52:55,491: None
[DEBUG]2024-04-10 06:52:55,491: None
[DEBUG]2024-04-10 06:52:55,491: None
[DEBUG]2024-04-10 06:52:55,491: None
[DEBUG]2024-04-10 06:52:55,491: None
[DEBUG]2024-04-10 06:52:55,491: None
[DEBUG]2024-04-10 06:52:55,492: None
[DEBUG]2024-04-10 06:52:55,492: None
[DEBUG]2024-04-10 06:52:55,492: None
[DEBUG]2024-04-10 06:52:55,492: None
[DEBUG]2024-04-10 06:52:55,492: None
[DEBUG]2024-04-10 06:52:55,492: None
[DEBUG]2024-04-10 06:52:55,492: None
[DEBUG]2024-04-10 06:52:55,492: None
[DEBUG]2024-04-10 06:52:55,492: None
[DEBUG]2024-04-10 06:52:55,492: None
[DEBUG]2024-04-10 06:52:55,492: None
[DEBUG]2024-04-10 06:52:55,492: None
[DEBUG]2024-04-10 06:52:55,492: None
[DEBUG]2024-04-10 06:52:55,492: None
[DEBUG]2024-04-10 06:52:55,492: None
[DEBUG]2024-04-10 06:52:55,492: None
[DEBUG]2024-04-10 06:52:55,492: None
[DEBUG]2024-04-10 06:52:55,493: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:52:55,493: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:52:55,493: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:52:55,493: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:52:55,493: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:52:55,493: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:52:55,493: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:52:55,493: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:52:55,493: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:52:55,493: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:52:55,493: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:52:55,493: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:52:55,493: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:52:55,493: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:52:55,493: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:52:55,493: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:52:55,493: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:52:55,493: <re.Match object; span=(1590, 1679), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 06:52:55,494: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:52:55,494: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:52:55,494: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:52:55,494: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:52:55,494: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:52:55,494: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:52:55,494: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:52:55,494: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:52:55,494: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:52:55,494: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:52:55,494: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:52:55,494: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:52:55,494: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:52:55,494: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:52:55,494: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:52:55,494: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:52:55,494: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:52:55,494: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 06:52:55,494: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:52:55,494: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:52:55,494: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:52:55,494: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:52:55,494: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:52:55,494: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:52:55,494: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:52:55,494: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:52:55,494: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:52:55,494: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:52:55,494: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:52:55,494: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:52:55,494: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:52:55,494: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:52:55,494: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:52:55,494: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:52:55,494: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:52:55,494: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 06:52:55,495: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:52:55,495: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:52:55,495: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:52:55,495: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:52:55,495: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:52:55,495: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:52:55,495: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:52:55,495: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:52:55,495: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:52:55,495: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:52:55,495: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:52:55,495: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:52:55,495: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:52:55,495: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:52:55,495: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:52:55,495: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:52:55,495: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:52:55,495: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:52:55,495: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 06:52:55,496: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:52:55,496: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:52:55,496: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:52:55,496: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:52:55,496: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:52:55,496: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:52:55,496: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:52:55,496: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:52:55,496: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:52:55,496: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:52:55,496: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:52:55,496: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:52:55,496: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:52:55,496: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:52:55,496: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:52:55,496: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:52:55,496: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:52:55,496: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:52:55,496: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 06:52:55,496: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:52:55,496: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:52:55,496: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:52:55,496: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:52:55,496: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:52:55,496: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:52:55,496: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:52:55,496: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:52:55,496: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:52:55,496: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:52:55,496: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:52:55,496: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:52:55,496: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:52:55,496: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:52:55,496: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:52:55,496: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:52:55,496: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:52:55,496: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 06:52:55,496: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 07:02:35,221: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 07:02:35,222: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 07:02:35,222: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 07:02:35,224: None
[DEBUG]2024-04-10 07:02:35,224: None
[DEBUG]2024-04-10 07:02:35,224: None
[DEBUG]2024-04-10 07:02:35,224: None
[DEBUG]2024-04-10 07:02:35,224: None
[DEBUG]2024-04-10 07:02:35,225: None
[DEBUG]2024-04-10 07:02:35,225: None
[DEBUG]2024-04-10 07:02:35,225: None
[DEBUG]2024-04-10 07:02:35,225: None
[DEBUG]2024-04-10 07:02:35,225: None
[DEBUG]2024-04-10 07:02:35,225: None
[DEBUG]2024-04-10 07:02:35,225: None
[DEBUG]2024-04-10 07:02:35,225: None
[DEBUG]2024-04-10 07:02:35,225: None
[DEBUG]2024-04-10 07:02:35,226: None
[DEBUG]2024-04-10 07:02:35,226: None
[DEBUG]2024-04-10 07:02:35,226: None
[DEBUG]2024-04-10 07:02:35,226: None
[DEBUG]2024-04-10 07:02:35,226: None
[DEBUG]2024-04-10 07:02:35,226: None
[DEBUG]2024-04-10 07:02:35,227: None
[DEBUG]2024-04-10 07:02:35,227: None
[DEBUG]2024-04-10 07:02:35,227: None
[DEBUG]2024-04-10 07:02:35,227: None
[DEBUG]2024-04-10 07:02:35,227: None
[DEBUG]2024-04-10 07:02:35,227: None
[DEBUG]2024-04-10 07:02:35,227: None
[DEBUG]2024-04-10 07:02:35,228: None
[DEBUG]2024-04-10 07:02:35,228: None
[DEBUG]2024-04-10 07:02:35,228: None
[DEBUG]2024-04-10 07:02:35,228: None
[DEBUG]2024-04-10 07:02:35,228: None
[DEBUG]2024-04-10 07:02:35,228: None
[DEBUG]2024-04-10 07:02:35,228: None
[DEBUG]2024-04-10 07:02:35,228: None
[DEBUG]2024-04-10 07:02:35,228: None
[DEBUG]2024-04-10 07:02:35,228: None
[DEBUG]2024-04-10 07:02:35,228: None
[DEBUG]2024-04-10 07:02:35,228: None
[DEBUG]2024-04-10 07:02:35,228: None
[DEBUG]2024-04-10 07:02:35,228: None
[DEBUG]2024-04-10 07:02:35,228: None
[DEBUG]2024-04-10 07:02:35,228: None
[DEBUG]2024-04-10 07:02:35,228: None
[DEBUG]2024-04-10 07:02:35,229: None
[DEBUG]2024-04-10 07:02:35,229: None
[DEBUG]2024-04-10 07:02:35,229: None
[DEBUG]2024-04-10 07:02:35,229: None
[DEBUG]2024-04-10 07:02:35,229: None
[DEBUG]2024-04-10 07:02:35,229: None
[DEBUG]2024-04-10 07:02:35,229: None
[DEBUG]2024-04-10 07:02:35,229: None
[DEBUG]2024-04-10 07:02:35,229: None
[DEBUG]2024-04-10 07:02:35,229: None
[DEBUG]2024-04-10 07:02:35,230: None
[DEBUG]2024-04-10 07:02:35,230: None
[DEBUG]2024-04-10 07:02:35,230: None
[DEBUG]2024-04-10 07:02:35,230: None
[DEBUG]2024-04-10 07:02:35,230: None
[DEBUG]2024-04-10 07:02:35,230: None
[DEBUG]2024-04-10 07:02:35,230: None
[DEBUG]2024-04-10 07:02:35,230: None
[DEBUG]2024-04-10 07:02:35,230: None
[DEBUG]2024-04-10 07:02:35,230: None
[DEBUG]2024-04-10 07:02:35,230: None
[DEBUG]2024-04-10 07:02:35,231: None
[DEBUG]2024-04-10 07:02:35,231: None
[DEBUG]2024-04-10 07:02:35,231: None
[DEBUG]2024-04-10 07:02:35,231: None
[DEBUG]2024-04-10 07:02:35,231: None
[DEBUG]2024-04-10 07:02:35,231: None
[DEBUG]2024-04-10 07:02:35,231: None
[DEBUG]2024-04-10 07:02:35,231: None
[DEBUG]2024-04-10 07:02:35,231: None
[DEBUG]2024-04-10 07:02:35,231: None
[DEBUG]2024-04-10 07:02:35,231: None
[DEBUG]2024-04-10 07:02:35,231: None
[DEBUG]2024-04-10 07:02:35,232: None
[DEBUG]2024-04-10 07:02:35,232: None
[DEBUG]2024-04-10 07:02:35,232: None
[DEBUG]2024-04-10 07:02:35,232: None
[DEBUG]2024-04-10 07:02:35,232: None
[DEBUG]2024-04-10 07:02:35,232: None
[DEBUG]2024-04-10 07:02:35,232: None
[DEBUG]2024-04-10 07:02:35,232: None
[DEBUG]2024-04-10 07:02:35,232: None
[DEBUG]2024-04-10 07:02:35,232: None
[DEBUG]2024-04-10 07:02:35,232: None
[DEBUG]2024-04-10 07:02:35,232: None
[DEBUG]2024-04-10 07:02:35,232: None
[DEBUG]2024-04-10 07:02:35,233: None
[DEBUG]2024-04-10 07:02:35,233: None
[DEBUG]2024-04-10 07:02:35,233: None
[DEBUG]2024-04-10 07:02:35,233: None
[DEBUG]2024-04-10 07:02:35,233: None
[DEBUG]2024-04-10 07:02:35,233: None
[DEBUG]2024-04-10 07:02:35,233: None
[DEBUG]2024-04-10 07:02:35,233: None
[DEBUG]2024-04-10 07:02:35,233: None
[DEBUG]2024-04-10 07:02:35,233: None
[DEBUG]2024-04-10 07:02:35,233: None
[DEBUG]2024-04-10 07:02:35,233: None
[DEBUG]2024-04-10 07:02:35,233: None
[DEBUG]2024-04-10 07:02:35,233: None
[DEBUG]2024-04-10 07:02:35,234: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:02:35,234: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:02:35,234: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:02:35,234: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:02:35,234: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:02:35,234: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:02:35,234: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:02:35,234: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:02:35,234: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:02:35,234: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:02:35,234: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:02:35,234: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:02:35,234: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:02:35,234: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:02:35,234: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:02:35,234: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:02:35,234: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:02:35,234: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:02:35,234: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:02:35,234: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:02:35,234: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:02:35,234: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:02:35,234: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:02:35,234: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:02:35,234: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:02:35,234: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:02:35,234: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:02:35,234: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:02:35,234: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:02:35,234: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:02:35,234: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:02:35,234: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:02:35,234: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:02:35,234: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:02:35,234: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:02:35,234: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:02:35,234: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:02:35,234: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:02:35,234: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:02:35,234: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:02:35,234: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:02:35,234: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:02:35,234: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:02:35,234: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:02:35,234: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:02:35,236: None
[DEBUG]2024-04-10 07:02:35,236: None
[DEBUG]2024-04-10 07:02:35,236: None
[DEBUG]2024-04-10 07:02:35,236: None
[DEBUG]2024-04-10 07:02:35,236: None
[DEBUG]2024-04-10 07:02:35,236: None
[DEBUG]2024-04-10 07:02:35,236: None
[DEBUG]2024-04-10 07:02:35,236: None
[DEBUG]2024-04-10 07:02:35,236: None
[DEBUG]2024-04-10 07:02:35,236: None
[DEBUG]2024-04-10 07:02:35,236: None
[DEBUG]2024-04-10 07:02:35,236: None
[DEBUG]2024-04-10 07:02:35,236: None
[DEBUG]2024-04-10 07:02:35,236: None
[DEBUG]2024-04-10 07:02:35,236: None
[DEBUG]2024-04-10 07:02:35,236: None
[DEBUG]2024-04-10 07:02:35,237: None
[DEBUG]2024-04-10 07:02:35,237: None
[DEBUG]2024-04-10 07:02:35,237: None
[DEBUG]2024-04-10 07:02:35,237: None
[DEBUG]2024-04-10 07:02:35,237: None
[DEBUG]2024-04-10 07:02:35,237: None
[DEBUG]2024-04-10 07:02:35,237: None
[DEBUG]2024-04-10 07:02:35,237: None
[DEBUG]2024-04-10 07:02:35,237: None
[DEBUG]2024-04-10 07:02:35,237: None
[DEBUG]2024-04-10 07:02:35,237: None
[DEBUG]2024-04-10 07:02:35,237: None
[DEBUG]2024-04-10 07:02:35,237: None
[DEBUG]2024-04-10 07:02:35,237: None
[DEBUG]2024-04-10 07:02:35,237: None
[DEBUG]2024-04-10 07:02:35,237: None
[DEBUG]2024-04-10 07:02:35,237: None
[DEBUG]2024-04-10 07:02:35,238: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:02:35,238: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:02:35,238: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:02:35,238: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:02:35,238: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:02:35,238: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:02:35,238: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:02:35,238: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:02:35,238: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:02:35,238: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:02:35,238: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:02:35,238: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:02:35,238: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:02:35,238: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:02:35,238: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:02:35,238: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:02:35,238: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:02:35,238: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:02:35,239: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:02:35,239: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:02:35,239: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:02:35,239: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:02:35,239: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:02:35,239: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:02:35,239: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:02:35,239: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:02:35,239: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:02:35,239: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:02:35,239: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:02:35,239: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:02:35,239: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:02:35,239: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:02:35,239: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:02:35,239: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:02:35,239: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:02:35,239: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:02:35,239: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:02:35,239: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:02:35,239: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:02:35,239: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:02:35,239: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:02:35,239: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:02:35,239: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:02:35,239: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:02:35,239: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:02:35,239: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:02:35,239: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:02:35,239: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:02:35,239: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:02:35,239: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:02:35,239: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:02:35,239: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:02:35,239: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:02:35,239: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:02:35,241: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 07:02:35,241: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 07:02:35,241: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 07:02:35,241: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 07:02:35,241: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 07:02:35,241: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 07:02:35,241: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 07:02:35,241: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 07:02:35,241: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 07:02:35,241: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 07:02:35,241: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 07:02:35,241: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 07:02:35,241: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 07:02:35,241: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 07:02:35,241: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 07:02:35,241: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 07:02:35,241: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 07:02:35,241: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 07:02:35,241: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 07:02:35,242: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 07:02:35,242: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 07:02:35,242: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 07:02:35,242: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 07:02:35,242: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 07:02:35,242: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 07:02:35,242: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 07:02:35,242: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 07:02:35,242: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 07:02:35,242: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 07:02:35,242: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 07:02:35,242: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 07:02:35,242: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 07:02:35,242: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 07:02:35,242: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 07:02:35,242: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 07:02:35,242: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 07:02:35,242: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 07:02:35,242: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 07:02:35,242: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 07:02:35,242: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 07:02:35,242: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 07:02:35,242: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 07:02:35,242: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 07:02:35,242: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 07:02:35,242: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 07:02:35,242: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 07:02:35,242: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 07:02:35,242: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 07:02:35,242: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 07:02:35,242: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 07:02:35,242: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 07:02:35,242: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 07:02:35,242: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 07:02:35,242: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 07:02:35,242: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 07:02:35,242: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 07:02:35,242: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 07:03:16,214: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 07:03:16,214: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 07:03:16,214: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 07:03:16,215: None
[DEBUG]2024-04-10 07:03:16,215: None
[DEBUG]2024-04-10 07:03:16,216: None
[DEBUG]2024-04-10 07:03:16,216: None
[DEBUG]2024-04-10 07:03:16,216: None
[DEBUG]2024-04-10 07:03:16,217: None
[DEBUG]2024-04-10 07:03:16,217: None
[DEBUG]2024-04-10 07:03:16,217: None
[DEBUG]2024-04-10 07:03:16,217: None
[DEBUG]2024-04-10 07:03:16,217: None
[DEBUG]2024-04-10 07:03:16,217: None
[DEBUG]2024-04-10 07:03:16,217: None
[DEBUG]2024-04-10 07:03:16,217: None
[DEBUG]2024-04-10 07:03:16,217: None
[DEBUG]2024-04-10 07:03:16,218: None
[DEBUG]2024-04-10 07:03:16,218: None
[DEBUG]2024-04-10 07:03:16,218: None
[DEBUG]2024-04-10 07:03:16,218: None
[DEBUG]2024-04-10 07:03:16,218: None
[DEBUG]2024-04-10 07:03:16,218: None
[DEBUG]2024-04-10 07:03:16,219: None
[DEBUG]2024-04-10 07:03:16,219: None
[DEBUG]2024-04-10 07:03:16,219: None
[DEBUG]2024-04-10 07:03:16,219: None
[DEBUG]2024-04-10 07:03:16,219: None
[DEBUG]2024-04-10 07:03:16,219: None
[DEBUG]2024-04-10 07:03:16,219: None
[DEBUG]2024-04-10 07:03:16,219: None
[DEBUG]2024-04-10 07:03:16,219: None
[DEBUG]2024-04-10 07:03:16,219: None
[DEBUG]2024-04-10 07:03:16,219: None
[DEBUG]2024-04-10 07:03:16,219: None
[DEBUG]2024-04-10 07:03:16,219: None
[DEBUG]2024-04-10 07:03:16,219: None
[DEBUG]2024-04-10 07:03:16,219: None
[DEBUG]2024-04-10 07:03:16,220: None
[DEBUG]2024-04-10 07:03:16,220: None
[DEBUG]2024-04-10 07:03:16,220: None
[DEBUG]2024-04-10 07:03:16,220: None
[DEBUG]2024-04-10 07:03:16,220: None
[DEBUG]2024-04-10 07:03:16,220: None
[DEBUG]2024-04-10 07:03:16,220: None
[DEBUG]2024-04-10 07:03:16,220: None
[DEBUG]2024-04-10 07:03:16,220: None
[DEBUG]2024-04-10 07:03:16,221: None
[DEBUG]2024-04-10 07:03:16,221: None
[DEBUG]2024-04-10 07:03:16,221: None
[DEBUG]2024-04-10 07:03:16,221: None
[DEBUG]2024-04-10 07:03:16,221: None
[DEBUG]2024-04-10 07:03:16,221: None
[DEBUG]2024-04-10 07:03:16,221: None
[DEBUG]2024-04-10 07:03:16,221: None
[DEBUG]2024-04-10 07:03:16,221: None
[DEBUG]2024-04-10 07:03:16,221: None
[DEBUG]2024-04-10 07:03:16,222: None
[DEBUG]2024-04-10 07:03:16,222: None
[DEBUG]2024-04-10 07:03:16,222: None
[DEBUG]2024-04-10 07:03:16,222: None
[DEBUG]2024-04-10 07:03:16,222: None
[DEBUG]2024-04-10 07:03:16,222: None
[DEBUG]2024-04-10 07:03:16,222: None
[DEBUG]2024-04-10 07:03:16,222: None
[DEBUG]2024-04-10 07:03:16,222: None
[DEBUG]2024-04-10 07:03:16,222: None
[DEBUG]2024-04-10 07:03:16,222: None
[DEBUG]2024-04-10 07:03:16,223: None
[DEBUG]2024-04-10 07:03:16,223: None
[DEBUG]2024-04-10 07:03:16,223: None
[DEBUG]2024-04-10 07:03:16,223: None
[DEBUG]2024-04-10 07:03:16,223: None
[DEBUG]2024-04-10 07:03:16,223: None
[DEBUG]2024-04-10 07:03:16,223: None
[DEBUG]2024-04-10 07:03:16,223: None
[DEBUG]2024-04-10 07:03:16,223: None
[DEBUG]2024-04-10 07:03:16,223: None
[DEBUG]2024-04-10 07:03:16,223: None
[DEBUG]2024-04-10 07:03:16,223: None
[DEBUG]2024-04-10 07:03:16,223: None
[DEBUG]2024-04-10 07:03:16,223: None
[DEBUG]2024-04-10 07:03:16,223: None
[DEBUG]2024-04-10 07:03:16,223: None
[DEBUG]2024-04-10 07:03:16,223: None
[DEBUG]2024-04-10 07:03:16,223: None
[DEBUG]2024-04-10 07:03:16,223: None
[DEBUG]2024-04-10 07:03:16,223: None
[DEBUG]2024-04-10 07:03:16,223: None
[DEBUG]2024-04-10 07:03:16,223: None
[DEBUG]2024-04-10 07:03:16,223: None
[DEBUG]2024-04-10 07:03:16,223: None
[DEBUG]2024-04-10 07:03:16,223: None
[DEBUG]2024-04-10 07:03:16,224: None
[DEBUG]2024-04-10 07:03:16,224: None
[DEBUG]2024-04-10 07:03:16,224: None
[DEBUG]2024-04-10 07:03:16,224: None
[DEBUG]2024-04-10 07:03:16,224: None
[DEBUG]2024-04-10 07:03:16,224: None
[DEBUG]2024-04-10 07:03:16,224: None
[DEBUG]2024-04-10 07:03:16,224: None
[DEBUG]2024-04-10 07:03:16,224: None
[DEBUG]2024-04-10 07:03:16,224: None
[DEBUG]2024-04-10 07:03:16,224: None
[DEBUG]2024-04-10 07:03:16,224: None
[DEBUG]2024-04-10 07:03:16,224: None
[DEBUG]2024-04-10 07:03:16,224: None
[DEBUG]2024-04-10 07:03:16,225: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:03:16,225: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:03:16,225: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:03:16,225: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:03:16,225: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:03:16,225: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:03:16,225: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:03:16,225: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:03:16,225: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:03:16,225: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:03:16,225: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:03:16,225: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:03:16,225: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:03:16,225: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:03:16,225: <re.Match object; span=(2328, 2429), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:03:16,226: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:03:16,226: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:03:16,226: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:03:16,226: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:03:16,226: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:03:16,226: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:03:16,226: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:03:16,226: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:03:16,226: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:03:16,226: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:03:16,226: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:03:16,226: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:03:16,226: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:03:16,226: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:03:16,226: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:03:16,226: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:03:16,226: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:03:16,226: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:03:16,226: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:03:16,226: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:03:16,226: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:03:16,226: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:03:16,226: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:03:16,226: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:03:16,226: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:03:16,226: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:03:16,226: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:03:16,226: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:03:16,226: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:03:16,226: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:03:16,227: None
[DEBUG]2024-04-10 07:03:16,227: None
[DEBUG]2024-04-10 07:03:16,227: None
[DEBUG]2024-04-10 07:03:16,227: None
[DEBUG]2024-04-10 07:03:16,227: None
[DEBUG]2024-04-10 07:03:16,227: None
[DEBUG]2024-04-10 07:03:16,227: None
[DEBUG]2024-04-10 07:03:16,227: None
[DEBUG]2024-04-10 07:03:16,227: None
[DEBUG]2024-04-10 07:03:16,227: None
[DEBUG]2024-04-10 07:03:16,227: None
[DEBUG]2024-04-10 07:03:16,227: None
[DEBUG]2024-04-10 07:03:16,227: None
[DEBUG]2024-04-10 07:03:16,227: None
[DEBUG]2024-04-10 07:03:16,227: None
[DEBUG]2024-04-10 07:03:16,227: None
[DEBUG]2024-04-10 07:03:16,228: None
[DEBUG]2024-04-10 07:03:16,228: None
[DEBUG]2024-04-10 07:03:16,228: None
[DEBUG]2024-04-10 07:03:16,228: None
[DEBUG]2024-04-10 07:03:16,228: None
[DEBUG]2024-04-10 07:03:16,228: None
[DEBUG]2024-04-10 07:03:16,228: None
[DEBUG]2024-04-10 07:03:16,228: None
[DEBUG]2024-04-10 07:03:16,228: None
[DEBUG]2024-04-10 07:03:16,228: None
[DEBUG]2024-04-10 07:03:16,228: None
[DEBUG]2024-04-10 07:03:16,228: None
[DEBUG]2024-04-10 07:03:16,228: None
[DEBUG]2024-04-10 07:03:16,228: None
[DEBUG]2024-04-10 07:03:16,228: None
[DEBUG]2024-04-10 07:03:16,228: None
[DEBUG]2024-04-10 07:03:16,228: None
[DEBUG]2024-04-10 07:03:16,229: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:03:16,229: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:03:16,229: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:03:16,229: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:03:16,229: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:03:16,229: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:03:16,229: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:03:16,229: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:03:16,229: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:03:16,229: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:03:16,229: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:03:16,229: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:03:16,229: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:03:16,229: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:03:16,229: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:03:16,229: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:03:16,229: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:03:16,229: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:03:16,230: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:03:16,230: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:03:16,230: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:03:16,230: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:03:16,230: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:03:16,230: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:03:16,230: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:03:16,230: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:03:16,230: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:03:16,230: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:03:16,230: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:03:16,230: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:03:16,230: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:03:16,230: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:03:16,230: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:03:16,230: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:03:16,230: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:03:16,230: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:03:16,230: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:03:16,230: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:03:16,230: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:03:16,230: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:03:16,230: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:03:16,230: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:03:16,230: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:03:16,230: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:03:16,230: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:03:16,230: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:03:16,230: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:03:16,230: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:03:16,230: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:03:16,230: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:03:16,230: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:03:16,230: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:03:16,230: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:03:16,230: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:03:16,231: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 07:03:16,231: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 07:03:16,231: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 07:03:16,231: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 07:03:16,231: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 07:03:16,231: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 07:03:16,231: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 07:03:16,231: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 07:03:16,231: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 07:03:16,231: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 07:03:16,231: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 07:03:16,231: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 07:03:16,231: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 07:03:16,231: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 07:03:16,231: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 07:03:16,231: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 07:03:16,231: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 07:03:16,231: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 07:03:16,231: <re.Match object; span=(1570, 1647), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2024-04-10 07:03:16,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 07:03:16,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 07:03:16,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 07:03:16,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 07:03:16,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 07:03:16,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 07:03:16,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 07:03:16,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 07:03:16,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 07:03:16,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 07:03:16,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 07:03:16,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 07:03:16,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 07:03:16,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 07:03:16,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 07:03:16,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 07:03:16,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 07:03:16,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 07:03:16,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2024-04-10 07:03:16,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 07:03:16,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 07:03:16,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 07:03:16,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 07:03:16,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 07:03:16,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 07:03:16,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 07:03:16,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 07:03:16,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 07:03:16,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 07:03:16,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 07:03:16,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 07:03:16,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 07:03:16,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 07:03:16,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 07:03:16,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 07:03:16,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 07:03:16,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 07:03:16,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2024-04-10 07:13:09,256: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 07:13:09,256: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 07:13:09,256: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 07:13:09,258: None
[DEBUG]2024-04-10 07:13:09,258: None
[DEBUG]2024-04-10 07:13:09,259: None
[DEBUG]2024-04-10 07:13:09,259: None
[DEBUG]2024-04-10 07:13:09,259: None
[DEBUG]2024-04-10 07:13:09,259: None
[DEBUG]2024-04-10 07:13:09,259: None
[DEBUG]2024-04-10 07:13:09,259: None
[DEBUG]2024-04-10 07:13:09,259: None
[DEBUG]2024-04-10 07:13:09,260: None
[DEBUG]2024-04-10 07:13:09,260: None
[DEBUG]2024-04-10 07:13:09,260: None
[DEBUG]2024-04-10 07:13:09,260: None
[DEBUG]2024-04-10 07:13:09,260: None
[DEBUG]2024-04-10 07:13:09,260: None
[DEBUG]2024-04-10 07:13:09,260: None
[DEBUG]2024-04-10 07:13:09,260: None
[DEBUG]2024-04-10 07:13:09,260: None
[DEBUG]2024-04-10 07:13:09,260: None
[DEBUG]2024-04-10 07:13:09,260: None
[DEBUG]2024-04-10 07:13:09,261: None
[DEBUG]2024-04-10 07:13:09,261: None
[DEBUG]2024-04-10 07:13:09,261: None
[DEBUG]2024-04-10 07:13:09,261: None
[DEBUG]2024-04-10 07:13:09,261: None
[DEBUG]2024-04-10 07:13:09,261: None
[DEBUG]2024-04-10 07:13:09,261: None
[DEBUG]2024-04-10 07:13:09,262: None
[DEBUG]2024-04-10 07:13:09,262: None
[DEBUG]2024-04-10 07:13:09,262: None
[DEBUG]2024-04-10 07:13:09,262: None
[DEBUG]2024-04-10 07:13:09,262: None
[DEBUG]2024-04-10 07:13:09,262: None
[DEBUG]2024-04-10 07:13:09,262: None
[DEBUG]2024-04-10 07:13:09,262: None
[DEBUG]2024-04-10 07:13:09,262: None
[DEBUG]2024-04-10 07:13:09,262: None
[DEBUG]2024-04-10 07:13:09,262: None
[DEBUG]2024-04-10 07:13:09,262: None
[DEBUG]2024-04-10 07:13:09,262: None
[DEBUG]2024-04-10 07:13:09,262: None
[DEBUG]2024-04-10 07:13:09,262: None
[DEBUG]2024-04-10 07:13:09,262: None
[DEBUG]2024-04-10 07:13:09,262: None
[DEBUG]2024-04-10 07:13:09,263: None
[DEBUG]2024-04-10 07:13:09,263: None
[DEBUG]2024-04-10 07:13:09,263: None
[DEBUG]2024-04-10 07:13:09,263: None
[DEBUG]2024-04-10 07:13:09,263: None
[DEBUG]2024-04-10 07:13:09,263: None
[DEBUG]2024-04-10 07:13:09,263: None
[DEBUG]2024-04-10 07:13:09,263: None
[DEBUG]2024-04-10 07:13:09,263: None
[DEBUG]2024-04-10 07:13:09,263: None
[DEBUG]2024-04-10 07:13:09,264: None
[DEBUG]2024-04-10 07:13:09,264: None
[DEBUG]2024-04-10 07:13:09,264: None
[DEBUG]2024-04-10 07:13:09,264: None
[DEBUG]2024-04-10 07:13:09,264: None
[DEBUG]2024-04-10 07:13:09,264: None
[DEBUG]2024-04-10 07:13:09,264: None
[DEBUG]2024-04-10 07:13:09,264: None
[DEBUG]2024-04-10 07:13:09,264: None
[DEBUG]2024-04-10 07:13:09,264: None
[DEBUG]2024-04-10 07:13:09,264: None
[DEBUG]2024-04-10 07:13:09,265: None
[DEBUG]2024-04-10 07:13:09,265: None
[DEBUG]2024-04-10 07:13:09,265: None
[DEBUG]2024-04-10 07:13:09,265: None
[DEBUG]2024-04-10 07:13:09,265: None
[DEBUG]2024-04-10 07:13:09,265: None
[DEBUG]2024-04-10 07:13:09,265: None
[DEBUG]2024-04-10 07:13:09,265: None
[DEBUG]2024-04-10 07:13:09,265: None
[DEBUG]2024-04-10 07:13:09,265: None
[DEBUG]2024-04-10 07:13:09,265: None
[DEBUG]2024-04-10 07:13:09,265: None
[DEBUG]2024-04-10 07:13:09,266: None
[DEBUG]2024-04-10 07:13:09,266: None
[DEBUG]2024-04-10 07:13:09,266: None
[DEBUG]2024-04-10 07:13:09,266: None
[DEBUG]2024-04-10 07:13:09,266: None
[DEBUG]2024-04-10 07:13:09,266: None
[DEBUG]2024-04-10 07:13:09,266: None
[DEBUG]2024-04-10 07:13:09,266: None
[DEBUG]2024-04-10 07:13:09,266: None
[DEBUG]2024-04-10 07:13:09,266: None
[DEBUG]2024-04-10 07:13:09,266: None
[DEBUG]2024-04-10 07:13:09,266: None
[DEBUG]2024-04-10 07:13:09,266: None
[DEBUG]2024-04-10 07:13:09,267: None
[DEBUG]2024-04-10 07:13:09,267: None
[DEBUG]2024-04-10 07:13:09,267: None
[DEBUG]2024-04-10 07:13:09,267: None
[DEBUG]2024-04-10 07:13:09,267: None
[DEBUG]2024-04-10 07:13:09,267: None
[DEBUG]2024-04-10 07:13:09,267: None
[DEBUG]2024-04-10 07:13:09,267: None
[DEBUG]2024-04-10 07:13:09,267: None
[DEBUG]2024-04-10 07:13:09,267: None
[DEBUG]2024-04-10 07:13:09,267: None
[DEBUG]2024-04-10 07:13:09,267: None
[DEBUG]2024-04-10 07:13:09,267: None
[DEBUG]2024-04-10 07:13:09,267: None
[DEBUG]2024-04-10 07:13:09,268: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:13:09,268: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:13:09,268: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:13:09,268: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:13:09,268: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:13:09,268: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:13:09,268: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:13:09,268: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:13:09,268: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:13:09,268: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:13:09,268: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:13:09,268: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:13:09,268: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:13:09,268: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:13:09,268: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:13:09,268: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:13:09,268: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:13:09,268: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:13:09,268: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:13:09,268: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:13:09,268: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:13:09,268: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:13:09,268: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:13:09,268: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:13:09,268: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:13:09,268: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:13:09,268: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:13:09,268: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:13:09,268: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:13:09,268: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:13:09,269: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:13:09,269: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:13:09,269: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:13:09,269: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:13:09,269: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:13:09,269: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:13:09,269: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:13:09,269: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:13:09,269: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:13:09,269: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:13:09,269: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:13:09,269: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:13:09,269: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:13:09,269: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:13:09,269: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:13:09,270: None
[DEBUG]2024-04-10 07:13:09,270: None
[DEBUG]2024-04-10 07:13:09,270: None
[DEBUG]2024-04-10 07:13:09,270: None
[DEBUG]2024-04-10 07:13:09,270: None
[DEBUG]2024-04-10 07:13:09,270: None
[DEBUG]2024-04-10 07:13:09,270: None
[DEBUG]2024-04-10 07:13:09,270: None
[DEBUG]2024-04-10 07:13:09,270: None
[DEBUG]2024-04-10 07:13:09,270: None
[DEBUG]2024-04-10 07:13:09,270: None
[DEBUG]2024-04-10 07:13:09,270: None
[DEBUG]2024-04-10 07:13:09,270: None
[DEBUG]2024-04-10 07:13:09,270: None
[DEBUG]2024-04-10 07:13:09,270: None
[DEBUG]2024-04-10 07:13:09,270: None
[DEBUG]2024-04-10 07:13:09,271: None
[DEBUG]2024-04-10 07:13:09,271: None
[DEBUG]2024-04-10 07:13:09,271: None
[DEBUG]2024-04-10 07:13:09,271: None
[DEBUG]2024-04-10 07:13:09,271: None
[DEBUG]2024-04-10 07:13:09,271: None
[DEBUG]2024-04-10 07:13:09,271: None
[DEBUG]2024-04-10 07:13:09,271: None
[DEBUG]2024-04-10 07:13:09,271: None
[DEBUG]2024-04-10 07:13:09,271: None
[DEBUG]2024-04-10 07:13:09,271: None
[DEBUG]2024-04-10 07:13:09,271: None
[DEBUG]2024-04-10 07:13:09,271: None
[DEBUG]2024-04-10 07:13:09,271: None
[DEBUG]2024-04-10 07:13:09,271: None
[DEBUG]2024-04-10 07:13:09,271: None
[DEBUG]2024-04-10 07:13:09,271: None
[DEBUG]2024-04-10 07:13:09,272: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:13:09,272: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:13:09,272: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:13:09,272: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:13:09,272: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:13:09,272: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:13:09,272: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:13:09,272: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:13:09,272: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:13:09,272: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:13:09,272: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:13:09,272: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:13:09,272: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:13:09,272: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:13:09,272: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:13:09,272: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:13:09,272: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:13:09,272: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:13:09,272: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:13:09,272: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:13:09,272: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:13:09,272: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:13:09,272: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:13:09,272: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:13:09,272: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:13:09,272: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:13:09,272: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:13:09,272: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:13:09,272: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:13:09,272: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:13:09,272: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:13:09,272: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:13:09,272: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:13:09,272: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:13:09,272: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:13:09,272: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:13:09,273: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:13:09,273: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:13:09,273: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:13:09,273: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:13:09,273: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:13:09,273: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:13:09,273: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:13:09,273: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:13:09,273: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:13:09,273: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:13:09,273: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:13:09,273: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:13:09,273: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:13:09,273: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:13:09,273: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:13:09,273: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:13:09,273: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:13:09,273: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:13:20,859: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 07:13:20,859: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 07:13:20,859: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 07:13:20,860: None
[DEBUG]2024-04-10 07:13:20,860: None
[DEBUG]2024-04-10 07:13:20,861: None
[DEBUG]2024-04-10 07:13:20,861: None
[DEBUG]2024-04-10 07:13:20,861: None
[DEBUG]2024-04-10 07:13:20,862: None
[DEBUG]2024-04-10 07:13:20,862: None
[DEBUG]2024-04-10 07:13:20,862: None
[DEBUG]2024-04-10 07:13:20,862: None
[DEBUG]2024-04-10 07:13:20,862: None
[DEBUG]2024-04-10 07:13:20,862: None
[DEBUG]2024-04-10 07:13:20,862: None
[DEBUG]2024-04-10 07:13:20,862: None
[DEBUG]2024-04-10 07:13:20,862: None
[DEBUG]2024-04-10 07:13:20,863: None
[DEBUG]2024-04-10 07:13:20,863: None
[DEBUG]2024-04-10 07:13:20,863: None
[DEBUG]2024-04-10 07:13:20,863: None
[DEBUG]2024-04-10 07:13:20,863: None
[DEBUG]2024-04-10 07:13:20,863: None
[DEBUG]2024-04-10 07:13:20,864: None
[DEBUG]2024-04-10 07:13:20,864: None
[DEBUG]2024-04-10 07:13:20,864: None
[DEBUG]2024-04-10 07:13:20,864: None
[DEBUG]2024-04-10 07:13:20,864: None
[DEBUG]2024-04-10 07:13:20,864: None
[DEBUG]2024-04-10 07:13:20,864: None
[DEBUG]2024-04-10 07:13:20,865: None
[DEBUG]2024-04-10 07:13:20,865: None
[DEBUG]2024-04-10 07:13:20,865: None
[DEBUG]2024-04-10 07:13:20,865: None
[DEBUG]2024-04-10 07:13:20,865: None
[DEBUG]2024-04-10 07:13:20,865: None
[DEBUG]2024-04-10 07:13:20,865: None
[DEBUG]2024-04-10 07:13:20,865: None
[DEBUG]2024-04-10 07:13:20,866: None
[DEBUG]2024-04-10 07:13:20,866: None
[DEBUG]2024-04-10 07:13:20,866: None
[DEBUG]2024-04-10 07:13:20,866: None
[DEBUG]2024-04-10 07:13:20,866: None
[DEBUG]2024-04-10 07:13:20,866: None
[DEBUG]2024-04-10 07:13:20,866: None
[DEBUG]2024-04-10 07:13:20,866: None
[DEBUG]2024-04-10 07:13:20,866: None
[DEBUG]2024-04-10 07:13:20,866: None
[DEBUG]2024-04-10 07:13:20,866: None
[DEBUG]2024-04-10 07:13:20,866: None
[DEBUG]2024-04-10 07:13:20,866: None
[DEBUG]2024-04-10 07:13:20,866: None
[DEBUG]2024-04-10 07:13:20,866: None
[DEBUG]2024-04-10 07:13:20,866: None
[DEBUG]2024-04-10 07:13:20,866: None
[DEBUG]2024-04-10 07:13:20,866: None
[DEBUG]2024-04-10 07:13:20,866: None
[DEBUG]2024-04-10 07:13:20,867: None
[DEBUG]2024-04-10 07:13:20,867: None
[DEBUG]2024-04-10 07:13:20,867: None
[DEBUG]2024-04-10 07:13:20,867: None
[DEBUG]2024-04-10 07:13:20,867: None
[DEBUG]2024-04-10 07:13:20,867: None
[DEBUG]2024-04-10 07:13:20,867: None
[DEBUG]2024-04-10 07:13:20,867: None
[DEBUG]2024-04-10 07:13:20,867: None
[DEBUG]2024-04-10 07:13:20,867: None
[DEBUG]2024-04-10 07:13:20,867: None
[DEBUG]2024-04-10 07:13:20,868: None
[DEBUG]2024-04-10 07:13:20,868: None
[DEBUG]2024-04-10 07:13:20,868: None
[DEBUG]2024-04-10 07:13:20,868: None
[DEBUG]2024-04-10 07:13:20,868: None
[DEBUG]2024-04-10 07:13:20,868: None
[DEBUG]2024-04-10 07:13:20,868: None
[DEBUG]2024-04-10 07:13:20,868: None
[DEBUG]2024-04-10 07:13:20,868: None
[DEBUG]2024-04-10 07:13:20,868: None
[DEBUG]2024-04-10 07:13:20,868: None
[DEBUG]2024-04-10 07:13:20,868: None
[DEBUG]2024-04-10 07:13:20,869: None
[DEBUG]2024-04-10 07:13:20,869: None
[DEBUG]2024-04-10 07:13:20,869: None
[DEBUG]2024-04-10 07:13:20,869: None
[DEBUG]2024-04-10 07:13:20,869: None
[DEBUG]2024-04-10 07:13:20,869: None
[DEBUG]2024-04-10 07:13:20,869: None
[DEBUG]2024-04-10 07:13:20,869: None
[DEBUG]2024-04-10 07:13:20,869: None
[DEBUG]2024-04-10 07:13:20,869: None
[DEBUG]2024-04-10 07:13:20,869: None
[DEBUG]2024-04-10 07:13:20,869: None
[DEBUG]2024-04-10 07:13:20,869: None
[DEBUG]2024-04-10 07:13:20,870: None
[DEBUG]2024-04-10 07:13:20,870: None
[DEBUG]2024-04-10 07:13:20,870: None
[DEBUG]2024-04-10 07:13:20,870: None
[DEBUG]2024-04-10 07:13:20,870: None
[DEBUG]2024-04-10 07:13:20,870: None
[DEBUG]2024-04-10 07:13:20,870: None
[DEBUG]2024-04-10 07:13:20,870: None
[DEBUG]2024-04-10 07:13:20,870: None
[DEBUG]2024-04-10 07:13:20,870: None
[DEBUG]2024-04-10 07:13:20,870: None
[DEBUG]2024-04-10 07:13:20,870: None
[DEBUG]2024-04-10 07:13:20,870: None
[DEBUG]2024-04-10 07:13:20,870: None
[DEBUG]2024-04-10 07:13:20,871: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:13:20,871: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:13:20,871: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:13:20,871: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:13:20,871: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:13:20,871: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:13:20,871: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:13:20,871: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:13:20,871: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:13:20,871: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:13:20,871: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:13:20,871: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:13:20,871: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:13:20,871: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:13:20,871: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:13:20,871: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:13:20,871: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:13:20,871: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:13:20,871: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:13:20,871: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:13:20,871: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:13:20,871: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:13:20,871: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:13:20,871: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:13:20,871: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:13:20,871: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:13:20,871: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:13:20,871: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:13:20,871: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:13:20,871: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:13:20,872: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:13:20,872: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:13:20,872: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:13:20,872: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:13:20,872: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:13:20,872: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:13:20,872: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:13:20,872: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:13:20,872: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:13:20,872: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:13:20,872: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:13:20,872: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:13:20,872: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:13:20,872: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:13:20,872: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:13:20,873: None
[DEBUG]2024-04-10 07:13:20,873: None
[DEBUG]2024-04-10 07:13:20,873: None
[DEBUG]2024-04-10 07:13:20,873: None
[DEBUG]2024-04-10 07:13:20,873: None
[DEBUG]2024-04-10 07:13:20,873: None
[DEBUG]2024-04-10 07:13:20,873: None
[DEBUG]2024-04-10 07:13:20,873: None
[DEBUG]2024-04-10 07:13:20,873: None
[DEBUG]2024-04-10 07:13:20,873: None
[DEBUG]2024-04-10 07:13:20,873: None
[DEBUG]2024-04-10 07:13:20,873: None
[DEBUG]2024-04-10 07:13:20,873: None
[DEBUG]2024-04-10 07:13:20,873: None
[DEBUG]2024-04-10 07:13:20,873: None
[DEBUG]2024-04-10 07:13:20,873: None
[DEBUG]2024-04-10 07:13:20,874: None
[DEBUG]2024-04-10 07:13:20,874: None
[DEBUG]2024-04-10 07:13:20,874: None
[DEBUG]2024-04-10 07:13:20,874: None
[DEBUG]2024-04-10 07:13:20,874: None
[DEBUG]2024-04-10 07:13:20,874: None
[DEBUG]2024-04-10 07:13:20,874: None
[DEBUG]2024-04-10 07:13:20,874: None
[DEBUG]2024-04-10 07:13:20,874: None
[DEBUG]2024-04-10 07:13:20,874: None
[DEBUG]2024-04-10 07:13:20,874: None
[DEBUG]2024-04-10 07:13:20,874: None
[DEBUG]2024-04-10 07:13:20,874: None
[DEBUG]2024-04-10 07:13:20,874: None
[DEBUG]2024-04-10 07:13:20,874: None
[DEBUG]2024-04-10 07:13:20,874: None
[DEBUG]2024-04-10 07:13:20,874: None
[DEBUG]2024-04-10 07:13:20,875: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:13:20,875: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:13:20,875: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:13:20,875: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:13:20,875: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:13:20,875: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:13:20,875: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:13:20,875: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:13:20,875: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:13:20,875: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:13:20,875: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:13:20,875: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:13:20,875: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:13:20,875: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:13:20,875: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:13:20,875: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:13:20,875: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:13:20,875: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:13:20,875: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:13:20,875: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:13:20,875: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:13:20,875: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:13:20,875: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:13:20,875: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:13:20,875: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:13:20,875: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:13:20,875: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:13:20,875: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:13:20,875: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:13:20,875: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:13:20,875: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:13:20,875: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:13:20,875: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:13:20,875: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:13:20,875: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:13:20,875: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:13:20,876: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:13:20,876: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:13:20,876: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:13:20,876: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:13:20,876: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:13:20,876: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:13:20,876: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:13:20,876: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:13:20,876: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:13:20,876: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:13:20,876: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:13:20,876: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:13:20,876: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:13:20,876: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:13:20,876: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:13:20,876: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:13:20,876: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:13:20,876: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:16:47,732: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 07:16:47,732: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 07:16:47,732: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 07:16:47,734: None
[DEBUG]2024-04-10 07:16:47,734: None
[DEBUG]2024-04-10 07:16:47,734: None
[DEBUG]2024-04-10 07:16:47,734: None
[DEBUG]2024-04-10 07:16:47,734: None
[DEBUG]2024-04-10 07:16:47,735: None
[DEBUG]2024-04-10 07:16:47,735: None
[DEBUG]2024-04-10 07:16:47,735: None
[DEBUG]2024-04-10 07:16:47,735: None
[DEBUG]2024-04-10 07:16:47,736: None
[DEBUG]2024-04-10 07:16:47,736: None
[DEBUG]2024-04-10 07:16:47,736: None
[DEBUG]2024-04-10 07:16:47,736: None
[DEBUG]2024-04-10 07:16:47,736: None
[DEBUG]2024-04-10 07:16:47,737: None
[DEBUG]2024-04-10 07:16:47,737: None
[DEBUG]2024-04-10 07:16:47,737: None
[DEBUG]2024-04-10 07:16:47,737: None
[DEBUG]2024-04-10 07:16:47,737: None
[DEBUG]2024-04-10 07:16:47,737: None
[DEBUG]2024-04-10 07:16:47,737: None
[DEBUG]2024-04-10 07:16:47,737: None
[DEBUG]2024-04-10 07:16:47,737: None
[DEBUG]2024-04-10 07:16:47,737: None
[DEBUG]2024-04-10 07:16:47,737: None
[DEBUG]2024-04-10 07:16:47,737: None
[DEBUG]2024-04-10 07:16:47,737: None
[DEBUG]2024-04-10 07:16:47,738: None
[DEBUG]2024-04-10 07:16:47,738: None
[DEBUG]2024-04-10 07:16:47,738: None
[DEBUG]2024-04-10 07:16:47,738: None
[DEBUG]2024-04-10 07:16:47,738: None
[DEBUG]2024-04-10 07:16:47,738: None
[DEBUG]2024-04-10 07:16:47,738: None
[DEBUG]2024-04-10 07:16:47,738: None
[DEBUG]2024-04-10 07:16:47,739: None
[DEBUG]2024-04-10 07:16:47,739: None
[DEBUG]2024-04-10 07:16:47,739: None
[DEBUG]2024-04-10 07:16:47,739: None
[DEBUG]2024-04-10 07:16:47,739: None
[DEBUG]2024-04-10 07:16:47,739: None
[DEBUG]2024-04-10 07:16:47,739: None
[DEBUG]2024-04-10 07:16:47,739: None
[DEBUG]2024-04-10 07:16:47,739: None
[DEBUG]2024-04-10 07:16:47,740: None
[DEBUG]2024-04-10 07:16:47,740: None
[DEBUG]2024-04-10 07:16:47,740: None
[DEBUG]2024-04-10 07:16:47,740: None
[DEBUG]2024-04-10 07:16:47,740: None
[DEBUG]2024-04-10 07:16:47,740: None
[DEBUG]2024-04-10 07:16:47,740: None
[DEBUG]2024-04-10 07:16:47,740: None
[DEBUG]2024-04-10 07:16:47,740: None
[DEBUG]2024-04-10 07:16:47,740: None
[DEBUG]2024-04-10 07:16:47,741: None
[DEBUG]2024-04-10 07:16:47,741: None
[DEBUG]2024-04-10 07:16:47,741: None
[DEBUG]2024-04-10 07:16:47,741: None
[DEBUG]2024-04-10 07:16:47,741: None
[DEBUG]2024-04-10 07:16:47,741: None
[DEBUG]2024-04-10 07:16:47,741: None
[DEBUG]2024-04-10 07:16:47,741: None
[DEBUG]2024-04-10 07:16:47,741: None
[DEBUG]2024-04-10 07:16:47,741: None
[DEBUG]2024-04-10 07:16:47,741: None
[DEBUG]2024-04-10 07:16:47,741: None
[DEBUG]2024-04-10 07:16:47,741: None
[DEBUG]2024-04-10 07:16:47,741: None
[DEBUG]2024-04-10 07:16:47,741: None
[DEBUG]2024-04-10 07:16:47,741: None
[DEBUG]2024-04-10 07:16:47,741: None
[DEBUG]2024-04-10 07:16:47,741: None
[DEBUG]2024-04-10 07:16:47,741: None
[DEBUG]2024-04-10 07:16:47,741: None
[DEBUG]2024-04-10 07:16:47,741: None
[DEBUG]2024-04-10 07:16:47,741: None
[DEBUG]2024-04-10 07:16:47,741: None
[DEBUG]2024-04-10 07:16:47,742: None
[DEBUG]2024-04-10 07:16:47,742: None
[DEBUG]2024-04-10 07:16:47,742: None
[DEBUG]2024-04-10 07:16:47,742: None
[DEBUG]2024-04-10 07:16:47,742: None
[DEBUG]2024-04-10 07:16:47,742: None
[DEBUG]2024-04-10 07:16:47,742: None
[DEBUG]2024-04-10 07:16:47,742: None
[DEBUG]2024-04-10 07:16:47,742: None
[DEBUG]2024-04-10 07:16:47,742: None
[DEBUG]2024-04-10 07:16:47,742: None
[DEBUG]2024-04-10 07:16:47,742: None
[DEBUG]2024-04-10 07:16:47,742: None
[DEBUG]2024-04-10 07:16:47,743: None
[DEBUG]2024-04-10 07:16:47,743: None
[DEBUG]2024-04-10 07:16:47,743: None
[DEBUG]2024-04-10 07:16:47,743: None
[DEBUG]2024-04-10 07:16:47,743: None
[DEBUG]2024-04-10 07:16:47,743: None
[DEBUG]2024-04-10 07:16:47,743: None
[DEBUG]2024-04-10 07:16:47,743: None
[DEBUG]2024-04-10 07:16:47,743: None
[DEBUG]2024-04-10 07:16:47,743: None
[DEBUG]2024-04-10 07:16:47,743: None
[DEBUG]2024-04-10 07:16:47,743: None
[DEBUG]2024-04-10 07:16:47,743: None
[DEBUG]2024-04-10 07:16:47,743: None
[DEBUG]2024-04-10 07:16:47,744: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:16:47,744: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:16:47,744: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:16:47,744: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:16:47,744: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:16:47,744: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:16:47,744: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:16:47,744: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:16:47,744: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:16:47,744: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:16:47,744: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:16:47,744: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:16:47,744: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:16:47,744: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:16:47,744: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:16:47,745: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:16:47,745: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:16:47,745: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:16:47,745: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:16:47,745: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:16:47,745: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:16:47,745: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:16:47,745: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:16:47,745: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:16:47,745: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:16:47,745: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:16:47,745: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:16:47,745: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:16:47,745: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:16:47,745: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:16:47,745: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:16:47,745: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:16:47,745: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:16:47,745: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:16:47,745: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:16:47,745: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:16:47,745: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:16:47,745: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:16:47,745: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:16:47,745: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:16:47,745: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:16:47,745: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:16:47,745: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:16:47,745: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:16:47,745: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:16:47,746: None
[DEBUG]2024-04-10 07:16:47,746: None
[DEBUG]2024-04-10 07:16:47,746: None
[DEBUG]2024-04-10 07:16:47,746: None
[DEBUG]2024-04-10 07:16:47,746: None
[DEBUG]2024-04-10 07:16:47,746: None
[DEBUG]2024-04-10 07:16:47,746: None
[DEBUG]2024-04-10 07:16:47,746: None
[DEBUG]2024-04-10 07:16:47,746: None
[DEBUG]2024-04-10 07:16:47,746: None
[DEBUG]2024-04-10 07:16:47,746: None
[DEBUG]2024-04-10 07:16:47,746: None
[DEBUG]2024-04-10 07:16:47,746: None
[DEBUG]2024-04-10 07:16:47,746: None
[DEBUG]2024-04-10 07:16:47,746: None
[DEBUG]2024-04-10 07:16:47,746: None
[DEBUG]2024-04-10 07:16:47,747: None
[DEBUG]2024-04-10 07:16:47,747: None
[DEBUG]2024-04-10 07:16:47,747: None
[DEBUG]2024-04-10 07:16:47,747: None
[DEBUG]2024-04-10 07:16:47,747: None
[DEBUG]2024-04-10 07:16:47,747: None
[DEBUG]2024-04-10 07:16:47,747: None
[DEBUG]2024-04-10 07:16:47,747: None
[DEBUG]2024-04-10 07:16:47,747: None
[DEBUG]2024-04-10 07:16:47,747: None
[DEBUG]2024-04-10 07:16:47,747: None
[DEBUG]2024-04-10 07:16:47,747: None
[DEBUG]2024-04-10 07:16:47,747: None
[DEBUG]2024-04-10 07:16:47,747: None
[DEBUG]2024-04-10 07:16:47,747: None
[DEBUG]2024-04-10 07:16:47,747: None
[DEBUG]2024-04-10 07:16:47,747: None
[DEBUG]2024-04-10 07:16:47,748: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:16:47,748: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:16:47,748: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:16:47,748: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:16:47,748: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:16:47,748: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:16:47,748: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:16:47,748: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:16:47,748: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:16:47,748: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:16:47,748: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:16:47,748: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:16:47,748: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:16:47,748: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:16:47,748: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:16:47,748: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:16:47,748: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:16:47,748: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:16:47,749: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:16:47,749: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:16:47,749: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:16:47,749: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:16:47,749: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:16:47,749: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:16:47,749: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:16:47,749: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:16:47,749: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:16:47,749: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:16:47,749: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:16:47,749: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:16:47,749: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:16:47,749: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:16:47,749: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:16:47,749: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:16:47,749: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:16:47,749: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:16:47,749: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:16:47,749: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:16:47,749: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:16:47,749: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:16:47,749: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:16:47,749: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:16:47,749: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:16:47,749: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:16:47,749: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:16:47,749: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:16:47,749: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:16:47,749: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:16:47,749: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:16:47,749: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:16:47,749: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:16:47,749: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:16:47,749: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:16:47,749: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:19:12,775: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 07:19:12,775: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 07:19:12,775: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 07:19:12,777: None
[DEBUG]2024-04-10 07:19:12,777: None
[DEBUG]2024-04-10 07:19:12,778: None
[DEBUG]2024-04-10 07:19:12,778: None
[DEBUG]2024-04-10 07:19:12,778: None
[DEBUG]2024-04-10 07:19:12,778: None
[DEBUG]2024-04-10 07:19:12,778: None
[DEBUG]2024-04-10 07:19:12,778: None
[DEBUG]2024-04-10 07:19:12,778: None
[DEBUG]2024-04-10 07:19:12,779: None
[DEBUG]2024-04-10 07:19:12,779: None
[DEBUG]2024-04-10 07:19:12,779: None
[DEBUG]2024-04-10 07:19:12,779: None
[DEBUG]2024-04-10 07:19:12,779: None
[DEBUG]2024-04-10 07:19:12,780: None
[DEBUG]2024-04-10 07:19:12,780: None
[DEBUG]2024-04-10 07:19:12,780: None
[DEBUG]2024-04-10 07:19:12,780: None
[DEBUG]2024-04-10 07:19:12,780: None
[DEBUG]2024-04-10 07:19:12,780: None
[DEBUG]2024-04-10 07:19:12,780: None
[DEBUG]2024-04-10 07:19:12,780: None
[DEBUG]2024-04-10 07:19:12,780: None
[DEBUG]2024-04-10 07:19:12,780: None
[DEBUG]2024-04-10 07:19:12,780: None
[DEBUG]2024-04-10 07:19:12,780: None
[DEBUG]2024-04-10 07:19:12,780: None
[DEBUG]2024-04-10 07:19:12,781: None
[DEBUG]2024-04-10 07:19:12,781: None
[DEBUG]2024-04-10 07:19:12,781: None
[DEBUG]2024-04-10 07:19:12,781: None
[DEBUG]2024-04-10 07:19:12,781: None
[DEBUG]2024-04-10 07:19:12,781: None
[DEBUG]2024-04-10 07:19:12,781: None
[DEBUG]2024-04-10 07:19:12,781: None
[DEBUG]2024-04-10 07:19:12,782: None
[DEBUG]2024-04-10 07:19:12,782: None
[DEBUG]2024-04-10 07:19:12,782: None
[DEBUG]2024-04-10 07:19:12,782: None
[DEBUG]2024-04-10 07:19:12,782: None
[DEBUG]2024-04-10 07:19:12,782: None
[DEBUG]2024-04-10 07:19:12,782: None
[DEBUG]2024-04-10 07:19:12,782: None
[DEBUG]2024-04-10 07:19:12,782: None
[DEBUG]2024-04-10 07:19:12,783: None
[DEBUG]2024-04-10 07:19:12,783: None
[DEBUG]2024-04-10 07:19:12,783: None
[DEBUG]2024-04-10 07:19:12,783: None
[DEBUG]2024-04-10 07:19:12,783: None
[DEBUG]2024-04-10 07:19:12,783: None
[DEBUG]2024-04-10 07:19:12,783: None
[DEBUG]2024-04-10 07:19:12,783: None
[DEBUG]2024-04-10 07:19:12,783: None
[DEBUG]2024-04-10 07:19:12,783: None
[DEBUG]2024-04-10 07:19:12,784: None
[DEBUG]2024-04-10 07:19:12,784: None
[DEBUG]2024-04-10 07:19:12,784: None
[DEBUG]2024-04-10 07:19:12,784: None
[DEBUG]2024-04-10 07:19:12,784: None
[DEBUG]2024-04-10 07:19:12,784: None
[DEBUG]2024-04-10 07:19:12,784: None
[DEBUG]2024-04-10 07:19:12,784: None
[DEBUG]2024-04-10 07:19:12,784: None
[DEBUG]2024-04-10 07:19:12,784: None
[DEBUG]2024-04-10 07:19:12,784: None
[DEBUG]2024-04-10 07:19:12,785: None
[DEBUG]2024-04-10 07:19:12,785: None
[DEBUG]2024-04-10 07:19:12,785: None
[DEBUG]2024-04-10 07:19:12,785: None
[DEBUG]2024-04-10 07:19:12,785: None
[DEBUG]2024-04-10 07:19:12,785: None
[DEBUG]2024-04-10 07:19:12,785: None
[DEBUG]2024-04-10 07:19:12,785: None
[DEBUG]2024-04-10 07:19:12,785: None
[DEBUG]2024-04-10 07:19:12,785: None
[DEBUG]2024-04-10 07:19:12,785: None
[DEBUG]2024-04-10 07:19:12,785: None
[DEBUG]2024-04-10 07:19:12,786: None
[DEBUG]2024-04-10 07:19:12,786: None
[DEBUG]2024-04-10 07:19:12,786: None
[DEBUG]2024-04-10 07:19:12,786: None
[DEBUG]2024-04-10 07:19:12,786: None
[DEBUG]2024-04-10 07:19:12,786: None
[DEBUG]2024-04-10 07:19:12,786: None
[DEBUG]2024-04-10 07:19:12,786: None
[DEBUG]2024-04-10 07:19:12,786: None
[DEBUG]2024-04-10 07:19:12,786: None
[DEBUG]2024-04-10 07:19:12,786: None
[DEBUG]2024-04-10 07:19:12,786: None
[DEBUG]2024-04-10 07:19:12,786: None
[DEBUG]2024-04-10 07:19:12,787: None
[DEBUG]2024-04-10 07:19:12,787: None
[DEBUG]2024-04-10 07:19:12,787: None
[DEBUG]2024-04-10 07:19:12,787: None
[DEBUG]2024-04-10 07:19:12,787: None
[DEBUG]2024-04-10 07:19:12,787: None
[DEBUG]2024-04-10 07:19:12,787: None
[DEBUG]2024-04-10 07:19:12,787: None
[DEBUG]2024-04-10 07:19:12,787: None
[DEBUG]2024-04-10 07:19:12,787: None
[DEBUG]2024-04-10 07:19:12,787: None
[DEBUG]2024-04-10 07:19:12,787: None
[DEBUG]2024-04-10 07:19:12,787: None
[DEBUG]2024-04-10 07:19:12,787: None
[DEBUG]2024-04-10 07:19:12,788: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:19:12,788: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:19:12,788: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:19:12,788: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:19:12,788: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:19:12,788: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:19:12,788: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:19:12,788: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:19:12,788: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:19:12,788: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:19:12,788: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:19:12,788: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:19:12,788: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:19:12,788: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:19:12,788: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:19:12,788: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:19:12,788: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:19:12,788: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:19:12,788: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:19:12,788: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:19:12,788: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:19:12,788: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:19:12,788: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:19:12,788: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:19:12,788: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:19:12,788: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:19:12,788: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:19:12,788: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:19:12,788: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:19:12,788: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:19:12,788: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:19:12,788: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:19:12,788: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:19:12,788: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:19:12,788: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:19:12,788: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:19:12,788: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:19:12,788: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:19:12,788: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:19:12,788: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:19:12,788: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:19:12,788: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:19:12,788: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:19:12,788: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:19:12,788: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:19:12,790: None
[DEBUG]2024-04-10 07:19:12,790: None
[DEBUG]2024-04-10 07:19:12,790: None
[DEBUG]2024-04-10 07:19:12,790: None
[DEBUG]2024-04-10 07:19:12,790: None
[DEBUG]2024-04-10 07:19:12,790: None
[DEBUG]2024-04-10 07:19:12,790: None
[DEBUG]2024-04-10 07:19:12,790: None
[DEBUG]2024-04-10 07:19:12,790: None
[DEBUG]2024-04-10 07:19:12,790: None
[DEBUG]2024-04-10 07:19:12,790: None
[DEBUG]2024-04-10 07:19:12,790: None
[DEBUG]2024-04-10 07:19:12,790: None
[DEBUG]2024-04-10 07:19:12,790: None
[DEBUG]2024-04-10 07:19:12,790: None
[DEBUG]2024-04-10 07:19:12,790: None
[DEBUG]2024-04-10 07:19:12,791: None
[DEBUG]2024-04-10 07:19:12,791: None
[DEBUG]2024-04-10 07:19:12,791: None
[DEBUG]2024-04-10 07:19:12,791: None
[DEBUG]2024-04-10 07:19:12,791: None
[DEBUG]2024-04-10 07:19:12,791: None
[DEBUG]2024-04-10 07:19:12,791: None
[DEBUG]2024-04-10 07:19:12,791: None
[DEBUG]2024-04-10 07:19:12,791: None
[DEBUG]2024-04-10 07:19:12,791: None
[DEBUG]2024-04-10 07:19:12,791: None
[DEBUG]2024-04-10 07:19:12,791: None
[DEBUG]2024-04-10 07:19:12,791: None
[DEBUG]2024-04-10 07:19:12,791: None
[DEBUG]2024-04-10 07:19:12,791: None
[DEBUG]2024-04-10 07:19:12,791: None
[DEBUG]2024-04-10 07:19:12,791: None
[DEBUG]2024-04-10 07:19:12,792: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:19:12,792: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:19:12,792: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:19:12,792: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:19:12,792: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:19:12,792: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:19:12,792: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:19:12,792: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:19:12,792: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:19:12,792: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:19:12,792: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:19:12,792: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:19:12,792: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:19:12,792: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:19:12,792: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:19:12,792: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:19:12,792: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:19:12,792: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:19:12,792: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:19:12,792: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:19:12,792: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:19:12,792: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:19:12,792: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:19:12,792: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:19:12,792: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:19:12,792: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:19:12,792: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:19:12,792: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:19:12,792: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:19:12,792: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:19:12,792: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:19:12,792: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:19:12,792: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:19:12,792: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:19:12,792: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:19:12,792: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:19:12,793: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:19:12,793: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:19:12,793: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:19:12,793: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:19:12,793: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:19:12,793: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:19:12,793: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:19:12,793: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:19:12,793: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:19:12,793: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:19:12,793: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:19:12,793: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:19:12,793: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:19:12,793: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:19:12,793: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:19:12,793: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:19:12,793: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:19:12,793: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:22:53,253: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 07:22:53,253: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 07:22:53,254: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 07:22:53,256: None
[DEBUG]2024-04-10 07:22:53,256: None
[DEBUG]2024-04-10 07:22:53,256: None
[DEBUG]2024-04-10 07:22:53,256: None
[DEBUG]2024-04-10 07:22:53,256: None
[DEBUG]2024-04-10 07:22:53,257: None
[DEBUG]2024-04-10 07:22:53,257: None
[DEBUG]2024-04-10 07:22:53,257: None
[DEBUG]2024-04-10 07:22:53,257: None
[DEBUG]2024-04-10 07:22:53,258: None
[DEBUG]2024-04-10 07:22:53,258: None
[DEBUG]2024-04-10 07:22:53,258: None
[DEBUG]2024-04-10 07:22:53,258: None
[DEBUG]2024-04-10 07:22:53,258: None
[DEBUG]2024-04-10 07:22:53,258: None
[DEBUG]2024-04-10 07:22:53,258: None
[DEBUG]2024-04-10 07:22:53,258: None
[DEBUG]2024-04-10 07:22:53,258: None
[DEBUG]2024-04-10 07:22:53,258: None
[DEBUG]2024-04-10 07:22:53,258: None
[DEBUG]2024-04-10 07:22:53,259: None
[DEBUG]2024-04-10 07:22:53,259: None
[DEBUG]2024-04-10 07:22:53,259: None
[DEBUG]2024-04-10 07:22:53,259: None
[DEBUG]2024-04-10 07:22:53,259: None
[DEBUG]2024-04-10 07:22:53,259: None
[DEBUG]2024-04-10 07:22:53,259: None
[DEBUG]2024-04-10 07:22:53,260: None
[DEBUG]2024-04-10 07:22:53,260: None
[DEBUG]2024-04-10 07:22:53,260: None
[DEBUG]2024-04-10 07:22:53,260: None
[DEBUG]2024-04-10 07:22:53,260: None
[DEBUG]2024-04-10 07:22:53,260: None
[DEBUG]2024-04-10 07:22:53,260: None
[DEBUG]2024-04-10 07:22:53,260: None
[DEBUG]2024-04-10 07:22:53,260: None
[DEBUG]2024-04-10 07:22:53,260: None
[DEBUG]2024-04-10 07:22:53,260: None
[DEBUG]2024-04-10 07:22:53,260: None
[DEBUG]2024-04-10 07:22:53,260: None
[DEBUG]2024-04-10 07:22:53,260: None
[DEBUG]2024-04-10 07:22:53,260: None
[DEBUG]2024-04-10 07:22:53,260: None
[DEBUG]2024-04-10 07:22:53,260: None
[DEBUG]2024-04-10 07:22:53,261: None
[DEBUG]2024-04-10 07:22:53,261: None
[DEBUG]2024-04-10 07:22:53,261: None
[DEBUG]2024-04-10 07:22:53,261: None
[DEBUG]2024-04-10 07:22:53,261: None
[DEBUG]2024-04-10 07:22:53,261: None
[DEBUG]2024-04-10 07:22:53,261: None
[DEBUG]2024-04-10 07:22:53,261: None
[DEBUG]2024-04-10 07:22:53,261: None
[DEBUG]2024-04-10 07:22:53,261: None
[DEBUG]2024-04-10 07:22:53,262: None
[DEBUG]2024-04-10 07:22:53,262: None
[DEBUG]2024-04-10 07:22:53,262: None
[DEBUG]2024-04-10 07:22:53,262: None
[DEBUG]2024-04-10 07:22:53,262: None
[DEBUG]2024-04-10 07:22:53,262: None
[DEBUG]2024-04-10 07:22:53,262: None
[DEBUG]2024-04-10 07:22:53,262: None
[DEBUG]2024-04-10 07:22:53,262: None
[DEBUG]2024-04-10 07:22:53,262: None
[DEBUG]2024-04-10 07:22:53,262: None
[DEBUG]2024-04-10 07:22:53,263: None
[DEBUG]2024-04-10 07:22:53,263: None
[DEBUG]2024-04-10 07:22:53,263: None
[DEBUG]2024-04-10 07:22:53,263: None
[DEBUG]2024-04-10 07:22:53,263: None
[DEBUG]2024-04-10 07:22:53,263: None
[DEBUG]2024-04-10 07:22:53,263: None
[DEBUG]2024-04-10 07:22:53,263: None
[DEBUG]2024-04-10 07:22:53,263: None
[DEBUG]2024-04-10 07:22:53,263: None
[DEBUG]2024-04-10 07:22:53,263: None
[DEBUG]2024-04-10 07:22:53,263: None
[DEBUG]2024-04-10 07:22:53,265: None
[DEBUG]2024-04-10 07:22:53,265: None
[DEBUG]2024-04-10 07:22:53,265: None
[DEBUG]2024-04-10 07:22:53,265: None
[DEBUG]2024-04-10 07:22:53,265: None
[DEBUG]2024-04-10 07:22:53,265: None
[DEBUG]2024-04-10 07:22:53,265: None
[DEBUG]2024-04-10 07:22:53,265: None
[DEBUG]2024-04-10 07:22:53,265: None
[DEBUG]2024-04-10 07:22:53,265: None
[DEBUG]2024-04-10 07:22:53,265: None
[DEBUG]2024-04-10 07:22:53,265: None
[DEBUG]2024-04-10 07:22:53,265: None
[DEBUG]2024-04-10 07:22:53,265: None
[DEBUG]2024-04-10 07:22:53,265: None
[DEBUG]2024-04-10 07:22:53,265: None
[DEBUG]2024-04-10 07:22:53,265: None
[DEBUG]2024-04-10 07:22:53,265: None
[DEBUG]2024-04-10 07:22:53,265: None
[DEBUG]2024-04-10 07:22:53,265: None
[DEBUG]2024-04-10 07:22:53,265: None
[DEBUG]2024-04-10 07:22:53,265: None
[DEBUG]2024-04-10 07:22:53,265: None
[DEBUG]2024-04-10 07:22:53,265: None
[DEBUG]2024-04-10 07:22:53,265: None
[DEBUG]2024-04-10 07:22:53,265: None
[DEBUG]2024-04-10 07:22:53,265: None
[DEBUG]2024-04-10 07:22:53,266: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:22:53,266: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:22:53,266: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:22:53,266: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:22:53,266: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:22:53,266: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:22:53,266: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:22:53,266: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:22:53,266: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:22:53,266: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:22:53,266: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:22:53,266: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:22:53,266: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:22:53,266: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:22:53,266: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:22:53,267: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:22:53,267: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:22:53,267: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:22:53,267: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:22:53,267: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:22:53,267: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:22:53,267: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:22:53,267: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:22:53,267: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:22:53,267: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:22:53,267: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:22:53,267: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:22:53,267: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:22:53,267: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:22:53,267: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:22:53,267: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:22:53,267: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:22:53,267: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:22:53,267: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:22:53,267: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:22:53,267: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:22:53,267: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:22:53,267: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:22:53,267: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:22:53,267: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:22:53,267: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:22:53,267: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:22:53,267: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:22:53,267: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:22:53,267: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:22:53,269: None
[DEBUG]2024-04-10 07:22:53,269: None
[DEBUG]2024-04-10 07:22:53,269: None
[DEBUG]2024-04-10 07:22:53,269: None
[DEBUG]2024-04-10 07:22:53,269: None
[DEBUG]2024-04-10 07:22:53,269: None
[DEBUG]2024-04-10 07:22:53,269: None
[DEBUG]2024-04-10 07:22:53,269: None
[DEBUG]2024-04-10 07:22:53,269: None
[DEBUG]2024-04-10 07:22:53,269: None
[DEBUG]2024-04-10 07:22:53,269: None
[DEBUG]2024-04-10 07:22:53,269: None
[DEBUG]2024-04-10 07:22:53,269: None
[DEBUG]2024-04-10 07:22:53,269: None
[DEBUG]2024-04-10 07:22:53,269: None
[DEBUG]2024-04-10 07:22:53,269: None
[DEBUG]2024-04-10 07:22:53,270: None
[DEBUG]2024-04-10 07:22:53,270: None
[DEBUG]2024-04-10 07:22:53,270: None
[DEBUG]2024-04-10 07:22:53,270: None
[DEBUG]2024-04-10 07:22:53,270: None
[DEBUG]2024-04-10 07:22:53,270: None
[DEBUG]2024-04-10 07:22:53,270: None
[DEBUG]2024-04-10 07:22:53,270: None
[DEBUG]2024-04-10 07:22:53,270: None
[DEBUG]2024-04-10 07:22:53,270: None
[DEBUG]2024-04-10 07:22:53,270: None
[DEBUG]2024-04-10 07:22:53,270: None
[DEBUG]2024-04-10 07:22:53,270: None
[DEBUG]2024-04-10 07:22:53,270: None
[DEBUG]2024-04-10 07:22:53,270: None
[DEBUG]2024-04-10 07:22:53,270: None
[DEBUG]2024-04-10 07:22:53,270: None
[DEBUG]2024-04-10 07:22:53,271: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:22:53,271: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:22:53,271: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:22:53,271: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:22:53,271: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:22:53,271: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:22:53,271: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:22:53,271: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:22:53,271: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:22:53,271: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:22:53,271: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:22:53,271: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:22:53,271: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:22:53,271: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:22:53,271: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:22:53,271: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:22:53,271: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:22:53,271: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:22:53,272: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:22:53,272: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:22:53,272: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:22:53,272: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:22:53,272: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:22:53,272: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:22:53,272: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:22:53,272: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:22:53,272: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:22:53,272: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:22:53,272: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:22:53,272: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:22:53,272: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:22:53,272: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:22:53,272: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:22:53,272: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:22:53,272: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:22:53,272: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:22:53,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:22:53,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:22:53,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:22:53,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:22:53,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:22:53,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:22:53,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:22:53,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:22:53,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:22:53,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:22:53,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:22:53,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:22:53,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:22:53,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:22:53,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:22:53,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:22:53,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:22:53,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:23:30,718: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 07:23:30,718: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 07:23:30,718: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 07:23:30,719: None
[DEBUG]2024-04-10 07:23:30,719: None
[DEBUG]2024-04-10 07:23:30,720: None
[DEBUG]2024-04-10 07:23:30,720: None
[DEBUG]2024-04-10 07:23:30,720: None
[DEBUG]2024-04-10 07:23:30,721: None
[DEBUG]2024-04-10 07:23:30,721: None
[DEBUG]2024-04-10 07:23:30,721: None
[DEBUG]2024-04-10 07:23:30,721: None
[DEBUG]2024-04-10 07:23:30,721: None
[DEBUG]2024-04-10 07:23:30,721: None
[DEBUG]2024-04-10 07:23:30,721: None
[DEBUG]2024-04-10 07:23:30,721: None
[DEBUG]2024-04-10 07:23:30,721: None
[DEBUG]2024-04-10 07:23:30,722: None
[DEBUG]2024-04-10 07:23:30,722: None
[DEBUG]2024-04-10 07:23:30,722: None
[DEBUG]2024-04-10 07:23:30,722: None
[DEBUG]2024-04-10 07:23:30,722: None
[DEBUG]2024-04-10 07:23:30,722: None
[DEBUG]2024-04-10 07:23:30,723: None
[DEBUG]2024-04-10 07:23:30,723: None
[DEBUG]2024-04-10 07:23:30,723: None
[DEBUG]2024-04-10 07:23:30,723: None
[DEBUG]2024-04-10 07:23:30,723: None
[DEBUG]2024-04-10 07:23:30,723: None
[DEBUG]2024-04-10 07:23:30,723: None
[DEBUG]2024-04-10 07:23:30,723: None
[DEBUG]2024-04-10 07:23:30,723: None
[DEBUG]2024-04-10 07:23:30,723: None
[DEBUG]2024-04-10 07:23:30,723: None
[DEBUG]2024-04-10 07:23:30,723: None
[DEBUG]2024-04-10 07:23:30,723: None
[DEBUG]2024-04-10 07:23:30,723: None
[DEBUG]2024-04-10 07:23:30,723: None
[DEBUG]2024-04-10 07:23:30,724: None
[DEBUG]2024-04-10 07:23:30,724: None
[DEBUG]2024-04-10 07:23:30,724: None
[DEBUG]2024-04-10 07:23:30,724: None
[DEBUG]2024-04-10 07:23:30,724: None
[DEBUG]2024-04-10 07:23:30,724: None
[DEBUG]2024-04-10 07:23:30,724: None
[DEBUG]2024-04-10 07:23:30,724: None
[DEBUG]2024-04-10 07:23:30,724: None
[DEBUG]2024-04-10 07:23:30,725: None
[DEBUG]2024-04-10 07:23:30,725: None
[DEBUG]2024-04-10 07:23:30,725: None
[DEBUG]2024-04-10 07:23:30,725: None
[DEBUG]2024-04-10 07:23:30,725: None
[DEBUG]2024-04-10 07:23:30,725: None
[DEBUG]2024-04-10 07:23:30,725: None
[DEBUG]2024-04-10 07:23:30,725: None
[DEBUG]2024-04-10 07:23:30,725: None
[DEBUG]2024-04-10 07:23:30,725: None
[DEBUG]2024-04-10 07:23:30,726: None
[DEBUG]2024-04-10 07:23:30,726: None
[DEBUG]2024-04-10 07:23:30,726: None
[DEBUG]2024-04-10 07:23:30,726: None
[DEBUG]2024-04-10 07:23:30,726: None
[DEBUG]2024-04-10 07:23:30,726: None
[DEBUG]2024-04-10 07:23:30,726: None
[DEBUG]2024-04-10 07:23:30,726: None
[DEBUG]2024-04-10 07:23:30,726: None
[DEBUG]2024-04-10 07:23:30,726: None
[DEBUG]2024-04-10 07:23:30,726: None
[DEBUG]2024-04-10 07:23:30,727: None
[DEBUG]2024-04-10 07:23:30,727: None
[DEBUG]2024-04-10 07:23:30,727: None
[DEBUG]2024-04-10 07:23:30,727: None
[DEBUG]2024-04-10 07:23:30,727: None
[DEBUG]2024-04-10 07:23:30,727: None
[DEBUG]2024-04-10 07:23:30,727: None
[DEBUG]2024-04-10 07:23:30,727: None
[DEBUG]2024-04-10 07:23:30,727: None
[DEBUG]2024-04-10 07:23:30,727: None
[DEBUG]2024-04-10 07:23:30,727: None
[DEBUG]2024-04-10 07:23:30,727: None
[DEBUG]2024-04-10 07:23:30,727: None
[DEBUG]2024-04-10 07:23:30,727: None
[DEBUG]2024-04-10 07:23:30,727: None
[DEBUG]2024-04-10 07:23:30,727: None
[DEBUG]2024-04-10 07:23:30,727: None
[DEBUG]2024-04-10 07:23:30,727: None
[DEBUG]2024-04-10 07:23:30,727: None
[DEBUG]2024-04-10 07:23:30,727: None
[DEBUG]2024-04-10 07:23:30,727: None
[DEBUG]2024-04-10 07:23:30,727: None
[DEBUG]2024-04-10 07:23:30,727: None
[DEBUG]2024-04-10 07:23:30,727: None
[DEBUG]2024-04-10 07:23:30,727: None
[DEBUG]2024-04-10 07:23:30,728: None
[DEBUG]2024-04-10 07:23:30,728: None
[DEBUG]2024-04-10 07:23:30,728: None
[DEBUG]2024-04-10 07:23:30,728: None
[DEBUG]2024-04-10 07:23:30,728: None
[DEBUG]2024-04-10 07:23:30,728: None
[DEBUG]2024-04-10 07:23:30,728: None
[DEBUG]2024-04-10 07:23:30,728: None
[DEBUG]2024-04-10 07:23:30,728: None
[DEBUG]2024-04-10 07:23:30,728: None
[DEBUG]2024-04-10 07:23:30,728: None
[DEBUG]2024-04-10 07:23:30,728: None
[DEBUG]2024-04-10 07:23:30,728: None
[DEBUG]2024-04-10 07:23:30,728: None
[DEBUG]2024-04-10 07:23:30,729: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:23:30,729: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:23:30,729: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:23:30,729: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:23:30,729: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:23:30,729: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:23:30,729: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:23:30,729: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:23:30,729: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:23:30,729: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:23:30,729: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:23:30,729: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:23:30,729: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:23:30,729: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:23:30,729: <re.Match object; span=(2299, 2400), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:23:30,730: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:23:30,730: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:23:30,730: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:23:30,730: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:23:30,730: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:23:30,730: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:23:30,730: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:23:30,730: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:23:30,730: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:23:30,730: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:23:30,730: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:23:30,730: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:23:30,730: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:23:30,730: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:23:30,730: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:23:30,730: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:23:30,730: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:23:30,730: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:23:30,730: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:23:30,730: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:23:30,730: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:23:30,730: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:23:30,730: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:23:30,730: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:23:30,730: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:23:30,730: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:23:30,730: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:23:30,730: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:23:30,730: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:23:30,730: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:23:30,731: None
[DEBUG]2024-04-10 07:23:30,731: None
[DEBUG]2024-04-10 07:23:30,731: None
[DEBUG]2024-04-10 07:23:30,731: None
[DEBUG]2024-04-10 07:23:30,731: None
[DEBUG]2024-04-10 07:23:30,731: None
[DEBUG]2024-04-10 07:23:30,731: None
[DEBUG]2024-04-10 07:23:30,731: None
[DEBUG]2024-04-10 07:23:30,731: None
[DEBUG]2024-04-10 07:23:30,731: None
[DEBUG]2024-04-10 07:23:30,731: None
[DEBUG]2024-04-10 07:23:30,731: None
[DEBUG]2024-04-10 07:23:30,731: None
[DEBUG]2024-04-10 07:23:30,731: None
[DEBUG]2024-04-10 07:23:30,731: None
[DEBUG]2024-04-10 07:23:30,731: None
[DEBUG]2024-04-10 07:23:30,731: None
[DEBUG]2024-04-10 07:23:30,731: None
[DEBUG]2024-04-10 07:23:30,731: None
[DEBUG]2024-04-10 07:23:30,731: None
[DEBUG]2024-04-10 07:23:30,731: None
[DEBUG]2024-04-10 07:23:30,731: None
[DEBUG]2024-04-10 07:23:30,731: None
[DEBUG]2024-04-10 07:23:30,731: None
[DEBUG]2024-04-10 07:23:30,731: None
[DEBUG]2024-04-10 07:23:30,731: None
[DEBUG]2024-04-10 07:23:30,731: None
[DEBUG]2024-04-10 07:23:30,731: None
[DEBUG]2024-04-10 07:23:30,731: None
[DEBUG]2024-04-10 07:23:30,731: None
[DEBUG]2024-04-10 07:23:30,731: None
[DEBUG]2024-04-10 07:23:30,731: None
[DEBUG]2024-04-10 07:23:30,731: None
[DEBUG]2024-04-10 07:23:30,734: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:23:30,734: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:23:30,734: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:23:30,734: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:23:30,734: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:23:30,734: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:23:30,734: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:23:30,734: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:23:30,734: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:23:30,734: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:23:30,734: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:23:30,734: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:23:30,734: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:23:30,734: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:23:30,734: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:23:30,734: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:23:30,734: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:23:30,734: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:23:30,734: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:23:30,734: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:23:30,734: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:23:30,734: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:23:30,734: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:23:30,734: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:23:30,734: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:23:30,734: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:23:30,734: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:23:30,734: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:23:30,734: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:23:30,734: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:23:30,734: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:23:30,734: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:23:30,734: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:23:30,734: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:23:30,734: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:23:30,734: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:23:30,734: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:23:30,734: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:23:30,734: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:23:30,734: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:23:30,734: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:23:30,734: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:23:30,734: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:23:30,734: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:23:30,734: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:23:30,734: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:23:30,734: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:23:30,734: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:23:30,734: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:23:30,734: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:23:30,734: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:23:30,734: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:23:30,734: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:23:30,734: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:28:48,963: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 07:28:48,963: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 07:28:48,963: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 07:28:48,965: None
[DEBUG]2024-04-10 07:28:48,965: None
[DEBUG]2024-04-10 07:28:48,965: None
[DEBUG]2024-04-10 07:28:48,965: None
[DEBUG]2024-04-10 07:28:48,965: None
[DEBUG]2024-04-10 07:28:48,966: None
[DEBUG]2024-04-10 07:28:48,966: None
[DEBUG]2024-04-10 07:28:48,966: None
[DEBUG]2024-04-10 07:28:48,966: None
[DEBUG]2024-04-10 07:28:48,966: None
[DEBUG]2024-04-10 07:28:48,966: None
[DEBUG]2024-04-10 07:28:48,966: None
[DEBUG]2024-04-10 07:28:48,966: None
[DEBUG]2024-04-10 07:28:48,966: None
[DEBUG]2024-04-10 07:28:48,967: None
[DEBUG]2024-04-10 07:28:48,967: None
[DEBUG]2024-04-10 07:28:48,967: None
[DEBUG]2024-04-10 07:28:48,967: None
[DEBUG]2024-04-10 07:28:48,967: None
[DEBUG]2024-04-10 07:28:48,967: None
[DEBUG]2024-04-10 07:28:48,968: None
[DEBUG]2024-04-10 07:28:48,968: None
[DEBUG]2024-04-10 07:28:48,968: None
[DEBUG]2024-04-10 07:28:48,968: None
[DEBUG]2024-04-10 07:28:48,968: None
[DEBUG]2024-04-10 07:28:48,968: None
[DEBUG]2024-04-10 07:28:48,968: None
[DEBUG]2024-04-10 07:28:48,968: None
[DEBUG]2024-04-10 07:28:48,968: None
[DEBUG]2024-04-10 07:28:48,968: None
[DEBUG]2024-04-10 07:28:48,968: None
[DEBUG]2024-04-10 07:28:48,968: None
[DEBUG]2024-04-10 07:28:48,968: None
[DEBUG]2024-04-10 07:28:48,968: None
[DEBUG]2024-04-10 07:28:48,968: None
[DEBUG]2024-04-10 07:28:48,969: None
[DEBUG]2024-04-10 07:28:48,969: None
[DEBUG]2024-04-10 07:28:48,969: None
[DEBUG]2024-04-10 07:28:48,969: None
[DEBUG]2024-04-10 07:28:48,969: None
[DEBUG]2024-04-10 07:28:48,969: None
[DEBUG]2024-04-10 07:28:48,969: None
[DEBUG]2024-04-10 07:28:48,969: None
[DEBUG]2024-04-10 07:28:48,969: None
[DEBUG]2024-04-10 07:28:48,970: None
[DEBUG]2024-04-10 07:28:48,970: None
[DEBUG]2024-04-10 07:28:48,970: None
[DEBUG]2024-04-10 07:28:48,970: None
[DEBUG]2024-04-10 07:28:48,970: None
[DEBUG]2024-04-10 07:28:48,970: None
[DEBUG]2024-04-10 07:28:48,970: None
[DEBUG]2024-04-10 07:28:48,970: None
[DEBUG]2024-04-10 07:28:48,970: None
[DEBUG]2024-04-10 07:28:48,970: None
[DEBUG]2024-04-10 07:28:48,971: None
[DEBUG]2024-04-10 07:28:48,971: None
[DEBUG]2024-04-10 07:28:48,971: None
[DEBUG]2024-04-10 07:28:48,971: None
[DEBUG]2024-04-10 07:28:48,971: None
[DEBUG]2024-04-10 07:28:48,971: None
[DEBUG]2024-04-10 07:28:48,971: None
[DEBUG]2024-04-10 07:28:48,971: None
[DEBUG]2024-04-10 07:28:48,971: None
[DEBUG]2024-04-10 07:28:48,971: None
[DEBUG]2024-04-10 07:28:48,971: None
[DEBUG]2024-04-10 07:28:48,971: None
[DEBUG]2024-04-10 07:28:48,971: None
[DEBUG]2024-04-10 07:28:48,971: None
[DEBUG]2024-04-10 07:28:48,971: None
[DEBUG]2024-04-10 07:28:48,971: None
[DEBUG]2024-04-10 07:28:48,971: None
[DEBUG]2024-04-10 07:28:48,971: None
[DEBUG]2024-04-10 07:28:48,971: None
[DEBUG]2024-04-10 07:28:48,971: None
[DEBUG]2024-04-10 07:28:48,971: None
[DEBUG]2024-04-10 07:28:48,971: None
[DEBUG]2024-04-10 07:28:48,971: None
[DEBUG]2024-04-10 07:28:48,972: None
[DEBUG]2024-04-10 07:28:48,972: None
[DEBUG]2024-04-10 07:28:48,972: None
[DEBUG]2024-04-10 07:28:48,972: None
[DEBUG]2024-04-10 07:28:48,972: None
[DEBUG]2024-04-10 07:28:48,972: None
[DEBUG]2024-04-10 07:28:48,972: None
[DEBUG]2024-04-10 07:28:48,972: None
[DEBUG]2024-04-10 07:28:48,972: None
[DEBUG]2024-04-10 07:28:48,972: None
[DEBUG]2024-04-10 07:28:48,972: None
[DEBUG]2024-04-10 07:28:48,972: None
[DEBUG]2024-04-10 07:28:48,972: None
[DEBUG]2024-04-10 07:28:48,973: None
[DEBUG]2024-04-10 07:28:48,973: None
[DEBUG]2024-04-10 07:28:48,973: None
[DEBUG]2024-04-10 07:28:48,973: None
[DEBUG]2024-04-10 07:28:48,973: None
[DEBUG]2024-04-10 07:28:48,973: None
[DEBUG]2024-04-10 07:28:48,973: None
[DEBUG]2024-04-10 07:28:48,973: None
[DEBUG]2024-04-10 07:28:48,973: None
[DEBUG]2024-04-10 07:28:48,973: None
[DEBUG]2024-04-10 07:28:48,973: None
[DEBUG]2024-04-10 07:28:48,973: None
[DEBUG]2024-04-10 07:28:48,973: None
[DEBUG]2024-04-10 07:28:48,973: None
[DEBUG]2024-04-10 07:28:48,974: <re.Match object; span=(2315, 2416), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:28:48,974: <re.Match object; span=(2315, 2416), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:28:48,974: <re.Match object; span=(2315, 2416), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:28:48,974: <re.Match object; span=(2315, 2416), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:28:48,974: <re.Match object; span=(2315, 2416), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:28:48,974: <re.Match object; span=(2315, 2416), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:28:48,974: <re.Match object; span=(2315, 2416), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:28:48,974: <re.Match object; span=(2315, 2416), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:28:48,974: <re.Match object; span=(2315, 2416), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:28:48,974: <re.Match object; span=(2315, 2416), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:28:48,974: <re.Match object; span=(2315, 2416), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:28:48,974: <re.Match object; span=(2315, 2416), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:28:48,974: <re.Match object; span=(2315, 2416), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:28:48,974: <re.Match object; span=(2315, 2416), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:28:48,974: <re.Match object; span=(2315, 2416), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:28:48,975: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:28:48,975: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:28:48,975: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:28:48,975: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:28:48,975: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:28:48,975: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:28:48,975: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:28:48,975: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:28:48,975: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:28:48,975: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:28:48,975: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:28:48,975: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:28:48,975: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:28:48,975: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:28:48,975: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:28:48,975: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:28:48,975: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:28:48,975: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:28:48,975: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:28:48,975: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:28:48,975: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:28:48,975: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:28:48,975: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:28:48,975: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:28:48,975: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:28:48,975: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:28:48,975: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:28:48,975: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:28:48,975: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:28:48,975: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:28:48,977: None
[DEBUG]2024-04-10 07:28:48,977: None
[DEBUG]2024-04-10 07:28:48,977: None
[DEBUG]2024-04-10 07:28:48,977: None
[DEBUG]2024-04-10 07:28:48,977: None
[DEBUG]2024-04-10 07:28:48,977: None
[DEBUG]2024-04-10 07:28:48,977: None
[DEBUG]2024-04-10 07:28:48,977: None
[DEBUG]2024-04-10 07:28:48,977: None
[DEBUG]2024-04-10 07:28:48,977: None
[DEBUG]2024-04-10 07:28:48,977: None
[DEBUG]2024-04-10 07:28:48,977: None
[DEBUG]2024-04-10 07:28:48,977: None
[DEBUG]2024-04-10 07:28:48,977: None
[DEBUG]2024-04-10 07:28:48,977: None
[DEBUG]2024-04-10 07:28:48,977: None
[DEBUG]2024-04-10 07:28:48,977: None
[DEBUG]2024-04-10 07:28:48,977: None
[DEBUG]2024-04-10 07:28:48,977: None
[DEBUG]2024-04-10 07:28:48,977: None
[DEBUG]2024-04-10 07:28:48,977: None
[DEBUG]2024-04-10 07:28:48,977: None
[DEBUG]2024-04-10 07:28:48,977: None
[DEBUG]2024-04-10 07:28:48,977: None
[DEBUG]2024-04-10 07:28:48,977: None
[DEBUG]2024-04-10 07:28:48,977: None
[DEBUG]2024-04-10 07:28:48,977: None
[DEBUG]2024-04-10 07:28:48,977: None
[DEBUG]2024-04-10 07:28:48,977: None
[DEBUG]2024-04-10 07:28:48,977: None
[DEBUG]2024-04-10 07:28:48,977: None
[DEBUG]2024-04-10 07:28:48,977: None
[DEBUG]2024-04-10 07:28:48,977: None
[DEBUG]2024-04-10 07:28:48,978: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:28:48,978: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:28:48,978: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:28:48,978: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:28:48,978: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:28:48,978: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:28:48,978: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:28:48,978: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:28:48,978: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:28:48,978: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:28:48,978: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:28:48,978: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:28:48,978: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:28:48,978: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:28:48,978: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:28:48,978: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:28:48,978: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:28:48,978: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:28:48,979: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:28:48,979: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:28:48,979: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:28:48,979: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:28:48,979: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:28:48,979: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:28:48,979: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:28:48,979: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:28:48,979: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:28:48,979: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:28:48,979: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:28:48,979: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:28:48,979: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:28:48,979: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:28:48,979: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:28:48,979: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:28:48,979: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:28:48,979: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:28:48,980: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:28:48,980: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:28:48,980: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:28:48,980: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:28:48,980: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:28:48,980: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:28:48,980: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:28:48,980: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:28:48,980: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:28:48,980: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:28:48,980: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:28:48,980: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:28:48,980: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:28:48,980: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:28:48,980: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:28:48,980: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:28:48,980: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:28:48,980: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:30:23,420: <re.Match object; span=(1085, 1866), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2024-04-10 07:30:23,420: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'PUSHED', 'NOT_PUSHED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2024-04-10 07:30:23,420: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"PUSHED",
	"NOT_PUSHED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2024-04-10 07:30:23,422: None
[DEBUG]2024-04-10 07:30:23,422: None
[DEBUG]2024-04-10 07:30:23,422: None
[DEBUG]2024-04-10 07:30:23,422: None
[DEBUG]2024-04-10 07:30:23,422: None
[DEBUG]2024-04-10 07:30:23,423: None
[DEBUG]2024-04-10 07:30:23,423: None
[DEBUG]2024-04-10 07:30:23,423: None
[DEBUG]2024-04-10 07:30:23,423: None
[DEBUG]2024-04-10 07:30:23,424: None
[DEBUG]2024-04-10 07:30:23,424: None
[DEBUG]2024-04-10 07:30:23,424: None
[DEBUG]2024-04-10 07:30:23,424: None
[DEBUG]2024-04-10 07:30:23,424: None
[DEBUG]2024-04-10 07:30:23,424: None
[DEBUG]2024-04-10 07:30:23,424: None
[DEBUG]2024-04-10 07:30:23,424: None
[DEBUG]2024-04-10 07:30:23,424: None
[DEBUG]2024-04-10 07:30:23,424: None
[DEBUG]2024-04-10 07:30:23,424: None
[DEBUG]2024-04-10 07:30:23,425: None
[DEBUG]2024-04-10 07:30:23,425: None
[DEBUG]2024-04-10 07:30:23,425: None
[DEBUG]2024-04-10 07:30:23,425: None
[DEBUG]2024-04-10 07:30:23,425: None
[DEBUG]2024-04-10 07:30:23,425: None
[DEBUG]2024-04-10 07:30:23,425: None
[DEBUG]2024-04-10 07:30:23,426: None
[DEBUG]2024-04-10 07:30:23,426: None
[DEBUG]2024-04-10 07:30:23,426: None
[DEBUG]2024-04-10 07:30:23,426: None
[DEBUG]2024-04-10 07:30:23,426: None
[DEBUG]2024-04-10 07:30:23,426: None
[DEBUG]2024-04-10 07:30:23,426: None
[DEBUG]2024-04-10 07:30:23,426: None
[DEBUG]2024-04-10 07:30:23,426: None
[DEBUG]2024-04-10 07:30:23,426: None
[DEBUG]2024-04-10 07:30:23,426: None
[DEBUG]2024-04-10 07:30:23,426: None
[DEBUG]2024-04-10 07:30:23,426: None
[DEBUG]2024-04-10 07:30:23,426: None
[DEBUG]2024-04-10 07:30:23,426: None
[DEBUG]2024-04-10 07:30:23,426: None
[DEBUG]2024-04-10 07:30:23,426: None
[DEBUG]2024-04-10 07:30:23,427: None
[DEBUG]2024-04-10 07:30:23,427: None
[DEBUG]2024-04-10 07:30:23,427: None
[DEBUG]2024-04-10 07:30:23,427: None
[DEBUG]2024-04-10 07:30:23,427: None
[DEBUG]2024-04-10 07:30:23,427: None
[DEBUG]2024-04-10 07:30:23,427: None
[DEBUG]2024-04-10 07:30:23,427: None
[DEBUG]2024-04-10 07:30:23,427: None
[DEBUG]2024-04-10 07:30:23,427: None
[DEBUG]2024-04-10 07:30:23,428: None
[DEBUG]2024-04-10 07:30:23,428: None
[DEBUG]2024-04-10 07:30:23,428: None
[DEBUG]2024-04-10 07:30:23,428: None
[DEBUG]2024-04-10 07:30:23,428: None
[DEBUG]2024-04-10 07:30:23,428: None
[DEBUG]2024-04-10 07:30:23,428: None
[DEBUG]2024-04-10 07:30:23,428: None
[DEBUG]2024-04-10 07:30:23,428: None
[DEBUG]2024-04-10 07:30:23,428: None
[DEBUG]2024-04-10 07:30:23,428: None
[DEBUG]2024-04-10 07:30:23,429: None
[DEBUG]2024-04-10 07:30:23,429: None
[DEBUG]2024-04-10 07:30:23,429: None
[DEBUG]2024-04-10 07:30:23,429: None
[DEBUG]2024-04-10 07:30:23,429: None
[DEBUG]2024-04-10 07:30:23,429: None
[DEBUG]2024-04-10 07:30:23,429: None
[DEBUG]2024-04-10 07:30:23,429: None
[DEBUG]2024-04-10 07:30:23,429: None
[DEBUG]2024-04-10 07:30:23,429: None
[DEBUG]2024-04-10 07:30:23,429: None
[DEBUG]2024-04-10 07:30:23,429: None
[DEBUG]2024-04-10 07:30:23,430: None
[DEBUG]2024-04-10 07:30:23,430: None
[DEBUG]2024-04-10 07:30:23,430: None
[DEBUG]2024-04-10 07:30:23,430: None
[DEBUG]2024-04-10 07:30:23,430: None
[DEBUG]2024-04-10 07:30:23,430: None
[DEBUG]2024-04-10 07:30:23,430: None
[DEBUG]2024-04-10 07:30:23,430: None
[DEBUG]2024-04-10 07:30:23,430: None
[DEBUG]2024-04-10 07:30:23,430: None
[DEBUG]2024-04-10 07:30:23,430: None
[DEBUG]2024-04-10 07:30:23,430: None
[DEBUG]2024-04-10 07:30:23,430: None
[DEBUG]2024-04-10 07:30:23,431: None
[DEBUG]2024-04-10 07:30:23,431: None
[DEBUG]2024-04-10 07:30:23,431: None
[DEBUG]2024-04-10 07:30:23,431: None
[DEBUG]2024-04-10 07:30:23,431: None
[DEBUG]2024-04-10 07:30:23,431: None
[DEBUG]2024-04-10 07:30:23,431: None
[DEBUG]2024-04-10 07:30:23,431: None
[DEBUG]2024-04-10 07:30:23,431: None
[DEBUG]2024-04-10 07:30:23,431: None
[DEBUG]2024-04-10 07:30:23,431: None
[DEBUG]2024-04-10 07:30:23,431: None
[DEBUG]2024-04-10 07:30:23,431: None
[DEBUG]2024-04-10 07:30:23,431: None
[DEBUG]2024-04-10 07:30:23,432: <re.Match object; span=(2315, 2416), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:30:23,432: <re.Match object; span=(2315, 2416), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:30:23,432: <re.Match object; span=(2315, 2416), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:30:23,432: <re.Match object; span=(2315, 2416), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:30:23,432: <re.Match object; span=(2315, 2416), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:30:23,432: <re.Match object; span=(2315, 2416), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:30:23,432: <re.Match object; span=(2315, 2416), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:30:23,432: <re.Match object; span=(2315, 2416), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:30:23,432: <re.Match object; span=(2315, 2416), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:30:23,432: <re.Match object; span=(2315, 2416), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:30:23,432: <re.Match object; span=(2315, 2416), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:30:23,432: <re.Match object; span=(2315, 2416), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:30:23,432: <re.Match object; span=(2315, 2416), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:30:23,432: <re.Match object; span=(2315, 2416), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:30:23,432: <re.Match object; span=(2315, 2416), match='typedef enum {\n    InitPState,\n    DRIVING_FORW>
[DEBUG]2024-04-10 07:30:23,433: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:30:23,433: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:30:23,433: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:30:23,433: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:30:23,433: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:30:23,433: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:30:23,433: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:30:23,433: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:30:23,433: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:30:23,433: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:30:23,433: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:30:23,433: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:30:23,433: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:30:23,433: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:30:23,433: ['InitPState', 'DRIVING_FORWARD', 'HIDING', 'BACKING_UP']
[DEBUG]2024-04-10 07:30:23,433: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:30:23,433: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:30:23,433: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:30:23,433: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:30:23,433: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:30:23,433: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:30:23,433: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:30:23,433: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:30:23,433: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:30:23,433: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:30:23,433: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:30:23,433: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:30:23,433: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:30:23,433: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:30:23,433: 
static const char *StateNames[] = {
	"InitPState",
	"DRIVING_FORWARD",
	"HIDING",
	"BACKING_UP",
};


[DEBUG]2024-04-10 07:30:23,434: None
[DEBUG]2024-04-10 07:30:23,434: None
[DEBUG]2024-04-10 07:30:23,434: None
[DEBUG]2024-04-10 07:30:23,434: None
[DEBUG]2024-04-10 07:30:23,434: None
[DEBUG]2024-04-10 07:30:23,434: None
[DEBUG]2024-04-10 07:30:23,434: None
[DEBUG]2024-04-10 07:30:23,434: None
[DEBUG]2024-04-10 07:30:23,434: None
[DEBUG]2024-04-10 07:30:23,434: None
[DEBUG]2024-04-10 07:30:23,434: None
[DEBUG]2024-04-10 07:30:23,434: None
[DEBUG]2024-04-10 07:30:23,434: None
[DEBUG]2024-04-10 07:30:23,434: None
[DEBUG]2024-04-10 07:30:23,434: None
[DEBUG]2024-04-10 07:30:23,434: None
[DEBUG]2024-04-10 07:30:23,435: None
[DEBUG]2024-04-10 07:30:23,435: None
[DEBUG]2024-04-10 07:30:23,435: None
[DEBUG]2024-04-10 07:30:23,435: None
[DEBUG]2024-04-10 07:30:23,435: None
[DEBUG]2024-04-10 07:30:23,435: None
[DEBUG]2024-04-10 07:30:23,435: None
[DEBUG]2024-04-10 07:30:23,435: None
[DEBUG]2024-04-10 07:30:23,435: None
[DEBUG]2024-04-10 07:30:23,435: None
[DEBUG]2024-04-10 07:30:23,435: None
[DEBUG]2024-04-10 07:30:23,435: None
[DEBUG]2024-04-10 07:30:23,435: None
[DEBUG]2024-04-10 07:30:23,435: None
[DEBUG]2024-04-10 07:30:23,435: None
[DEBUG]2024-04-10 07:30:23,435: None
[DEBUG]2024-04-10 07:30:23,435: None
[DEBUG]2024-04-10 07:30:23,436: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:30:23,436: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:30:23,436: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:30:23,436: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:30:23,436: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:30:23,436: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:30:23,436: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:30:23,436: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:30:23,436: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:30:23,436: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:30:23,436: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:30:23,436: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:30:23,436: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:30:23,436: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:30:23,436: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:30:23,436: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:30:23,436: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:30:23,436: <re.Match object; span=(1591, 1680), match='typedef enum {\n    InitPSubState,\n    drive,\n >
[DEBUG]2024-04-10 07:30:23,437: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:30:23,437: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:30:23,437: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:30:23,437: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:30:23,437: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:30:23,437: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:30:23,437: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:30:23,437: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:30:23,437: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:30:23,437: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:30:23,437: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:30:23,437: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:30:23,437: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:30:23,437: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:30:23,437: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:30:23,437: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:30:23,437: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:30:23,437: ['InitPSubState', 'drive', 'stop', 'spin']
[DEBUG]2024-04-10 07:30:23,438: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:30:23,438: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:30:23,438: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:30:23,438: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:30:23,438: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:30:23,438: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:30:23,438: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:30:23,438: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:30:23,438: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:30:23,438: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:30:23,438: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:30:23,438: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:30:23,438: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:30:23,438: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:30:23,438: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:30:23,438: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:30:23,438: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


[DEBUG]2024-04-10 07:30:23,438: 
static const char *StateNames[] = {
	"InitPSubState",
	"drive",
	"stop",
	"spin",
};


